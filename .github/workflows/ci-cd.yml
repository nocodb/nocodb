# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# Trigger configuration : https://gist.github.com/myobie/671d2f2a1e503efa0c05e7b865c26a9d

name: "CI/CD"
on:
    push:
        branches: [develop]
        paths:
            - "packages/nc-gui/**"
            - "packages/nocodb/**"
            - ".github/workflows/ci-cd.yml"
            - "tests/playwright/**"
    pull_request:
        types: [opened, reopened, synchronize, ready_for_review, labeled]
        branches: [develop]
        paths:
            - "packages/nc-gui/**"
            - "packages/nocodb/**"
            - ".github/workflows/ci-cd.yml"
            - ".github/workflows/playwright-test-workflow.yml"            
            - "tests/playwright/**"
    # Triggered manually
    workflow_dispatch:    

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
    unit-tests-pg:
      runs-on: [self-hosted, aws]
      timeout-minutes: 80
      if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
      steps:
        - name: Setup Node
          uses: actions/setup-node@v3
          with:
            node-version: 16.15.0
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Set CI env
          run: export CI=true
        - name: Set Node env
          run: export NODE_OPTIONS=\"--max_old_space_size=16384\";
        - name: Cache node modules
          uses: actions/cache@v3
          env:
            cache-name: cache-node-modules

          with:
            # npm cache files are stored in `~/.npm` on Linux/macOS
            path: ~/.npm
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-
        - name: install dependencies nocodb-sdk
          working-directory: ./packages/nocodb-sdk
          run: npm install
        - name: build nocodb-sdk
          working-directory: ./packages/nocodb-sdk
          run: npm run build:ce:main
        - name: Install dependencies
          working-directory: ./packages/nocodb
          run: npm install
        - name: run unit tests
          working-directory: ./packages/nocodb
          run: npm run test:unit:pg
    playwright-pg-shard-1:
      if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
      uses: ./.github/workflows/playwright-test-workflow.yml
      with:
        db: pg
        shard: 1
    playwright-pg-shard-2:
      if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
      uses: ./.github/workflows/playwright-test-workflow.yml
      with:
        db: pg
        shard: 2
    playwright-pg-shard-3:
      if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
      uses: ./.github/workflows/playwright-test-workflow.yml
      with:
        db: pg
        shard: 3
#    playwright-pg-shard-4:
#      if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
#      uses: ./.github/workflows/playwright-test-workflow.yml
#      with:
#        db: pg
#        shard: 4