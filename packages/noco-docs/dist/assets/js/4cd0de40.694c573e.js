"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[1730],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=a.createContext({}),d=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=d(r),m=l,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return r?a.createElement(f,n(n({ref:t},p),{},{components:r})):a.createElement(f,n({ref:t},p))}));function f(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=r.length,n=new Array(o);n[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:l,n[1]=i;for(var d=2;d<o;d++)n[d]=r[d];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5848:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>n,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=r(87462),l=(r(67294),r(3905));const o={title:"Barcode",tags:["Fields","Field types","Custom types","Barcode"]},n=void 0,i={unversionedId:"fields/field-types/custom-types/barcode",id:"fields/field-types/custom-types/barcode",title:"Barcode",description:"Barcode is a custom field type that allows you to generate a barcode from a string value. This is useful for generating barcodes for things like URLs, phone numbers, or other data that can be represented as a string.",source:"@site/docs/070.fields/040.field-types/050.custom-types/050.barcode.md",sourceDirName:"070.fields/040.field-types/050.custom-types",slug:"/fields/field-types/custom-types/barcode",permalink:"/fields/field-types/custom-types/barcode",draft:!1,editUrl:"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/docs/070.fields/040.field-types/050.custom-types/050.barcode.md",tags:[{label:"Fields",permalink:"/tags/fields"},{label:"Field types",permalink:"/tags/field-types"},{label:"Custom types",permalink:"/tags/custom-types"},{label:"Barcode",permalink:"/tags/barcode"}],version:"current",sidebarPosition:50,frontMatter:{title:"Barcode",tags:["Fields","Field types","Custom types","Barcode"]},sidebar:"tutorialSidebar",previous:{title:"QR code",permalink:"/fields/field-types/custom-types/QR-code"},next:{title:"Geometry",permalink:"/fields/field-types/custom-types/geometry"}},s={},d=[{value:"Create a barcode field",id:"create-a-barcode-field",level:2},{value:"Cell display",id:"cell-display",level:3},{value:"Supported barcode types",id:"supported-barcode-types",level:3},{value:"Related fields",id:"related-fields",level:2}],p={toc:d},c="wrapper";function u(e){let{components:t,...o}=e;return(0,l.kt)(c,(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Barcode")," is a custom field type that allows you to generate a barcode from a string value. This is useful for generating barcodes for things like URLs, phone numbers, or other data that can be represented as a string."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image",src:r(66907).Z,width:"1266",height:"594"})),(0,l.kt)("p",null,"The following field types are supported for the for reference field:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Formula"),(0,l.kt)("li",{parentName:"ul"},"Single Line Text"),(0,l.kt)("li",{parentName:"ul"},"Long Text"),(0,l.kt)("li",{parentName:"ul"},"Phone Number"),(0,l.kt)("li",{parentName:"ul"},"URL"),(0,l.kt)("li",{parentName:"ul"},"Email")),(0,l.kt)("h2",{id:"create-a-barcode-field"},"Create a barcode field"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Click on ",(0,l.kt)("inlineCode",{parentName:"li"},"+")," icon to the right of ",(0,l.kt)("inlineCode",{parentName:"li"},"Fields header")),(0,l.kt)("li",{parentName:"ol"},"[",(0,l.kt)("strong",{parentName:"li"},"Optional"),"]"," On the dropdown modal, enter the field name."),(0,l.kt)("li",{parentName:"ol"},"Select the field type as ",(0,l.kt)("inlineCode",{parentName:"li"},"Barcode")," from the dropdown."),(0,l.kt)("li",{parentName:"ol"},"Select the field to be used as the source for the barcode."),(0,l.kt)("li",{parentName:"ol"},"Select the barcode type from the dropdown."),(0,l.kt)("li",{parentName:"ol"},"Click on ",(0,l.kt)("inlineCode",{parentName:"li"},"Save Column")," button.")),(0,l.kt)("h3",{id:"cell-display"},"Cell display"),(0,l.kt)("p",null,"Cell displays the barcode generated from the source field. Click on the cell to open enlarged view of the QR code."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image",src:r(30518).Z,width:"948",height:"546"}),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("img",{alt:"image",src:r(30986).Z,width:"946",height:"386"}),"  "),(0,l.kt)("h3",{id:"supported-barcode-types"},"Supported barcode types"),(0,l.kt)("p",null,"NocoDB supports the following barcode types for the barcode field type."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"CODE128 "),(0,l.kt)("li",{parentName:"ul"},"EAN"),(0,l.kt)("li",{parentName:"ul"},"EAN-13"),(0,l.kt)("li",{parentName:"ul"},"EAN-8"),(0,l.kt)("li",{parentName:"ul"},"EAN-5"),(0,l.kt)("li",{parentName:"ul"},"EAN-2"),(0,l.kt)("li",{parentName:"ul"},"UPC (A)"),(0,l.kt)("li",{parentName:"ul"},"CODE39"),(0,l.kt)("li",{parentName:"ul"},"ITF-14"),(0,l.kt)("li",{parentName:"ul"},"MSI"),(0,l.kt)("li",{parentName:"ul"},"Pharma code"),(0,l.kt)("li",{parentName:"ul"},"Coda bar")),(0,l.kt)("h2",{id:"related-fields"},"Related fields"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/fields/field-types/custom-types/QR-code"},"QR code"))))}u.isMDXComponent=!0},30518:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/barcode-cell-5e6612ed1460a61d5e51629f7b068d35.png"},30986:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/barcode-expand-29f49619f7b7dd014841681482c8a8af.png"},66907:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/barcode-cfb8c7c7c1b36117936f6faebfe6c05c.png"}}]);