"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[305],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(h,l(l({ref:t},c),{},{components:n})):o.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<r;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},73842:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var o=n(87462),a=(n(67294),n(3905));const r={title:"Link To Another Record",description:"Understanding Link To Another Record (LTAR) Columns!"},l=void 0,i={unversionedId:"setup-and-usages/link-to-another-record",id:"version-0.109.7/setup-and-usages/link-to-another-record",title:"Link To Another Record",description:"Understanding Link To Another Record (LTAR) Columns!",source:"@site/versioned_docs/version-0.109.7/030.setup-and-usages/060.link-to-another-record.md",sourceDirName:"030.setup-and-usages",slug:"/setup-and-usages/link-to-another-record",permalink:"/0.109.7/setup-and-usages/link-to-another-record",draft:!1,editUrl:"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/versioned_docs/version-0.109.7/030.setup-and-usages/060.link-to-another-record.md",tags:[],version:"0.109.7",sidebarPosition:60,frontMatter:{title:"Link To Another Record",description:"Understanding Link To Another Record (LTAR) Columns!"},sidebar:"tutorialSidebar",previous:{title:"Code Snippets",permalink:"/0.109.7/setup-and-usages/code-snippets"},next:{title:"Lookup",permalink:"/0.109.7/setup-and-usages/lookup"}},s={},p=[{value:"Relationship types:",id:"relationship-types",level:3},{value:"Adding a relationship",id:"adding-a-relationship",level:2},{value:"1. Create column",id:"1-create-column",level:3},{value:"2. Update column name",id:"2-update-column-name",level:3},{value:"3. Select column type",id:"3-select-column-type",level:3},{value:"4. Choose relationship type",id:"4-choose-relationship-type",level:3},{value:"5. Select child table from drop down menu",id:"5-select-child-table-from-drop-down-menu",level:3},{value:"6. Click on &#39;Save&#39;",id:"6-click-on-save",level:3},{value:"Updating linked records",id:"updating-linked-records",level:2},{value:"1. Open link record tab",id:"1-open-link-record-tab",level:3},{value:"2. Select from the option displayed",id:"2-select-from-the-option-displayed",level:3},{value:"3. Column mapping showing &quot;Has Many&quot; relationship",id:"3-column-mapping-showing-has-many-relationship",level:3},{value:"4. Column mapping for &quot;Belongs to&quot; relationship Automatically updated",id:"4-column-mapping-for-belongs-to-relationship-automatically-updated",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"relationship-types"},"Relationship types:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"One to one",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A Table record in first table is related to only one record of second table."),(0,a.kt)("li",{parentName:"ul"},"Example: Country has a capital city"))),(0,a.kt)("li",{parentName:"ul"},"One to many",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A Table record in first table is related to more than one record of second table. But second table record maps to only one entry of first table"),(0,a.kt)("li",{parentName:"ul"},"NocoDB refers to this category of relationship as ",(0,a.kt)("strong",{parentName:"li"},"has many")),(0,a.kt)("li",{parentName:"ul"},"For every ",(0,a.kt)("strong",{parentName:"li"},"has many")," relation defined, NocoDB augments ",(0,a.kt)("strong",{parentName:"li"},"belongs to")," relationship column in the other table automatically"),(0,a.kt)("li",{parentName:"ul"},"Example: Country ",(0,a.kt)("strong",{parentName:"li"},"has many")," Cities. (other way mapping > City ",(0,a.kt)("strong",{parentName:"li"},"belongs to")," Country )"))),(0,a.kt)("li",{parentName:"ul"},"Many to many",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A Table record in first table is related to more than one record of second table; second table record can also map to more than on record of first table."),(0,a.kt)("li",{parentName:"ul"},"NocoDB refers to this category of relationship as ",(0,a.kt)("strong",{parentName:"li"},"many to many")),(0,a.kt)("li",{parentName:"ul"},"For every ",(0,a.kt)("strong",{parentName:"li"},"many to many")," relation defined between tables, NocoDB augments ",(0,a.kt)("strong",{parentName:"li"},"many to many")," relationship column in the other table automatically"),(0,a.kt)("li",{parentName:"ul"},"Example: Film ",(0,a.kt)("strong",{parentName:"li"},"has many")," Actors. Actor ",(0,a.kt)("strong",{parentName:"li"},"has many")," Films (works on many films)")))),(0,a.kt)("p",null,"Further details of relationship types can be found ",(0,a.kt)("a",{parentName:"p",href:"https://afteracademy.com/blog/what-are-the-different-types-of-relationships-in-dbms"},"here")),(0,a.kt)("p",null,"Relationships between table records can be established by using ",(0,a.kt)("strong",{parentName:"p"},"LinkToAnotherRecord")," column type.\nWorkflow details are captured below"),(0,a.kt)("h2",{id:"adding-a-relationship"},"Adding a relationship"),(0,a.kt)("img",{width:"1016",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189105583-20014dd9-e5a6-4f27-b03c-97fad9096b5f.png"}),(0,a.kt)("h3",{id:"1-create-column"},"1. Create column"),(0,a.kt)("p",null,"Click on '+' button at end of column headers"),(0,a.kt)("h3",{id:"2-update-column-name"},"2. Update column name"),(0,a.kt)("p",null,"Input name in the text box provided"),(0,a.kt)("h3",{id:"3-select-column-type"},"3. Select column type"),(0,a.kt)("p",null,'Select Column type as "LinkToAnotherRecord" from the drop-down menu'),(0,a.kt)("h3",{id:"4-choose-relationship-type"},"4. Choose relationship type"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"'Has Many' corresponds to the 'One-to-many' relationships"),(0,a.kt)("li",{parentName:"ul"},"'Many To Many' corresponds to the 'Many-to-many' relationships")),(0,a.kt)("h3",{id:"5-select-child-table-from-drop-down-menu"},"5. Select child table from drop down menu"),(0,a.kt)("h3",{id:"6-click-on-save"},"6. Click on 'Save'"),(0,a.kt)("p",null,"A new column will get created in both the parent table & child table"),(0,a.kt)("h2",{id:"updating-linked-records"},"Updating linked records"),(0,a.kt)("h3",{id:"1-open-link-record-tab"},"1. Open link record tab"),(0,a.kt)("p",null,"Click on the '+' icon in corresponding row - cell"),(0,a.kt)("img",{width:"750",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189106326-90e46156-798d-4a01-a4eb-4e991ce94c03.png"}),(0,a.kt)("h3",{id:"2-select-from-the-option-displayed"},"2. Select from the option displayed"),(0,a.kt)("p",null,"Use 'Filter box' to narrow down on search items\nYou can opt to insert a new record as well, using \"+ New Record\" button"),(0,a.kt)("img",{width:"1014",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189106494-4b49a200-a44f-41ae-8b54-93b18d867a04.png"}),(0,a.kt)("h3",{id:"3-column-mapping-showing-has-many-relationship"},'3. Column mapping showing "Has Many" relationship'),(0,a.kt)("p",null,"Sheet1 'has many' Sheet2"),(0,a.kt)("img",{width:"756",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189106702-3b8d7a50-08f4-4a04-b2cb-16db0cf667b3.png"}),(0,a.kt)("h3",{id:"4-column-mapping-for-belongs-to-relationship-automatically-updated"},'4. Column mapping for "Belongs to" relationship ',"[Automatically updated]"),(0,a.kt)("p",null,"Sheet2 'belongs to' Sheet1"),(0,a.kt)("img",{width:"574",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189106731-59e5bc3c-bcc5-4796-b5b2-d9b5418bfe2b.png"}))}u.isMDXComponent=!0}}]);