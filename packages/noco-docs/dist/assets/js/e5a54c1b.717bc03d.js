"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[7283],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),d=i,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=r.length,a=new Array(l);a[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:i,a[1]=o;for(var c=2;c<l;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},39110:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const l={title:"Number",tags:["Fields","Field types","Numerical types","Number"]},a=void 0,o={unversionedId:"fields/field-types/numerical/number",id:"fields/field-types/numerical/number",title:"Number",description:"Number field type is used to store numerical values. Use cases include storing age, salary, price, quantity, etc.",source:"@site/docs/070.fields/040.field-types/020.numerical/010.number.md",sourceDirName:"070.fields/040.field-types/020.numerical",slug:"/fields/field-types/numerical/number",permalink:"/fields/field-types/numerical/number",draft:!1,editUrl:"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/docs/070.fields/040.field-types/020.numerical/010.number.md",tags:[{label:"Fields",permalink:"/tags/fields"},{label:"Field types",permalink:"/tags/field-types"},{label:"Numerical types",permalink:"/tags/numerical-types"},{label:"Number",permalink:"/tags/number"}],version:"current",sidebarPosition:10,frontMatter:{title:"Number",tags:["Fields","Field types","Numerical types","Number"]},sidebar:"tutorialSidebar",previous:{title:"URL",permalink:"/fields/field-types/text-based/url"},next:{title:"Decimal",permalink:"/fields/field-types/numerical/decimal"}},s={},c=[{value:"Create a number field",id:"create-a-number-field",level:2},{value:"Similar numerical fields",id:"similar-numerical-fields",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...l}=e;return(0,i.kt)(u,(0,n.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Number")," field type is used to store numerical values. Use cases include storing ",(0,i.kt)("inlineCode",{parentName:"p"},"age"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"salary"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"price"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"quantity"),", etc."),(0,i.kt)("h2",{id:"create-a-number-field"},"Create a number field"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Click on ",(0,i.kt)("inlineCode",{parentName:"li"},"+")," icon to the right of ",(0,i.kt)("inlineCode",{parentName:"li"},"Fields header")),(0,i.kt)("li",{parentName:"ol"},"[",(0,i.kt)("strong",{parentName:"li"},"Optional"),"]"," On the dropdown modal, enter the field name."),(0,i.kt)("li",{parentName:"ol"},"Select the field type as ",(0,i.kt)("inlineCode",{parentName:"li"},"Number")," from the dropdown."),(0,i.kt)("li",{parentName:"ol"},"[",(0,i.kt)("strong",{parentName:"li"},"Optional"),"]"," Set default value for the field."),(0,i.kt)("li",{parentName:"ol"},"Click on ",(0,i.kt)("inlineCode",{parentName:"li"},"Save Column")," button.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:r(67604).Z,width:"1266",height:"549"})),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"This field type can hold both positive and negative numbers."),(0,i.kt)("li",{parentName:"ul"},"Supported range (JavaScript): -9007199254740991 to 9007199254740991"))),(0,i.kt)("h2",{id:"similar-numerical-fields"},"Similar numerical fields"),(0,i.kt)("p",null,"Following are the other numerical fields available in NocoDB, with some custom add-on features."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/fields/field-types/numerical/decimal"},"Decimal")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/fields/field-types/numerical/percent"},"Percent")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/fields/field-types/numerical/currency"},"Currency"))))}m.isMDXComponent=!0},67604:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/number-0cef1c4d333a56e19e4f34872d1c6b04.png"}}]);