{
  "name": "nocodb",
  "version": "0.111.4",
  "description": "NocoDB Backend",
  "main": "dist/bundle.js",
  "author": {
    "name": "NocoDB Inc",
    "url": "https://nocodb.com/"
  },
  "homepage": "https://github.com/nocodb/nocodb",
  "repository": {
    "type": "git",
    "url": "https://github.com/nocodb/nocodb.git"
  },
  "bugs": {
    "url": "https://github.com/nocodb/nocodb/issues"
  },
  "engines": {
    "node": ">=18"
  },
  "license": "AGPL-3.0-or-later",
  "scripts": {
    "build": "pnpm run docker:build",
    "build:obfuscate": "EE=true webpack  --config webpack.config.js",
    "obfuscate:build:publish": "pnpm run build:obfuscate && pnpm publish .",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "pnpm run watch:run",
    "start:prod": "node docker/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "watch:run": "cross-env NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/run/docker --log-error --project tsconfig.json\"",
    "watch:run:ee": "cross-env NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/ee/run/docker --log-error --project tsconfig.ee.json\" | pino-pretty",
    "watch:run:mysql": "cross-env  NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/run/dockerRunMysql --log-error --project tsconfig.json\"",
    "watch:run:mysql:ee": "cross-env  NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/ee/run/dockerRunMysql --log-error --project tsconfig.ee.json\"  | pino-pretty",
    "watch:run:pg": "cross-env  NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/run/dockerRunPG --log-error --project tsconfig.json\"",
    "watch:run:pg:ee": "cross-env  NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/ee/run/dockerRunPG --log-error --project tsconfig.ee.json\" | pino-pretty",
    "watch:run:playwright:mysql": "rm -f ./test_noco.db; cross-env NC_DB=\"mysql2://localhost:3306?u=root&p=password&d=pw_ncdb\" PLAYWRIGHT_TEST=true NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/run/testDocker --log-error --project tsconfig.json\"",
    "watch:run:playwright:pg": "rm -f ./test_noco.db; cross-env NC_DB=\"pg://localhost:5432?u=postgres&p=password&d=pw_ncdb\" PLAYWRIGHT_TEST=true NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/run/testDocker --log-error --project tsconfig.json\"",
    "watch:run:playwright:pg:ee": "rm -f ./test_noco.db; cross-env NC_DB=\"pg://localhost:5432?u=postgres&p=password&d=pw_ncdb1\" PLAYWRIGHT_TEST=true NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/ee/run/testDocker --log-error --project tsconfig.ee.json\"  | pino-pretty",
    "watch:run:playwright": "rm -f ./test_noco.db; cross-env DATABASE_URL=sqlite:./test_noco.db PLAYWRIGHT_TEST=true NC_DISABLE_TELE=true EE=true NC_SNAPSHOT_WINDOW_SEC=3 nodemon -e ts,js -w ./src -x \"ts-node src/run/testDocker --log-error --project tsconfig.json\"",
    "watch:run:playwright:quick": "rm -f ./test_noco.db; cp ../../tests/playwright/fixtures/noco_0_91_7.db ./test_noco.db; cross-env DATABASE_URL=sqlite:./test_noco.db NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/run/docker --log-error --project tsconfig.json\"",
    "watch:run:playwright:pg:cyquick": "rm -f ./test_noco.db; cp ../../tests/playwright/fixtures/noco_0_91_7.db ./test_noco.db; cross-env NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/run/dockerRunPG_CyQuick.ts --log-error --project tsconfig.json\"",
    "test:unit": "cross-env TS_NODE_PROJECT=./tests/unit/tsconfig.json mocha -r ts-node/register   tests/unit/index.test.ts --recursive --timeout 300000  --exit --delay",
    "test:unit:pg": "cp tests/unit/.pg.env tests/unit/.env; cross-env TS_NODE_PROJECT=./tests/unit/tsconfig.json mocha -r ts-node/register   tests/unit/index.test.ts --recursive --timeout 300000  --exit --delay",
    "test:unit:pg:ee": "cp tests/unit/.pg.env tests/unit/.env; cross-env EE=true TS_NODE_PROJECT=./tests/unit/tsconfig.ee.json mocha -r ts-node/register   tests/unit/index.test.ts --recursive --timeout 300000  --exit --delay",
    "docker:build": "EE=\"true-xc-test\" webpack  --config docker/webpack.config.js"
  },
  "dependencies": {
    "@aws-sdk/client-kafka": "^3.410.0",
    "@aws-sdk/client-s3": "^3.423.0",
    "@aws-sdk/lib-storage": "^3.451.0",
    "@aws-sdk/s3-request-presigner": "^3.423.0",
    "@google-cloud/storage": "^7.1.0",
    "@graphql-tools/merge": "^6.2.17",
    "@jm18457/kafkajs-msk-iam-authentication-mechanism": "^3.1.2",
    "@nestjs/bull": "^10.0.1",
    "@nestjs/common": "^10.2.10",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.2.10",
    "@nestjs/event-emitter": "^2.0.3",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "^2.0.4",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.2.10",
    "@nestjs/platform-socket.io": "^10.2.10",
    "@nestjs/serve-static": "^4.0.0",
    "@nestjs/throttler": "^5.0.0",
    "@nestjs/websockets": "^10.2.10",
    "@node-saml/passport-saml": "^4.0.4",
    "@ntegral/nestjs-sentry": "^4.0.0",
    "@sentry/node": "^6.19.7",
    "@techpass/passport-openidconnect": "^0.3.3",
    "@types/chai": "^4.3.11",
    "airtable": "^0.12.2",
    "ajv": "^8.12.0",
    "ajv-formats": "^2.1.1",
    "archiver": "^5.0.2",
    "auto-bind": "^4.0.0",
    "aws-jwt-verify": "^4.0.0",
    "aws-kcl": "^2.2.4",
    "aws-sdk": "^2.1455.0",
    "axios": "^1.6.7",
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.20.2",
    "boxen": "^5.1.2",
    "bull": "^4.12.2",
    "bullmq": "^1.91.1",
    "clear": "^0.1.0",
    "clickhouse": "^2.6.0",
    "clickhouse-migrations": "^0.1.14",
    "colors": "^1.4.0",
    "compare-versions": "^6.1.0",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "cron": "^1.8.2",
    "crypto-js": "^4.2.0",
    "dataloader": "^2.0.0",
    "dayjs": "^1.11.10",
    "debug": "^4.3.4",
    "disposable-email-domains": "^1.0.62",
    "dotenv": "^8.2.0",
    "ejs": "^3.1.9",
    "emittery": "^0.7.2",
    "express": "^4.18.2",
    "extract-zip": "^2.0.1",
    "fast-levenshtein": "^2.0.6",
    "fs-extra": "^9.0.1",
    "glob": "^7.2.3",
    "graphql": "^15.3.0",
    "graphql-depth-limit": "^1.1.0",
    "graphql-type-json": "^0.3.2",
    "handlebars": "^4.7.8",
    "html-to-json-parser": "^2.0.0",
    "import-fresh": "^3.3.0",
    "inflection": "^1.12.0",
    "ioredis": "^5.3.2",
    "ioredis-mock": "^8.8.3",
    "is-docker": "^2.2.1",
    "isomorphic-dompurify": "^0.19.0",
    "jsep": "^1.3.8",
    "json5": "^2.2.3",
    "jsonfile": "^6.1.0",
    "jsonwebtoken": "^9.0.2",
    "kafkajs": "^2.2.4",
    "knex": "2.4.2",
    "libxmljs": "^1.0.11",
    "list-github-dir-content": "^3.0.0",
    "lodash": "^4.17.21",
    "lru-cache": "^6.0.0",
    "mailersend": "^1.5.0",
    "marked": "^4.3.0",
    "minio": "^7.1.3",
    "mkdirp": "^2.1.6",
    "morgan": "^1.10.0",
    "mssql": "^10.0.2",
    "multer": "^1.4.5-lts.1",
    "mysql2": "^3.6.5",
    "nanoid": "^3.3.7",
    "nc-help": "0.3.1",
    "nc-lib-gui": "0.111.4",
    "nc-plugin": "^0.1.3",
    "ncp": "^2.0.0",
    "nestjs-kafka": "^1.0.6",
    "nestjs-pino": "^3.5.0",
    "nestjs-throttler-storage-redis": "^0.3.3",
    "nocodb-sdk": "workspace:^",
    "nodemailer": "^6.9.8",
    "object-hash": "^3.0.0",
    "object-sizeof": "^2.6.4",
    "openai": "^3.2.1",
    "os-locale": "^6.0.2",
    "p-queue": "^6.6.2",
    "papaparse": "^5.4.1",
    "parse-database-url": "^0.3.0",
    "passport": "^0.6.0",
    "passport-auth-token": "^1.0.1",
    "passport-custom": "^1.1.1",
    "passport-github": "^1.1.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-http": "^0.3.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.10.0",
    "pino-http": "^8.5.0",
    "posthog-node": "^3.1.2",
    "redlock": "^5.0.0-beta.2",
    "reflect-metadata": "^0.1.14",
    "request": "^2.88.2",
    "request-filtering-agent": "^1.1.2",
    "request-ip": "^3.3.0",
    "rmdir": "^1.2.0",
    "rxjs": "^7.2.0",
    "slash": "^3.0.0",
    "slug": "^8.2.3",
    "socket.io": "^4.7.4",
    "sql-query-identifier": "^2.5.0",
    "sqlite3": "^5.1.7",
    "tedious": "^16.6.1",
    "tinycolor2": "^1.4.2",
    "twilio": "^3.55.1",
    "unique-names-generator": "^4.7.1",
    "uuid": "^9.0.1",
    "validator": "^13.1.17",
    "xc-core-ts": "^0.1.0",
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.2.1",
    "@nestjs/schematics": "^10.0.3",
    "@nestjs/testing": "^10.2.10",
    "@nestjsplus/dyn-schematics": "^1.0.12",
    "@types/ejs": "^3.1.5",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.11",
    "@types/mocha": "^10.0.6",
    "@types/multer": "^1.4.11",
    "@types/node": "20.3.3",
    "@types/passport-google-oauth20": "^2.0.14",
    "@types/passport-jwt": "^3.0.13",
    "@types/supertest": "^2.0.16",
    "@typescript-eslint/eslint-plugin": "^6.11.0",
    "@typescript-eslint/parser": "^6.11.0",
    "chai": "^4.2.0",
    "copy-webpack-plugin": "^11.0.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.33.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-functional": "^5.0.8",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "29.5.0",
    "mocha": "^10.1.0",
    "nodemon": "^3.0.2",
    "pino-pretty": "^10.3.1",
    "prettier": "^2.8.8",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "29.0.5",
    "ts-loader": "^9.2.9",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.3",
    "webpack-cli": "^5.1.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
