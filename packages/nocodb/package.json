{
  "name": "nocodb",
  "version": "0.90.8",
  "description": "NocoDB",
  "main": "dist/bundle.js",
  "repository": "https://github.com/nocodb/nocodb",
  "license": "AGPL-3.0-or-later",
  "keywords": [],
  "scripts": {
    "describe": "npm-scripts-info",
    "build": "run-s clean && run-p build:*",
    "build:obfuscate": "EE=true webpack  --config webpack.config.js",
    "build:main": "tsc -p tsconfig.json",
    "build:module": "tsc -p tsconfig.module.json",
    "obfuscate:build:publish": "npm run build:obfuscate && npm publish .",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" --write",
    "lint": "eslint src --ext .ts",
    "test": "cross-env TS_NODE_PROJECT=tsconfig.json mocha -r ts-node/register   src/__tests__/**/*.test.ts --recursive",
    "local:test:graphql": "cross-env DATABASE_URL=mysql://root:password@localhost:3306/sakila TS_NODE_PROJECT=tsconfig.json mocha -r ts-node/register   src/__tests__/graphql.test.ts --recursive --timeout 10000  --exit",
    "test:graphql": "cross-env TS_NODE_PROJECT=tsconfig.json mocha -r ts-node/register   src/__tests__/graphql.test.ts --recursive --timeout 10000  --exit",
    "test:grpc": "cross-env TS_NODE_PROJECT=tsconfig.json mocha -r ts-node/register   src/__tests__/grpc.test.ts --recursive --timeout 10000  --exit",
    "local:test:rest": "cross-env DATABASE_URL=mysql://root:password@localhost:3306/sakila  TS_NODE_PROJECT=tsconfig.json mocha -r ts-node/register   src/__tests__/rest.test.ts --recursive --timeout 10000  --exit",
    "test:rest": "cross-env TS_NODE_PROJECT=tsconfig.json mocha -r ts-node/register   src/__tests__/rest.test.ts --recursive --timeout 10000  --exit",
    "test1": "run-s build test:*",
    "test:lint": "tslint --project . && prettier \"src/**/*.ts\" --list-different",
    "test:unit": "nyc --silent ava",
    "watch": "run-s clean build:main && run-p \"build:main -- -w\" \"test:unit -- --watch\"",
    "cov": "run-s build test:unit cov:html && open-cli coverage/index.html",
    "cov:html": "nyc report --reporter=html",
    "cov:send": "nyc report --reporter=lcov && codecov",
    "cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100",
    "doc": "run-s doc:html && open-cli build/docs/index.html",
    "doc:html": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "version": "standard-version",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "clean": "trash build src/test",
    "prepare-release": "run-s reset src/test cov:check doc:html version doc:publish",
    "start-graphql": "ts-node src/example/index.gql.ts",
    "start-rest": "ts-node src/example/index.rest.ts",
    "start-grpc": "ts-node src/example/index.grpc.ts",
    "start-api": "ts-node src/example/index.ts",
    "start-xc-tool-api": "ts-node src/example/xc-tool-apis.ts",
    "docker-test": "node docker/index.js",
    "test:dev:travis": "cross-env NODE_ENV=dev npm run test:rest && NODE_ENV=dev npm run test:graphql && NODE_ENV=dev npm run test:grpc",
    "test:travis": "cross-env NODE_ENV=test npm run test:rest && NODE_ENV=test npm run test:graphql && NODE_ENV=test npm run test:grpc",
    "local": "node --expose-gc --max-old-space-size=1024 docker/index.js",
    "local-reset": "rm noco.db && npm run local",
    "debug-local-build": "NODE_ENV=dev node docker/main.js",
    "debug-local": "NODE_ENV=dev node docker/index.js",
    "test-rpc": " node docker/index-grpc.js",
    "postbuild": "npm run copy-files",
    "copy-files": "copyfiles -u 1 \"src/**/*.ejs\" build/main && copyfiles -u 1 \"src/**/*.ejs\" build/module && copyfiles -u 1 \"src/**/*.ejs\" docker",
    "docker:build": "EE=\"true-xc-test\" webpack  --config docker/webpack.config.js",
    "docker:image:build": "docker build . -t nocodb/nocodb:latest -t nocodb/nocodb:0.10.0 --no-cache",
    "docker:image:buildx": "docker buildx build . --platform linux/arm64 -t nocodb/nocodb:arm64 --no-cache",
    "docker:image:deploy": "docker push nocodb/nocodb:latest && docker push  nocodb/nocodb:0.10.0",
    "docker:build:publish:image": "npm run build && npm run docker:build && npm run docker:image:build",
    "docker:s3:image:build": "docker build . --file litestream/Dockerfile -t xgenecloud/xc-s3:latest -t xgenecloud/xc-s3:0.0.1 --no-cache",
    "docker:s3:image:deploy": "docker push xgenecloud/xc-s3:latest && docker push  xgenecloud/xc-s3:0.0.1",
    "docker:s3:build:publish:image": "npm run build && npm run docker:build && npm run docker:s3:image:build  && npm run docker:s3:image:deploy",
    "docker:oracle:image:build": "docker build . -t xc-instant-oracle -f Dockerfile-ORACLE --no-cache",
    "help:a": "node docker/test",
    "help:seed": "ts-node ./src/example/seedts.ts",
    "help:c": "ts-node ./help/a",
    "watch:build": "nodemon -e ts,js -w ./src -x npm run build",
    "watch:serve": "nodemon -e ts -w ./build -x npm run debug-local ",
    "watch:run": "cross-env  NC_DISABLE_TELE1=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/example/docker --log-error --project tsconfig.json\"",
    "watch:run:cypress": "cross-env EE=true nodemon -e ts,js -w ./src -x \"ts-node src/example/docker --log-error --project tsconfig.json\"",
    "watch:run:mysql": "cross-env  NC_DISABLE_TELE=true EE=true nodemon -e ts,js -w ./src -x \"ts-node src/example/dockerRunMysql --log-error --project tsconfig.json\"",
    "run": "ts-node src/example/docker",
    "watch:try": "nodemon -e ts,js -w ./src -x \"ts-node src/example/try --log-error --project tsconfig.json\"",
    "example:docker": "ts-node ./src/example/docker.ts"
  },
  "scripts-info": {
    "info": "Display information about the package scripts",
    "build": "Clean and rebuild the project",
    "fix": "Try to automatically fix any linting problems",
    "test": "Lint and unit test the project",
    "watch": "Watch and rebuild the project on save, then rerun relevant tests",
    "cov": "Rebuild, run tests, then create and open the coverage report",
    "doc": "Generate HTML API documentation and open it in a browser",
    "doc:json": "Generate API documentation in typedoc JSON format",
    "version": "Bump package.json version, update CHANGELOG.md, tag release",
    "reset": "Delete all untracked files and reset the repo to the last commit",
    "prepare-release": "One-step: clean, build, test, publish docs, and prep a release"
  },
  "engines": {
    "node": ">=8.9"
  },
  "dependencies": {
    "@google-cloud/storage": "^5.7.2",
    "@graphql-tools/merge": "^6.0.12",
    "@sentry/node": "^6.3.5",
    "airtable": "^0.11.3",
    "archiver": "^5.0.2",
    "auto-bind": "^4.0.0",
    "aws-sdk": "^2.829.0",
    "axios": "^0.21.1",
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.19.0",
    "boxen": "^5.0.0",
    "clear": "^0.1.0",
    "cli-table3": "^0.6.0",
    "cluster": "^0.7.7",
    "colors": "1.4.0",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.5",
    "cron": "^1.8.2",
    "crypto-js": "^4.0.0",
    "dataloader": "^2.0.0",
    "dayjs": "^1.8.34",
    "debug": "^4.2.0",
    "dotenv": "^8.2.0",
    "ejs": "^3.1.3",
    "emittery": "^0.7.1",
    "express": "^4.17.1",
    "express-graphql": "^0.11.0",
    "express-status-monitor": "^1.3.3",
    "extract-zip": "^2.0.1",
    "fast-levenshtein": "^2.0.6",
    "fs-extra": "^9.0.1",
    "glob": "^7.1.6",
    "graphql": "^15.3.0",
    "graphql-depth-limit": "^1.1.0",
    "graphql-type-json": "^0.3.2",
    "handlebars": "^4.7.6",
    "import-fresh": "^3.2.1",
    "inflection": "^1.12.0",
    "ioredis": "^4.28.5",
    "ioredis-mock": "^7.1.0",
    "is-docker": "^2.2.1",
    "js-beautify": "^1.11.0",
    "jsep": "^0.4.0",
    "json2csv": "^5.0.6",
    "jsonfile": "^6.1.0",
    "jsonwebtoken": "^8.5.1",
    "knex": "^0.21.2",
    "lodash": "^4.17.19",
    "lru-cache": "^6.0.0",
    "mailersend": "^1.1.0",
    "material-design-icons-iconfont": "^6.1.0",
    "md5": "^2.2.1",
    "minio": "^7.0.18",
    "mkdirp": "^0.5.5",
    "morgan": "^1.10.0",
    "mssql": "^6.2.0",
    "multer": "^1.4.2",
    "mysql2": "^2.2.5",
    "nanoid": "^3.1.20",
    "nc-common": "0.0.6",
    "nc-help": "0.2.46",
    "nc-lib-gui": "0.90.8",
    "nc-plugin": "^0.1.1",
    "ncp": "^2.0.0",
    "nocodb-sdk": "0.90.8",
    "nodemailer": "^6.4.10",
    "ora": "^4.0.4",
    "os-locale": "^5.0.0",
    "papaparse": "^5.3.1",
    "parse-database-url": "^0.3.0",
    "passport": "^0.4.1",
    "passport-auth-token": "^1.0.1",
    "passport-azure-ad-oauth2": "0.0.4",
    "passport-custom": "^1.1.1",
    "passport-github": "^1.1.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pg": "^8.3.0",
    "request-ip": "^2.1.3",
    "rmdir": "^1.2.0",
    "sha.js": "^2.4.11",
    "slash": "^3.0.0",
    "socket.io": "^4.4.1",
    "sqlite3": "5.0.0",
    "twilio": "^3.55.1",
    "unique-names-generator": "^4.3.1",
    "uuid": "^8.2.0",
    "validator": "^13.1.1",
    "xc-core-ts": "^0.1.0"
  },
  "devDependencies": {
    "@bitjson/npm-scripts-info": "^1.0.0",
    "@bitjson/typedoc": "^0.15.0-0",
    "@istanbuljs/nyc-config-typescript": "^0.1.3",
    "@types/chai": "^4.2.12",
    "@types/express": "^4.17.7",
    "@types/inflection": "^1.5.28",
    "@types/lru-cache": "^5.1.0",
    "@types/minio": "^7.0.7",
    "@types/mkdirp": "^1.0.2",
    "@types/mocha": "^8.0.1",
    "@types/nodemailer": "^6.4.0",
    "@types/supertest": "^2.0.10",
    "@typescript-eslint/eslint-plugin": "^4.0.1",
    "@typescript-eslint/parser": "^4.0.1",
    "@webserverless/fc-express": "^0.1.4",
    "autocannon": "^6.5.0",
    "ava": "2.2.0",
    "chai": "^4.2.0",
    "codecov": "^3.5.0",
    "copyfiles": "^2.3.0",
    "cross-env": "^7.0.3",
    "cz-conventional-changelog": "^2.1.0",
    "eslint": "^7.8.0",
    "eslint-config-prettier": "^6.15.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-functional": "^3.0.2",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-prettier": "^4.0.0",
    "gh-pages": "^2.0.1",
    "mocha": "^8.1.1",
    "nodemon": "^2.0.7",
    "npm-run-all": "^4.1.5",
    "nyc": "^14.1.1",
    "open-cli": "^5.0.0",
    "prettier": "^1.19.1",
    "raw-body": "^2.4.1",
    "standard-version": "^8.0.1",
    "supertest": "^4.0.2",
    "terser-webpack-plugin": "^4.1.0",
    "trash-cli": "^3.0.0",
    "ts-loader": "^8.0.5",
    "ts-node": "^8.10.2",
    "typescript": "^4.0.3",
    "webpack": "^4.44.1",
    "webpack-cli": "^3.3.12",
    "webpack-node-externals": "^2.5.2",
    "webpack-obfuscator": "^1.12.0"
  },
  "ava": {
    "failFast": true,
    "files": [
      "build/main/**/*.spec.js"
    ],
    "sources": [
      "build/main/**/*.js"
    ]
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "prettier": {
    "singleQuote": true
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "exclude": [
      "**/*.spec.js"
    ]
  }
}
