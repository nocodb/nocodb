{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "qiz1rcfqd2jy6"
  },
  "info": {
    "title": "NocoDB v2",
    "version": "",
    "description": "NocoDB API Documentation"
  },
  "x-tagGroups": [
    {
      "name": "Auth APIs",
      "tags": [
        "Auth",
        "API Token"
      ]
    },
    {
      "name": "Public APIs",
      "tags": [
        "Public"
      ]
    },
    {
      "name": "Data APIs",
      "tags": [
        "DB Table Row",
        "DB View Row",
        "Storage"
      ]
    },
    {
      "name": "Meta APIs",
      "tags": [
        "Source",
        "DB Table",
        "DB Table Column",
        "DB Table Filter",
        "DB Table Sort",
        "DB Table Webhook",
        "DB Table Webhook Filter",
        "DB View",
        "DB View Column",
        "DB View Share",
        "Plugin",
        "Base",
        "Utils"
      ]
    },
    {
      "name": "Organisation APIs",
      "tags": [
        "Org App Settings",
        "Org License",
        "Org Tokens",
        "Org Users"
      ]
    }
  ],
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/api/v2/meta/bases/{baseId}/users": {
      "get": {
        "summary": "List Base Users",
        "operationId": "auth-base-user-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "object",
                      "properties": {
                        "list": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        "pageInfo": {
                          "$ref": "#/components/schemas/Paginated"
                        }
                      },
                      "required": [
                        "list",
                        "pageInfo"
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "users": {
                        "list": [
                          {
                            "email": "user@example.com",
                            "email_verified": true,
                            "firstname": "Alice",
                            "id": "us_8kugj628ebjngs",
                            "lastname": "Smith",
                            "roles": "org-level-viewer"
                          }
                        ],
                        "pageInfo": {
                          "isFirstPage": true,
                          "isLastPage": true,
                          "page": 1,
                          "pageSize": 10,
                          "totalRows": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "List all users in the given base.",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "post": {
        "summary": "Create Base User",
        "operationId": "auth-base-user-add",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "waau9tvy75zsd"
                      },
                      "description": "Success Message for inviting single email",
                      "example": "The user has been invited successfully"
                    },
                    "invite_token": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "yx0s35u8ds3p7"
                      },
                      "example": "8354ddba-a769-4d64-8397-eccb2e2b3c06"
                    },
                    "error": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "yhfi6wzhr6zr1"
                      },
                      "items": {
                        "x-stoplight": {
                          "id": "ce0hlv3d0f96j"
                        },
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "dgnh01j4lxvl1"
                            },
                            "example": "w@nocodb.com"
                          },
                          "error": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "7dgttqiijg8no"
                            },
                            "example": "<ERROR_MESSAGE>"
                          }
                        }
                      }
                    },
                    "email": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "08pqst2q30vot"
                      },
                      "example": "w@nocodb.com"
                    }
                  }
                },
                "examples": {
                  "Inviting a user without any errors": {
                    "value": {
                      "msg": "The user has been invited successfully"
                    }
                  },
                  "Inviting a user but invitation email failed to send": {
                    "value": {
                      "invite_token": "8354ddba-a769-4d64-8397-eccb2e2b3c06",
                      "email": "w@nocodb.com"
                    }
                  },
                  "Inviting multiple users": {
                    "value": {
                      "invite_token": "8354ddba-a769-4d64-8397-eccb2e2b3c06",
                      "error": [
                        {
                          "email": "w@nocodb.com",
                          "error": "<ERROR MESSAGE>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUserReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "email": "user@example.com",
                    "roles": "owner"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Create a user and add it to the given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}/info": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "get": {
        "summary": "Get Base info",
        "operationId": "base-meta-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Node": {
                      "type": "string",
                      "description": "Node version",
                      "example": "v12.16.1"
                    },
                    "Arch": {
                      "type": "string",
                      "description": "Architecture type",
                      "example": "x64"
                    },
                    "Platform": {
                      "type": "string",
                      "description": "Platform type",
                      "example": "linux"
                    },
                    "Docker": {
                      "type": "boolean",
                      "description": "Is docker",
                      "example": false
                    },
                    "Database": {
                      "type": "string",
                      "description": "Database type",
                      "example": "postgres"
                    },
                    "ProjectOnRootDB": {
                      "type": "boolean",
                      "description": "Is base on rootdb",
                      "example": false
                    },
                    "RootDB": {
                      "type": "string",
                      "description": "Root database type",
                      "example": "postgres"
                    },
                    "PackageVersion": {
                      "type": "string",
                      "description": "Package version",
                      "example": "1.0.0"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "Node": "v12.16.1",
                      "Arch": "x64",
                      "Platform": "linux",
                      "Docker": false,
                      "Database": "postgres",
                      "ProjectOnRootDB": false,
                      "RootDB": "postgres",
                      "PackageVersion": "1.0.0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Base"
        ],
        "description": "Get info such as node version, arch, platform, is docker, rootdb and package version of a given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}/users/{userId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        },
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "us_b3xo2i44nx5y9l"
          },
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "Unique User ID"
        }
      ],
      "patch": {
        "summary": "Update Base User",
        "operationId": "auth-base-user-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "5a2q8as60daly"
                      },
                      "description": "Success Message",
                      "example": "The user has been updated successfully"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "msg": "The user has been updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUserReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "email": "user@example.com",
                    "roles": "owner"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Update a given user in a given base. Exclusive for Super Admin. Access with API Tokens will be blocked.",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Delete Base User",
        "operationId": "auth-base-user-remove",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "5h7c9lqh5ynve"
                      },
                      "example": "The user has been updated successfully",
                      "description": "Success Message"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "msg": "The user has been updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Delete a given user in a given base. Exclusive for Super Admin. Access with API Tokens will be blocked.",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}/visibility-rules": {
      "get": {
        "summary": "Get UI ACL",
        "operationId": "base-model-visibility-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "ptn": "nc_09gt___Sheet-1",
                        "_ptn": "Sheet-1",
                        "ptype": "table",
                        "tn": "Sheet-1",
                        "_tn": "Sheet-1",
                        "table_meta": null,
                        "id": "vw_75neroyqdye94k",
                        "source_id": "ds_eol59jg2l4zwev",
                        "base_id": "p_63b4q0qengen1x",
                        "fk_model_id": "md_5mipbdg6ketmv8",
                        "title": "Sheet-1",
                        "type": 3,
                        "is_default": true,
                        "show_system_fields": null,
                        "lock_type": "collaborative",
                        "uuid": "24a6d0bb-e45d-4b1a-bfef-f492d870de9f",
                        "password": null,
                        "show": true,
                        "order": 1,
                        "created_at": "2023-03-08T10:44:55.253Z",
                        "updated_at": "2023-03-10T07:18:44.908Z",
                        "meta": {
                          "allowCSVDownload": true
                        },
                        "view": {
                          "fk_view_id": "vw_75neroyqdye94k",
                          "source_id": "ds_eol59jg2l4zwev",
                          "base_id": "p_63b4q0qengen1x",
                          "uuid": null,
                          "created_at": "2023-03-08T10:44:55.288Z",
                          "updated_at": "2023-03-08T10:44:55.288Z",
                          "meta": null,
                          "row_height": null
                        },
                        "disabled": {
                          "owner": false,
                          "creator": false,
                          "viewer": false,
                          "editor": false,
                          "commenter": false,
                          "guest": false
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Hide / show views based on user role",
        "tags": [
          "Base"
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "includeM2M"
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "post": {
        "summary": "Create UI ACL",
        "operationId": "base-model-visibility-set",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "2txh071wsodys"
                      },
                      "example": "UI ACL has been created successfully"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "msg": "UI ACL has been created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisibilityRuleReq"
              }
            }
          }
        },
        "tags": [
          "Base"
        ],
        "description": "Hide / show views based on user role",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/bases/": {
      "parameters": [
        {
          "$ref": "#/components/parameters/xc-auth"
        }
      ],
      "get": {
        "summary": "List Bases",
        "operationId": "base-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "sources": [
                            {
                              "alias": "string",
                              "config": null,
                              "created_at": "2023-03-01 14:27:36",
                              "enabled": true,
                              "id": "string",
                              "inflection_column": "camelize",
                              "inflection_table": "camelize",
                              "is_meta": true,
                              "order": 1,
                              "base_id": "string",
                              "type": "mysql2",
                              "updated_at": "2023-03-01 14:27:36"
                            }
                          ],
                          "color": "#24716E",
                          "created_at": "2023-03-01 14:27:36",
                          "deleted": true,
                          "description": "This is my base description",
                          "id": "p_124hhlkbeasewh",
                          "is_meta": true,
                          "meta": {},
                          "order": 0,
                          "prefix": "nc_vm5q__",
                          "status": "string",
                          "title": "my-base",
                          "updated_at": "2023-03-01 14:27:36"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "List all base meta data",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Base"
        ]
      },
      "post": {
        "summary": "Create Base",
        "operationId": "base-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Base"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectReq"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "external": {
                        "type": "boolean",
                        "default": false,
                        "description": "If true, the base will us an external database else it will use the root database"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "sources": [
                      {
                        "alias": "string",
                        "config": null,
                        "enabled": true,
                        "id": "string",
                        "inflection_column": "camelize",
                        "inflection_table": "camelize",
                        "is_meta": true,
                        "order": 1,
                        "base_id": "string",
                        "type": "mysql2",
                        "updated_at": "2023-03-01 14:27:36"
                      }
                    ],
                    "color": "#24716E",
                    "created_at": "2023-03-01 14:27:36",
                    "deleted": true,
                    "description": "This is my base description",
                    "id": "p_124hhlkbeasewh",
                    "is_meta": true,
                    "meta": {},
                    "order": 0,
                    "prefix": "nc_vm5q__",
                    "status": "string",
                    "title": "my-base",
                    "external": false
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Base"
        ],
        "description": "Create a new base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/duplicate/{baseId}/{sourceId}": {
      "post": {
        "summary": "Duplicate Base Source",
        "operationId": "base-source-duplicate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "base_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "options": {
                    "type": "object",
                    "properties": {
                      "excludeData": {
                        "type": "boolean",
                        "required": false
                      },
                      "excludeViews": {
                        "type": "boolean",
                        "required": false
                      },
                      "excludeHooks": {
                        "type": "boolean",
                        "required": false
                      }
                    }
                  },
                  "base": {
                    "type": "object",
                    "required": false
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "excludeData": true,
                    "excludeViews": true,
                    "excludeHooks": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Base"
        ],
        "description": "Duplicate a base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/Id",
              "example": "p_124hhlkbeasewh",
              "type": "string"
            },
            "name": "baseId",
            "in": "path",
            "required": true,
            "description": "Unique Base ID"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/Id",
              "example": "ds_124hhlkbeasewh",
              "type": "string"
            },
            "name": "sourceId",
            "in": "path",
            "required": false,
            "description": "Unique Source ID"
          }
        ]
      }
    },
    "/api/v2/meta/duplicate/{baseId}": {
      "post": {
        "summary": "Duplicate Base",
        "operationId": "base-duplicate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "options": {
                    "type": "object",
                    "properties": {
                      "excludeData": {
                        "type": "boolean",
                        "required": false
                      },
                      "excludeViews": {
                        "type": "boolean",
                        "required": false
                      },
                      "excludeHooks": {
                        "type": "boolean",
                        "required": false
                      }
                    }
                  },
                  "base": {
                    "type": "object",
                    "required": false
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "excludeData": true,
                    "excludeViews": true,
                    "excludeHooks": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Base"
        ],
        "description": "Duplicate a base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/Id",
              "example": "p_124hhlkbeasewh",
              "type": "string"
            },
            "name": "baseId",
            "in": "path",
            "required": true,
            "description": "Unique Base ID"
          }
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "get": {
        "summary": "Get Base",
        "operationId": "base-read",
        "description": "Get the info of a given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Base"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Base"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "sources": [
                        {
                          "alias": "string",
                          "config": null,
                          "enabled": true,
                          "id": "string",
                          "inflection_column": "camelize",
                          "inflection_table": "camelize",
                          "is_meta": true,
                          "order": 1,
                          "base_id": "string",
                          "type": "mysql2",
                          "updated_at": "2023-03-01 14:27:36"
                        }
                      ],
                      "color": "#24716E",
                      "created_at": "2023-03-01 14:27:36",
                      "deleted": true,
                      "description": "This is my base description",
                      "id": "p_124hhlkbeasewh",
                      "is_meta": true,
                      "meta": {},
                      "order": 0,
                      "prefix": "nc_vm5q__",
                      "status": "string",
                      "title": "my-base"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete Base",
        "operationId": "base-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Base"
        ],
        "description": "Delete the given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "patch": {
        "summary": "Update Base",
        "operationId": "base-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "example": 1
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Base"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "color": "#24716E",
                    "meta": null,
                    "title": "My Base"
                  }
                }
              }
            }
          }
        },
        "description": "Update the given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}/user": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Base user meta update",
        "operationId": "base-user-meta-update",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Base"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUserMetaReq"
              }
            }
          }
        }
      }
    },
    "/api/v2/meta/bases/{baseId}/sources/{sourceId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        },
        {
          "schema": {
            "type": "string",
            "pattern": "ds_j04jmxh5xg10lu"
          },
          "name": "sourceId",
          "in": "path",
          "required": true,
          "description": "Unique Source ID"
        }
      ],
      "get": {
        "summary": "Get Source",
        "operationId": "source-read",
        "description": "Get the source details of a given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Source"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "alias": null,
                      "config": "<ENCRYPTED>",
                      "enabled": 1,
                      "id": "ds_krsappzu9f8vmo",
                      "inflection_column": "camelize",
                      "inflection_table": "camelize",
                      "is_meta": 1,
                      "meta": null,
                      "order": 1,
                      "base_id": "p_01clqvzik3izk6",
                      "type": "mysql2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete Source",
        "operationId": "source-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Source"
        ],
        "description": "Delete the source details of a given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "patch": {
        "summary": "Update Source",
        "operationId": "source-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "ds_rrplkgy0pq1f3c",
                      "base_id": "p_63b4q0qengen1x",
                      "alias": "sakila",
                      "meta": null,
                      "is_meta": null,
                      "type": "mysql2",
                      "inflection_column": "camelize",
                      "inflection_table": "camelize",
                      "created_at": "2023-03-11T10:31:15.341Z",
                      "updated_at": "2023-03-11T10:32:25.763Z",
                      "enabled": true,
                      "order": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Source"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "alias": "sakila",
                    "type": "mysql2",
                    "config": {
                      "client": "mysql2",
                      "connection": {
                        "host": "localhost",
                        "port": "3306",
                        "user": "root",
                        "password": "password",
                        "database": "sakila"
                      }
                    },
                    "inflection_column": "camelize",
                    "inflection_table": "camelize"
                  }
                }
              }
            }
          }
        },
        "description": "Update the source details of a given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/bases/:baseId/sources/:sourceId/sqlView": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "sourceId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Create sql view",
        "operationId": "create-sql-view",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Source"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "view_name": {
                    "type": "string"
                  },
                  "view_definition": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/meta/bases/{baseId}/sources/": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "get": {
        "summary": "List Sources",
        "operationId": "source-list",
        "description": "Get base source list",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Source"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "alias": null,
                          "config": "<ENCRYPTED>",
                          "enabled": 1,
                          "id": "ds_krsappzu9f8vmo",
                          "inflection_column": "camelize",
                          "inflection_table": "camelize",
                          "is_meta": 1,
                          "meta": null,
                          "order": 1,
                          "base_id": "p_01clqvzik3izk6",
                          "type": "mysql2"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "post": {
        "summary": "Create Source",
        "operationId": "source-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Source"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "external": {
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "alias": null,
                    "config": "<ENCRYPTED>",
                    "enabled": 1,
                    "id": "ds_krsappzu9f8vmo",
                    "inflection_column": "camelize",
                    "inflection_table": "camelize",
                    "is_meta": 1,
                    "meta": null,
                    "order": 1,
                    "base_id": "p_01clqvzik3izk6",
                    "type": "mysql2",
                    "external": false
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Source"
        ],
        "description": "Create a new source on a given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}/sources/{sourceId}/share/erd": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "sourceId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "share ERD view",
        "operationId": "source-share-erd",
        "tags": [
          "Source"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "",
        "operationId": "source-disable-share-erd",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Source"
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}/shared": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "get": {
        "summary": "Get Base Shared Base",
        "operationId": "base-shared-base-get",
        "description": "Get Base Shared Base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Base"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "roles": {
                      "type": "string",
                      "example": "viewer"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "uuid": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11",
                      "url": "http://example.com",
                      "roles": "viewer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete Base Shared Base",
        "operationId": "base-shared-base-disable",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Base"
        ],
        "description": "Delete Base Shared Base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "post": {
        "summary": "Create Base Shared Base",
        "operationId": "base-shared-base-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "$ref": "#/components/schemas/StringOrNull"
                    },
                    "roles": {
                      "$ref": "#/components/schemas/StringOrNull"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Base"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedBaseReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "roles": "editor",
                    "password": "password123"
                  }
                }
              }
            }
          }
        },
        "description": "Create Base Shared Base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "patch": {
        "summary": "Update Base Shared Base",
        "operationId": "base-shared-base-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "roles": {
                      "type": "string",
                      "example": "viewer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedBaseReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "password": "password123",
                    "roles": "editor"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Base"
        ],
        "description": "Update Base Shared Base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}/cost": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "get": {
        "summary": "Base Cost",
        "operationId": "base-cost",
        "description": "Calculate the Base Cost",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Base"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "x-internal": true
      }
    },
    "/api/v2/meta/bases/{baseId}/tables": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "post": {
        "summary": "Create Table",
        "operationId": "db-table-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "source_id": "ds_g4ccx6e77h1dmi",
                      "columns": [
                        {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": "CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP",
                          "clen": null,
                          "column_name": "updated_at",
                          "cop": "4",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "timestamp",
                          "deleted": null,
                          "dt": "timestamp",
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_m4wkaqgqqjzoeh",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 4,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 0,
                          "system": 0,
                          "title": "UpdatedAt",
                          "uidt": "DateTime",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": "CURRENT_TIMESTAMP",
                          "clen": null,
                          "column_name": "created_at",
                          "cop": "3",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "timestamp",
                          "deleted": null,
                          "dt": "timestamp",
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_jpl0qu4gj4rexq",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 3,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 0,
                          "system": 0,
                          "title": "CreatedAt",
                          "uidt": "DateTime",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": null,
                          "clen": "45",
                          "column_name": "title",
                          "cop": "2",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": "utf8mb4",
                          "ct": "varchar(45)",
                          "deleted": null,
                          "dt": "varchar",
                          "dtx": "specificType",
                          "dtxp": "45",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_c5knoi4xs4sfpt",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 2,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": 1,
                          "rqd": 0,
                          "system": 0,
                          "title": "Title",
                          "uidt": "SingleLineText",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        {
                          "ai": 1,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": null,
                          "clen": null,
                          "column_name": "id",
                          "cop": "1",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "int unsigned",
                          "deleted": null,
                          "dt": "int",
                          "dtx": "specificType",
                          "dtxp": "",
                          "dtxs": "0",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_phvuuwjrzcdo0g",
                          "meta": null,
                          "np": "10",
                          "ns": "0",
                          "order": 1,
                          "pk": 1,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 1,
                          "system": 0,
                          "title": "Id",
                          "uidt": "ID",
                          "un": 1,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        }
                      ],
                      "columnsById": {
                        "cl_c5knoi4xs4sfpt": {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": null,
                          "clen": "45",
                          "column_name": "title",
                          "cop": "2",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": "utf8mb4",
                          "ct": "varchar(45)",
                          "deleted": null,
                          "dt": "varchar",
                          "dtx": "specificType",
                          "dtxp": "45",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_c5knoi4xs4sfpt",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 2,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": 1,
                          "rqd": 0,
                          "system": 0,
                          "title": "Title",
                          "uidt": "SingleLineText",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        "cl_jpl0qu4gj4rexq": {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": "CURRENT_TIMESTAMP",
                          "clen": null,
                          "column_name": "created_at",
                          "cop": "3",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "timestamp",
                          "deleted": null,
                          "dt": "timestamp",
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_jpl0qu4gj4rexq",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 3,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 0,
                          "system": 0,
                          "title": "CreatedAt",
                          "uidt": "DateTime",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        "cl_m4wkaqgqqjzoeh": {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": "CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP",
                          "clen": null,
                          "column_name": "updated_at",
                          "cop": "4",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "timestamp",
                          "deleted": null,
                          "dt": "timestamp",
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_m4wkaqgqqjzoeh",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 4,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 0,
                          "system": 0,
                          "title": "UpdatedAt",
                          "uidt": "DateTime",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        "cl_phvuuwjrzcdo0g": {
                          "ai": 1,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": null,
                          "clen": null,
                          "column_name": "id",
                          "cop": "1",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "int unsigned",
                          "deleted": null,
                          "dt": "int",
                          "dtx": "specificType",
                          "dtxp": "",
                          "dtxs": "0",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_phvuuwjrzcdo0g",
                          "meta": null,
                          "np": "10",
                          "ns": "0",
                          "order": 1,
                          "pk": 1,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 1,
                          "system": 0,
                          "title": "Id",
                          "uidt": "ID",
                          "un": 1,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        }
                      },
                      "created_at": "2023-03-02 17:04:06",
                      "deleted": null,
                      "enabled": 1,
                      "id": "md_rsu68aqjsbyqtl",
                      "meta": null,
                      "mm": 0,
                      "order": 1,
                      "pinned": null,
                      "base_id": "p_xm3thidrblw4n7",
                      "schema": null,
                      "table_name": "nc_vm5q___Table1",
                      "tags": null,
                      "title": "Table1",
                      "type": "table",
                      "updated_at": "2023-03-02 17:04:08",
                      "views": [
                        {
                          "_ptn": "Table1",
                          "_tn": "Table1",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "created_at": "2023-03-02 17:04:06",
                          "disabled": {
                            "commenter": false,
                            "creator": false,
                            "editor": false,
                            "guest": false,
                            "owner": false,
                            "viewer": false
                          },
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "vw_p2jcatxz4mvcfw",
                          "is_default": 1,
                          "lock_type": "collaborative",
                          "meta": {},
                          "order": 1,
                          "password": null,
                          "base_id": "p_xm3thidrblw4n7",
                          "ptn": "nc_vm5q___Table1",
                          "ptype": "table",
                          "show": 1,
                          "show_system_fields": null,
                          "table_meta": null,
                          "title": "Table1",
                          "tn": "Table1",
                          "type": 3,
                          "updated_at": "2023-03-02 17:04:06",
                          "uuid": null,
                          "view": {
                            "source_id": "ds_g4ccx6e77h1dmi",
                            "created_at": "2023-03-02 17:04:06",
                            "fk_view_id": "vw_p2jcatxz4mvcfw",
                            "meta": null,
                            "base_id": "p_xm3thidrblw4n7",
                            "row_height": null,
                            "updated_at": "2023-03-02 17:04:06",
                            "uuid": null
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableReq"
              }
            }
          }
        },
        "tags": [
          "DB Table"
        ],
        "description": "Create a new table in a given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "get": {
        "summary": "List Tables",
        "operationId": "db-table-list",
        "responses": {
          "200": {
            "$ref": "#/components/responses/TableList"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "pageSize"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "includeM2M"
          }
        ],
        "tags": [
          "DB Table"
        ],
        "description": "List all tables in a given base"
      }
    },
    "/api/v2/meta/tables/{tableId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "get": {
        "summary": "Read Table",
        "operationId": "db-table-read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "md_rsu68aqjsbyqtl",
                      "source_id": "ds_g4ccx6e77h1dmi",
                      "base_id": "p_xm3thidrblw4n7",
                      "table_name": "nc_vm5q___Table1",
                      "title": "Table1",
                      "type": "table",
                      "meta": null,
                      "schema": null,
                      "enabled": 1,
                      "mm": 0,
                      "tags": null,
                      "pinned": null,
                      "deleted": null,
                      "order": 1,
                      "created_at": "2023-03-02 17:04:06",
                      "updated_at": "2023-03-02 17:04:08",
                      "columns": [
                        {
                          "id": "cl_phvuuwjrzcdo0g",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "base_id": "p_xm3thidrblw4n7",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "title": "Id",
                          "column_name": "id",
                          "uidt": "ID",
                          "dt": "int",
                          "np": "10",
                          "ns": "0",
                          "clen": null,
                          "cop": "1",
                          "pk": 1,
                          "pv": null,
                          "rqd": 1,
                          "un": 1,
                          "ct": "int unsigned",
                          "ai": 1,
                          "unique": 0,
                          "cdf": null,
                          "cc": "",
                          "csn": null,
                          "dtx": "specificType",
                          "dtxp": "",
                          "dtxs": "0",
                          "au": 0,
                          "validate": null,
                          "virtual": null,
                          "deleted": null,
                          "system": 0,
                          "order": 1,
                          "created_at": "2023-03-02 17:04:06",
                          "updated_at": "2023-03-02 17:04:06",
                          "meta": null
                        },
                        {
                          "id": "cl_c5knoi4xs4sfpt",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "base_id": "p_xm3thidrblw4n7",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "title": "Title",
                          "column_name": "title",
                          "uidt": "SingleLineText",
                          "dt": "varchar",
                          "np": null,
                          "ns": null,
                          "clen": "45",
                          "cop": "2",
                          "pk": 0,
                          "pv": 1,
                          "rqd": 0,
                          "un": 0,
                          "ct": "varchar(45)",
                          "ai": 0,
                          "unique": 0,
                          "cdf": null,
                          "cc": "",
                          "csn": "utf8mb4",
                          "dtx": "specificType",
                          "dtxp": "45",
                          "dtxs": null,
                          "au": 0,
                          "validate": null,
                          "virtual": null,
                          "deleted": null,
                          "system": 0,
                          "order": 2,
                          "created_at": "2023-03-02 17:04:06",
                          "updated_at": "2023-03-02 17:04:06",
                          "meta": null
                        },
                        {
                          "id": "cl_jpl0qu4gj4rexq",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "base_id": "p_xm3thidrblw4n7",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "title": "CreatedAt",
                          "column_name": "created_at",
                          "uidt": "DateTime",
                          "dt": "timestamp",
                          "np": null,
                          "ns": null,
                          "clen": null,
                          "cop": "3",
                          "pk": 0,
                          "pv": null,
                          "rqd": 0,
                          "un": 0,
                          "ct": "timestamp",
                          "ai": 0,
                          "unique": 0,
                          "cdf": "CURRENT_TIMESTAMP",
                          "cc": "",
                          "csn": null,
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "au": 0,
                          "validate": null,
                          "virtual": null,
                          "deleted": null,
                          "system": 0,
                          "order": 3,
                          "created_at": "2023-03-02 17:04:06",
                          "updated_at": "2023-03-02 17:04:06",
                          "meta": null
                        },
                        {
                          "id": "cl_m4wkaqgqqjzoeh",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "base_id": "p_xm3thidrblw4n7",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "title": "UpdatedAt",
                          "column_name": "updated_at",
                          "uidt": "DateTime",
                          "dt": "timestamp",
                          "np": null,
                          "ns": null,
                          "clen": null,
                          "cop": "4",
                          "pk": 0,
                          "pv": null,
                          "rqd": 0,
                          "un": 0,
                          "ct": "timestamp",
                          "ai": 0,
                          "unique": 0,
                          "cdf": "CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP",
                          "cc": "",
                          "csn": null,
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "au": 0,
                          "validate": null,
                          "virtual": null,
                          "deleted": null,
                          "system": 0,
                          "order": 4,
                          "created_at": "2023-03-02 17:04:06",
                          "updated_at": "2023-03-02 17:04:06",
                          "meta": null
                        }
                      ],
                      "views": [
                        {
                          "ptn": "nc_vm5q___Table1",
                          "_ptn": "Table1",
                          "ptype": "table",
                          "tn": "Table1",
                          "_tn": "Table1",
                          "table_meta": null,
                          "id": "vw_p2jcatxz4mvcfw",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "base_id": "p_xm3thidrblw4n7",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "title": "Table1",
                          "type": 3,
                          "is_default": 1,
                          "show_system_fields": null,
                          "lock_type": "collaborative",
                          "uuid": null,
                          "password": null,
                          "show": 1,
                          "order": 1,
                          "created_at": "2023-03-02 17:04:06",
                          "updated_at": "2023-03-02 17:04:06",
                          "meta": {},
                          "view": {
                            "fk_view_id": "vw_p2jcatxz4mvcfw",
                            "source_id": "ds_g4ccx6e77h1dmi",
                            "base_id": "p_xm3thidrblw4n7",
                            "uuid": null,
                            "created_at": "2023-03-02 17:04:06",
                            "updated_at": "2023-03-02 17:04:06",
                            "meta": null,
                            "row_height": null
                          },
                          "disabled": {
                            "owner": false,
                            "creator": false,
                            "viewer": false,
                            "editor": false,
                            "commenter": false,
                            "guest": false
                          }
                        }
                      ],
                      "columnsById": {
                        "cl_phvuuwjrzcdo0g": {
                          "id": "cl_phvuuwjrzcdo0g",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "base_id": "p_xm3thidrblw4n7",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "title": "Id",
                          "column_name": "id",
                          "uidt": "ID",
                          "dt": "int",
                          "np": "10",
                          "ns": "0",
                          "clen": null,
                          "cop": "1",
                          "pk": 1,
                          "pv": null,
                          "rqd": 1,
                          "un": 1,
                          "ct": "int unsigned",
                          "ai": 1,
                          "unique": 0,
                          "cdf": null,
                          "cc": "",
                          "csn": null,
                          "dtx": "specificType",
                          "dtxp": "",
                          "dtxs": "0",
                          "au": 0,
                          "validate": null,
                          "virtual": null,
                          "deleted": null,
                          "system": 0,
                          "order": 1,
                          "created_at": "2023-03-02 17:04:06",
                          "updated_at": "2023-03-02 17:04:06",
                          "meta": null
                        },
                        "cl_c5knoi4xs4sfpt": {
                          "id": "cl_c5knoi4xs4sfpt",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "base_id": "p_xm3thidrblw4n7",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "title": "Title",
                          "column_name": "title",
                          "uidt": "SingleLineText",
                          "dt": "varchar",
                          "np": null,
                          "ns": null,
                          "clen": "45",
                          "cop": "2",
                          "pk": 0,
                          "pv": 1,
                          "rqd": 0,
                          "un": 0,
                          "ct": "varchar(45)",
                          "ai": 0,
                          "unique": 0,
                          "cdf": null,
                          "cc": "",
                          "csn": "utf8mb4",
                          "dtx": "specificType",
                          "dtxp": "45",
                          "dtxs": null,
                          "au": 0,
                          "validate": null,
                          "virtual": null,
                          "deleted": null,
                          "system": 0,
                          "order": 2,
                          "created_at": "2023-03-02 17:04:06",
                          "updated_at": "2023-03-02 17:04:06",
                          "meta": null
                        },
                        "cl_jpl0qu4gj4rexq": {
                          "id": "cl_jpl0qu4gj4rexq",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "base_id": "p_xm3thidrblw4n7",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "title": "CreatedAt",
                          "column_name": "created_at",
                          "uidt": "DateTime",
                          "dt": "timestamp",
                          "np": null,
                          "ns": null,
                          "clen": null,
                          "cop": "3",
                          "pk": 0,
                          "pv": null,
                          "rqd": 0,
                          "un": 0,
                          "ct": "timestamp",
                          "ai": 0,
                          "unique": 0,
                          "cdf": "CURRENT_TIMESTAMP",
                          "cc": "",
                          "csn": null,
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "au": 0,
                          "validate": null,
                          "virtual": null,
                          "deleted": null,
                          "system": 0,
                          "order": 3,
                          "created_at": "2023-03-02 17:04:06",
                          "updated_at": "2023-03-02 17:04:06",
                          "meta": null
                        },
                        "cl_m4wkaqgqqjzoeh": {
                          "id": "cl_m4wkaqgqqjzoeh",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "base_id": "p_xm3thidrblw4n7",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "title": "UpdatedAt",
                          "column_name": "updated_at",
                          "uidt": "DateTime",
                          "dt": "timestamp",
                          "np": null,
                          "ns": null,
                          "clen": null,
                          "cop": "4",
                          "pk": 0,
                          "pv": null,
                          "rqd": 0,
                          "un": 0,
                          "ct": "timestamp",
                          "ai": 0,
                          "unique": 0,
                          "cdf": "CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP",
                          "cc": "",
                          "csn": null,
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "au": 0,
                          "validate": null,
                          "virtual": null,
                          "deleted": null,
                          "system": 0,
                          "order": 4,
                          "created_at": "2023-03-02 17:04:06",
                          "updated_at": "2023-03-02 17:04:06",
                          "meta": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table"
        ],
        "description": "Read the table meta data by the given table ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "patch": {
        "summary": "Update Table",
        "operationId": "db-table-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "5a0g9yvs4e678"
                      },
                      "example": "The table has been updated successfully"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "msg": "The table has been updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "table_name": {
                    "type": "string",
                    "description": "Table name",
                    "example": "users"
                  },
                  "title": {
                    "type": "string",
                    "description": "Table title",
                    "example": "Users"
                  },
                  "base_id": {
                    "type": "string",
                    "description": "Base ID",
                    "example": "p_124hhlkbeasewh"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/Meta"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "table_name": "users",
                    "title": "Users",
                    "base_id": "p_124hhlkbeasewh",
                    "meta": null
                  }
                }
              }
            }
          }
        },
        "description": "Update the table meta data by the given table ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Delete Table",
        "operationId": "db-table-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table"
        ],
        "description": "Delete the table meta data by the given table ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/duplicate/{baseId}/table/{tableId}": {
      "post": {
        "summary": "Duplicate Table",
        "operationId": "db-table-duplicate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "options": {
                    "type": "object",
                    "properties": {
                      "excludeData": {
                        "type": "boolean",
                        "required": false
                      },
                      "excludeViews": {
                        "type": "boolean",
                        "required": false
                      },
                      "excludeHooks": {
                        "type": "boolean",
                        "required": false
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "excludeData": true,
                    "excludeViews": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DB Table"
        ],
        "description": "Duplicate a table",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/Id",
              "example": "p_124hhlkbeasewh",
              "type": "string"
            },
            "name": "baseId",
            "in": "path",
            "required": true,
            "description": "Unique Base ID"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/Id",
              "example": "md_124hhlkbeasewh",
              "type": "string"
            },
            "name": "tableId",
            "in": "path",
            "required": true,
            "description": "Unique Table ID"
          }
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}/{sourceId}/tables": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        },
        {
          "schema": {
            "type": "string",
            "pattern": "ds_j04jmxh5xg10lu"
          },
          "name": "sourceId",
          "in": "path",
          "required": true,
          "description": "Unique Source ID"
        }
      ],
      "get": {
        "summary": "List Tables",
        "operationId": "table-list",
        "responses": {
          "200": {
            "$ref": "#/components/responses/TableList"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "pageSize"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "includeM2M"
          }
        ],
        "tags": [
          "Source"
        ],
        "description": "List all tables in a given Base and Source"
      },
      "post": {
        "summary": "Create Table",
        "operationId": "table-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "source_id": "ds_g4ccx6e77h1dmi",
                      "columns": [
                        {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": "CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP",
                          "clen": null,
                          "column_name": "updated_at",
                          "cop": "4",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "timestamp",
                          "deleted": null,
                          "dt": "timestamp",
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_m4wkaqgqqjzoeh",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 4,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 0,
                          "system": 0,
                          "title": "UpdatedAt",
                          "uidt": "DateTime",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": "CURRENT_TIMESTAMP",
                          "clen": null,
                          "column_name": "created_at",
                          "cop": "3",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "timestamp",
                          "deleted": null,
                          "dt": "timestamp",
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_jpl0qu4gj4rexq",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 3,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 0,
                          "system": 0,
                          "title": "CreatedAt",
                          "uidt": "DateTime",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": null,
                          "clen": "45",
                          "column_name": "title",
                          "cop": "2",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": "utf8mb4",
                          "ct": "varchar(45)",
                          "deleted": null,
                          "dt": "varchar",
                          "dtx": "specificType",
                          "dtxp": "45",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_c5knoi4xs4sfpt",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 2,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": 1,
                          "rqd": 0,
                          "system": 0,
                          "title": "Title",
                          "uidt": "SingleLineText",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        {
                          "ai": 1,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": null,
                          "clen": null,
                          "column_name": "id",
                          "cop": "1",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "int unsigned",
                          "deleted": null,
                          "dt": "int",
                          "dtx": "specificType",
                          "dtxp": "",
                          "dtxs": "0",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_phvuuwjrzcdo0g",
                          "meta": null,
                          "np": "10",
                          "ns": "0",
                          "order": 1,
                          "pk": 1,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 1,
                          "system": 0,
                          "title": "Id",
                          "uidt": "ID",
                          "un": 1,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        }
                      ],
                      "columnsById": {
                        "cl_c5knoi4xs4sfpt": {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": null,
                          "clen": "45",
                          "column_name": "title",
                          "cop": "2",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": "utf8mb4",
                          "ct": "varchar(45)",
                          "deleted": null,
                          "dt": "varchar",
                          "dtx": "specificType",
                          "dtxp": "45",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_c5knoi4xs4sfpt",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 2,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": 1,
                          "rqd": 0,
                          "system": 0,
                          "title": "Title",
                          "uidt": "SingleLineText",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        "cl_jpl0qu4gj4rexq": {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": "CURRENT_TIMESTAMP",
                          "clen": null,
                          "column_name": "created_at",
                          "cop": "3",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "timestamp",
                          "deleted": null,
                          "dt": "timestamp",
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_jpl0qu4gj4rexq",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 3,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 0,
                          "system": 0,
                          "title": "CreatedAt",
                          "uidt": "DateTime",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        "cl_m4wkaqgqqjzoeh": {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": "CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP",
                          "clen": null,
                          "column_name": "updated_at",
                          "cop": "4",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "timestamp",
                          "deleted": null,
                          "dt": "timestamp",
                          "dtx": "specificType",
                          "dtxp": "0",
                          "dtxs": null,
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_m4wkaqgqqjzoeh",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 4,
                          "pk": 0,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 0,
                          "system": 0,
                          "title": "UpdatedAt",
                          "uidt": "DateTime",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        },
                        "cl_phvuuwjrzcdo0g": {
                          "ai": 1,
                          "au": 0,
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "cc": "",
                          "cdf": null,
                          "clen": null,
                          "column_name": "id",
                          "cop": "1",
                          "created_at": "2023-03-02 17:04:06",
                          "csn": null,
                          "ct": "int unsigned",
                          "deleted": null,
                          "dt": "int",
                          "dtx": "specificType",
                          "dtxp": "",
                          "dtxs": "0",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "cl_phvuuwjrzcdo0g",
                          "meta": null,
                          "np": "10",
                          "ns": "0",
                          "order": 1,
                          "pk": 1,
                          "base_id": "p_xm3thidrblw4n7",
                          "pv": null,
                          "rqd": 1,
                          "system": 0,
                          "title": "Id",
                          "uidt": "ID",
                          "un": 1,
                          "unique": 0,
                          "updated_at": "2023-03-02 17:04:06",
                          "validate": null,
                          "virtual": null
                        }
                      },
                      "created_at": "2023-03-02 17:04:06",
                      "deleted": null,
                      "enabled": 1,
                      "id": "md_rsu68aqjsbyqtl",
                      "meta": null,
                      "mm": 0,
                      "order": 1,
                      "pinned": null,
                      "base_id": "p_xm3thidrblw4n7",
                      "schema": null,
                      "table_name": "nc_vm5q___Table1",
                      "tags": null,
                      "title": "Table1",
                      "type": "table",
                      "updated_at": "2023-03-02 17:04:08",
                      "views": [
                        {
                          "_ptn": "Table1",
                          "_tn": "Table1",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "created_at": "2023-03-02 17:04:06",
                          "disabled": {
                            "commenter": false,
                            "creator": false,
                            "editor": false,
                            "guest": false,
                            "owner": false,
                            "viewer": false
                          },
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "vw_p2jcatxz4mvcfw",
                          "is_default": 1,
                          "lock_type": "collaborative",
                          "meta": {},
                          "order": 1,
                          "password": null,
                          "base_id": "p_xm3thidrblw4n7",
                          "ptn": "nc_vm5q___Table1",
                          "ptype": "table",
                          "show": 1,
                          "show_system_fields": null,
                          "table_meta": null,
                          "title": "Table1",
                          "tn": "Table1",
                          "type": 3,
                          "updated_at": "2023-03-02 17:04:06",
                          "uuid": null,
                          "view": {
                            "source_id": "ds_g4ccx6e77h1dmi",
                            "created_at": "2023-03-02 17:04:06",
                            "fk_view_id": "vw_p2jcatxz4mvcfw",
                            "meta": null,
                            "base_id": "p_xm3thidrblw4n7",
                            "row_height": null,
                            "updated_at": "2023-03-02 17:04:06",
                            "uuid": null
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "columns": [
                      {
                        "ai": false,
                        "altered": 1,
                        "cdf": "CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP",
                        "ck": false,
                        "clen": 45,
                        "column_name": "updated_at",
                        "ct": "varchar(45)",
                        "dt": "timestamp",
                        "dtx": "specificType",
                        "dtxp": "",
                        "dtxs": "",
                        "np": null,
                        "nrqd": true,
                        "ns": null,
                        "pk": false,
                        "rqd": false,
                        "title": "UpdatedAt",
                        "uicn": "",
                        "uidt": "DateTime",
                        "uip": "",
                        "un": false
                      },
                      {
                        "ai": false,
                        "altered": 1,
                        "cdf": "CURRENT_TIMESTAMP",
                        "ck": false,
                        "clen": 45,
                        "column_name": "created_at",
                        "ct": "varchar(45)",
                        "dt": "timestamp",
                        "dtx": "specificType",
                        "dtxp": "",
                        "dtxs": "",
                        "np": null,
                        "nrqd": true,
                        "ns": null,
                        "pk": false,
                        "rqd": false,
                        "title": "CreatedAt",
                        "uicn": "",
                        "uidt": "DateTime",
                        "uip": "",
                        "un": false
                      },
                      {
                        "ai": false,
                        "altered": 1,
                        "cdf": null,
                        "ck": false,
                        "clen": 45,
                        "column_name": "title",
                        "ct": "varchar(45)",
                        "dt": "varchar",
                        "dtx": "specificType",
                        "dtxp": "45",
                        "dtxs": "",
                        "np": null,
                        "nrqd": true,
                        "ns": null,
                        "pk": false,
                        "rqd": false,
                        "title": "Title",
                        "uicn": "",
                        "uidt": "SingleLineText",
                        "uip": "",
                        "un": false
                      },
                      {
                        "ai": true,
                        "altered": 1,
                        "cdf": null,
                        "ck": false,
                        "clen": null,
                        "column_name": "id",
                        "ct": "int(11)",
                        "dt": "int",
                        "dtx": "integer",
                        "dtxp": "11",
                        "dtxs": "",
                        "np": 11,
                        "nrqd": false,
                        "ns": 0,
                        "pk": true,
                        "rqd": true,
                        "title": "Id",
                        "uicn": "",
                        "uidt": "ID",
                        "uip": "",
                        "un": true
                      }
                    ],
                    "table_name": "Sheet-1",
                    "title": "Sheet-1"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Source"
        ],
        "description": "Create a new table in a given Base and Source",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/reorder": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "post": {
        "summary": "Reorder Table",
        "operationId": "db-table-reorder",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order": {
                    "type": "number"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "order": 0
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DB Table"
        ],
        "description": "Update the order of the given Table",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/columns": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "post": {
        "summary": "Create Column",
        "operationId": "db-table-column-create",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "ai": 0,
                    "au": 0,
                    "source_id": "ds_krsappzu9f8vmo",
                    "cc": "",
                    "cdf": null,
                    "clen": "45",
                    "column_name": "title",
                    "cop": "2",
                    "csn": "utf8mb4",
                    "ct": "varchar(45)",
                    "deleted": null,
                    "dt": "varchar",
                    "dtx": "specificType",
                    "dtxp": "45",
                    "dtxs": null,
                    "fk_model_id": "md_yvwvbt2i78rgcm",
                    "id": "cl_0j9gv0oi8vjy46",
                    "meta": null,
                    "np": null,
                    "ns": null,
                    "order": 2,
                    "pk": 0,
                    "base_id": "p_01clqvzik3izk6",
                    "pv": 1,
                    "rqd": 0,
                    "system": 0,
                    "title": "Title",
                    "uidt": "SingleLineText",
                    "un": 0,
                    "unique": 0,
                    "validate": null,
                    "virtual": null
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DB Table Column"
        ],
        "description": "Create a new column in a given Table",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/columns/{columnId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "columnId",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Update Column",
        "operationId": "db-table-column-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Column"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnReq"
              }
            }
          }
        },
        "tags": [
          "DB Table Column"
        ],
        "description": "Update the existing column by the given column ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Delete Column",
        "operationId": "db-table-column-delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Column"
        ],
        "description": "Delete the existing column by the given column ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "get": {
        "summary": "Get Column",
        "operationId": "db-table-column-get",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Column"
        ],
        "description": "Get the existing column by the given column ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/columns/{columnId}/primary": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "columnId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Create Primary Value",
        "operationId": "db-table-column-primary-column-set",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Column"
        ],
        "description": "Set a primary value on a given column",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/views": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "get": {
        "summary": "List Views",
        "operationId": "db-view-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "alias": "string",
                          "column": [
                            {
                              "alias": "string",
                              "auto_increment": true,
                              "auto_update_timestamp": true,
                              "source_id": "string",
                              "character_maximum_length": "string",
                              "character_set_name": "string",
                              "colOptions": {
                                "deleted": "string",
                                "dr": "string",
                                "fk_child_column_id": "string",
                                "fk_column_id": "string",
                                "fk_index_name": "string",
                                "fk_mm_child_column_id": "string",
                                "fk_mm_model_id": "string",
                                "fk_mm_parent_column_id": "string",
                                "fk_parent_column_id": "string",
                                "id": "string",
                                "order": "string",
                                "type": "string",
                                "ur": "string",
                                "virtual": true
                              },
                              "column_comment": "string",
                              "column_default": "string",
                              "column_ordinal_position": "string",
                              "column_type": "string",
                              "data_type": "string",
                              "data_type_x": "string",
                              "data_type_x_precision": "string",
                              "data_type_x_scale": "string",
                              "deleted": true,
                              "fk_model_id": "string",
                              "id": "string",
                              "numeric_precision": "string",
                              "numeric_scale": "string",
                              "order": 0,
                              "primary_key": true,
                              "primary_value": true,
                              "rqd": "string",
                              "title": "string",
                              "ui_data_type": "string",
                              "un": "string",
                              "unique": true,
                              "visible": true
                            }
                          ],
                          "columnByIds": {},
                          "deleted": true,
                          "enabled": true,
                          "fk_base_id": "string",
                          "fk_project_id": "string",
                          "id": "string",
                          "order": 0,
                          "parent_id": "string",
                          "pinned": true,
                          "show_as": "string",
                          "tags": "string",
                          "title": "string",
                          "type": "string"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "description": "List all views in a given Table.",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/views/{viewId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "vw_wtdg2meyig5l4q"
          },
          "name": "viewId",
          "in": "path",
          "required": true,
          "description": "Unique View ID"
        }
      ],
      "patch": {
        "summary": "Update View",
        "operationId": "db-view-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "source_id": "ds_g4ccx6e77h1dmi",
                      "created_at": "2023-03-02 17:46:31",
                      "fk_model_id": "md_mhs9z4r2ak98x0",
                      "id": "vw_lg052cnc1c26kf",
                      "is_default": 1,
                      "lock_type": "collaborative",
                      "meta": "{\"allowCSVDownload\":true}",
                      "order": 1,
                      "password": "password123",
                      "base_id": "p_xm3thidrblw4n7",
                      "show": 1,
                      "show_system_fields": null,
                      "title": "Grid View 1",
                      "type": 3,
                      "updated_at": "2023-03-02 17:46:31",
                      "uuid": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewUpdateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "title": "Grid View 1",
                    "uuid": "e2457bbf-e29c-4fec-866e-fe3b01dba57f",
                    "password": "password123",
                    "lock_type": "collaborative",
                    "meta": "{\"allowCSVDownload\":true}",
                    "order": 1,
                    "show_system_fields": 0
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DB View"
        ],
        "description": "Update the view with the given view Id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Delete View",
        "operationId": "db-view-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "description": "Delete the view with the given view Id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/views/{viewId}/show-all": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "vw_wtdg2meyig5l4q"
          },
          "name": "viewId",
          "in": "path",
          "required": true,
          "description": "Unique View ID"
        }
      ],
      "post": {
        "summary": "Show All Columns In View",
        "operationId": "db-view-show-all-column",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "description": "Show All Columns in a given View",
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "ignoreIds"
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/views/{viewId}/hide-all": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "vw_wtdg2meyig5l4q"
          },
          "name": "viewId",
          "in": "path",
          "required": true,
          "description": "Unique View ID"
        }
      ],
      "post": {
        "summary": "Hide All Columns In View",
        "operationId": "db-view-hide-all-column",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "ignoreIds"
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "description": "Hide All Columns in a given View"
      }
    },
    "/api/v2/meta/tables/{tableId}/share": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "get": {
        "summary": "List Shared Views",
        "operationId": "db-view-share-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedViewList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "created_at": "2023-03-02 17:46:31",
                          "fk_model_id": "md_mhs9z4r2ak98x0",
                          "id": "vw_lg052cnc1c26kf",
                          "is_default": 1,
                          "lock_type": "collaborative",
                          "meta": {},
                          "order": 1,
                          "base_id": "p_xm3thidrblw4n7",
                          "show": 1,
                          "show_system_fields": null,
                          "title": "Sheet-1",
                          "type": 3,
                          "updated_at": "2023-03-02 17:46:31",
                          "uuid": null,
                          "view": {
                            "source_id": "ds_g4ccx6e77h1dmi",
                            "created_at": "2023-03-02 17:46:31",
                            "fk_view_id": "vw_lg052cnc1c26kf",
                            "meta": null,
                            "base_id": "p_xm3thidrblw4n7",
                            "row_height": null,
                            "updated_at": "2023-03-02 17:46:31",
                            "uuid": null
                          }
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "List all shared views in a given Table",
        "tags": [
          "DB View Share"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/views/{viewId}/share": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "vw_wtdg2meyig5l4q"
          },
          "name": "viewId",
          "in": "path",
          "required": true,
          "description": "Unique View ID"
        }
      ],
      "post": {
        "summary": "Create Shared View",
        "operationId": "db-view-share-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedViewReq"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "meta": {},
                      "password": "123456789"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View Share"
        ],
        "description": "Create a shared view in a given View..",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "patch": {
        "summary": "Update Shared View",
        "operationId": "db-view-share-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedView"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedViewReq"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "DB View Share"
        ],
        "description": "Update a shared view in a given View..",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Delete Shared View",
        "operationId": "db-view-share-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Delete a shared view in a given View.",
        "tags": [
          "DB View Share"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/views/{viewId}/columns": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "vw_wtdg2meyig5l4q"
          },
          "name": "viewId",
          "in": "path",
          "required": true,
          "description": "Unique View ID"
        }
      ],
      "get": {
        "summary": "List Columns In View",
        "operationId": "db-view-column-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "ai": 0,
                          "au": 0,
                          "source_id": "ds_krsappzu9f8vmo",
                          "cc": "",
                          "cdf": null,
                          "clen": "45",
                          "column_name": "title",
                          "cop": "2",
                          "created_at": "2023-03-02 13:14:16",
                          "csn": "utf8mb4",
                          "ct": "varchar(45)",
                          "deleted": null,
                          "dt": "varchar",
                          "dtx": "specificType",
                          "dtxp": "45",
                          "dtxs": null,
                          "fk_model_id": "md_yvwvbt2i78rgcm",
                          "id": "cl_0j9gv0oi8vjy46",
                          "meta": null,
                          "np": null,
                          "ns": null,
                          "order": 2,
                          "pk": 0,
                          "base_id": "p_01clqvzik3izk6",
                          "pv": 1,
                          "rqd": 0,
                          "system": 0,
                          "title": "Title",
                          "uidt": "SingleLineText",
                          "un": 0,
                          "unique": 0,
                          "updated_at": "2023-03-02 13:14:16",
                          "validate": null,
                          "virtual": null
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View Column"
        ],
        "description": "List all columns by ViewID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "post": {
        "summary": "Create Column in View",
        "operationId": "db-view-column-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Column"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "ai": 0,
                      "au": 0,
                      "source_id": "ds_krsappzu9f8vmo",
                      "cc": "",
                      "cdf": null,
                      "clen": "45",
                      "column_name": "title",
                      "cop": "2",
                      "created_at": "2023-03-02 13:14:16",
                      "csn": "utf8mb4",
                      "ct": "varchar(45)",
                      "deleted": null,
                      "dt": "varchar",
                      "dtx": "specificType",
                      "dtxp": "45",
                      "dtxs": null,
                      "fk_model_id": "md_yvwvbt2i78rgcm",
                      "id": "cl_0j9gv0oi8vjy46",
                      "meta": null,
                      "np": null,
                      "ns": null,
                      "order": 2,
                      "pk": 0,
                      "base_id": "p_01clqvzik3izk6",
                      "pv": 1,
                      "rqd": 0,
                      "system": 0,
                      "title": "Title",
                      "uidt": "SingleLineText",
                      "un": 0,
                      "unique": 0,
                      "updated_at": "2023-03-02 13:14:16",
                      "validate": null,
                      "virtual": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View Column"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewColumnReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "fk_column_id": "cl_m4wkaqgqqjzoeh",
                    "show": 0,
                    "order": 1
                  }
                }
              }
            }
          }
        },
        "description": "Create a new column in a given View",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/views/{viewId}/columns/{columnId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "vw_wtdg2meyig5l4q"
          },
          "name": "viewId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "cl_8iw2o4ejzvdyna",
            "type": "string"
          },
          "name": "columnId",
          "in": "path",
          "required": true,
          "description": "Unique Column ID"
        }
      ],
      "patch": {
        "summary": "Update View Column",
        "operationId": "db-view-column-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View Column"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewColumnUpdateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "show": 0,
                    "order": 1
                  }
                }
              }
            }
          }
        },
        "description": "Update a column in a View",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/views/{viewId}/sorts": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "vw_wtdg2meyig5l4q"
          },
          "name": "viewId",
          "in": "path",
          "required": true,
          "description": "Unique View ID"
        }
      ],
      "get": {
        "summary": "List View Sorts",
        "operationId": "db-table-sort-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SortList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "id": "so_xd4t51uv60ghzl",
                          "fk_column_id": "cl_l11b769pe2j1ce",
                          "fk_model_id": "md_ehn5izr99m7d45",
                          "source_id": "ds_3l9qx8xqksenrl",
                          "direction": "desc",
                          "order": 1,
                          "base_id": "p_9sx43moxhqtjm3"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Sort"
        ],
        "description": "List all the sort data in a given View",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "post": {
        "summary": "Update View Sort",
        "operationId": "db-table-sort-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Sort"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortReq"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "push_to_top": {
                        "type": "boolean",
                        "example": true,
                        "description": "Push the sort to the top of the list"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "description": "Update the sort data in a given View",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/sorts/{sortId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "so_xd4t51uv60ghzl"
          },
          "name": "sortId",
          "in": "path",
          "description": "Unique Sort ID",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Sort",
        "operationId": "db-table-sort-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "so_xd4t51uv60ghzl",
                      "fk_column_id": "cl_l11b769pe2j1ce",
                      "fk_model_id": "md_ehn5izr99m7d45",
                      "source_id": "ds_3l9qx8xqksenrl",
                      "direction": "desc",
                      "order": 1,
                      "base_id": "p_9sx43moxhqtjm3"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Sort"
        ],
        "description": "Get the sort data by Sort ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "patch": {
        "summary": "Update Sort",
        "operationId": "db-table-sort-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "example": 1
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Sort"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SortReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "direction": "asc",
                    "fk_column_id": "cl_l11b769pe2j1ce"
                  }
                }
              }
            }
          }
        },
        "description": "Update the sort data by Sort ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Delete Sort",
        "operationId": "db-table-sort-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Sort"
        ],
        "description": "Delete the sort data by Sort ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/views/{viewId}/filters": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "vw_wtdg2meyig5l4q"
          },
          "name": "viewId",
          "in": "path",
          "required": true,
          "description": "Unique View ID"
        }
      ],
      "get": {
        "summary": "Get View Filter",
        "operationId": "db-table-filter-read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "comparison_op": "eq",
                          "comparison_sub_op": null,
                          "created_at": "2023-03-02 18:18:05",
                          "fk_column_id": "cl_d7ah9n2qfupgys",
                          "fk_hook_id": null,
                          "fk_parent_id": null,
                          "fk_view_id": "vw_b739e29vqmrxnf",
                          "id": "fi_xn647tpmdq8fu8",
                          "is_group": null,
                          "logical_op": "and",
                          "order": 1,
                          "base_id": "p_xm3thidrblw4n7",
                          "updated_at": "2023-03-02 18:18:05",
                          "value": "foo"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Filter"
        ],
        "description": "Get the filter data in a given View",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "post": {
        "summary": "Create View Filter",
        "operationId": "db-table-filter-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Filter"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "source_id": "ds_g4ccx6e77h1dmi",
                      "comparison_op": "eq",
                      "comparison_sub_op": null,
                      "created_at": "2023-03-02 18:18:05",
                      "fk_column_id": "cl_d7ah9n2qfupgys",
                      "fk_hook_id": null,
                      "fk_parent_id": null,
                      "fk_view_id": "vw_b739e29vqmrxnf",
                      "id": "fi_xn647tpmdq8fu8",
                      "is_group": null,
                      "logical_op": "and",
                      "order": 1,
                      "base_id": "p_xm3thidrblw4n7",
                      "updated_at": "2023-03-02 18:18:05",
                      "value": "foo"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Filter"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "comparison_op": "eq",
                    "comparison_sub_op": null,
                    "fk_column_id": "cl_d7ah9n2qfupgys",
                    "is_group": false,
                    "logical_op": "and",
                    "value": "foo"
                  }
                }
              }
            }
          }
        },
        "description": "Update the filter data in a given View",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/hooks/{hookId}/filters": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "hk_0063k4o1frnxbr"
          },
          "name": "hookId",
          "in": "path",
          "required": true,
          "description": "Unique Hook ID"
        }
      ],
      "get": {
        "summary": "Get Hook Filter",
        "operationId": "db-table-webhook-filter-read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "comparison_op": "eq",
                          "comparison_sub_op": null,
                          "created_at": "2023-03-02 18:18:05",
                          "fk_column_id": "cl_d7ah9n2qfupgys",
                          "fk_hook_id": null,
                          "fk_parent_id": null,
                          "fk_view_id": "vw_b739e29vqmrxnf",
                          "id": "fi_xn647tpmdq8fu8",
                          "is_group": null,
                          "logical_op": "and",
                          "order": 1,
                          "base_id": "p_xm3thidrblw4n7",
                          "updated_at": "2023-03-02 18:18:05",
                          "value": "foo"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Webhook Filter"
        ],
        "description": "Get the filter data in a given Hook",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "post": {
        "summary": "Create Hook Filter",
        "operationId": "db-table-webhook-filter-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Filter"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "source_id": "ds_g4ccx6e77h1dmi",
                      "comparison_op": "eq",
                      "comparison_sub_op": null,
                      "created_at": "2023-03-02 18:18:05",
                      "fk_column_id": "cl_d7ah9n2qfupgys",
                      "fk_hook_id": null,
                      "fk_parent_id": null,
                      "fk_view_id": "vw_b739e29vqmrxnf",
                      "id": "fi_xn647tpmdq8fu8",
                      "is_group": null,
                      "logical_op": "and",
                      "order": 1,
                      "base_id": "p_xm3thidrblw4n7",
                      "updated_at": "2023-03-02 18:18:05",
                      "value": "foo"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Webhook Filter"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "comparison_op": "eq",
                    "comparison_sub_op": null,
                    "fk_column_id": "cl_d7ah9n2qfupgys",
                    "is_group": false,
                    "logical_op": "and",
                    "value": "foo"
                  }
                }
              }
            }
          }
        },
        "description": "Create filter(s) in a given Hook",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/hooks/{hookId}/logs": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "hk_0063k4o1frnxbr"
          },
          "name": "hookId",
          "in": "path",
          "required": true,
          "description": "Unique Hook ID"
        }
      ],
      "get": {
        "summary": "List Hook Logs",
        "operationId": "db-table-webhook-logs-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HookLogList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "source_id": "ds_jxuewivwbxeum2",
                          "event": "after",
                          "execution_time": "98",
                          "fk_hook_id": "hk_035ijv5qdi97y5",
                          "id": "string",
                          "notifications": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b\"}}",
                          "operation": "insert",
                          "payload": "{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b\"}",
                          "base_id": "p_tbhl1hnycvhe5l",
                          "response": "{\"status\":200,\"statusText\":\"OK\",\"headers\":{\"server\":\"nginx\",\"content-type\":\"text/plain; charset=UTF-8\",\"transfer-encoding\":\"chunked\",\"connection\":\"close\",\"vary\":\"Accept-Encoding\",\"x-request-id\":\"53844a7d-ede8-4798-adf7-8af441908a72\",\"x-token-id\":\"6eb45ce5-b611-4be1-8b96-c2965755662b\",\"cache-control\":\"no-cache, private\",\"date\":\"Fri, 24 Mar 2023 10:50:10 GMT\"},\"config\":{\"url\":\"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b\",\"method\":\"post\",\"data\":\"{\\\"type\\\":\\\"records.after.insert\\\",\\\"id\\\":\\\"a77d97dc-a3e4-4719-9b46-45f93e0cc99a\\\",\\\"data\\\":{\\\"table_id\\\":\\\"md_d8v403o74mf5lf\\\",\\\"table_name\\\":\\\"Sheet-2\\\"}}\",\"headers\":{\"Accept\":\"application/json, text/plain, */*\",\"Content-Type\":\"application/x-www-form-urlencoded\",\"User-Agent\":\"axios/0.21.4\",\"Content-Length\":138},\"params\":{}}}",
                          "test_call": 0,
                          "triggered_by": "w@nocodb.com",
                          "type": "URL"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Webhook Logs"
        ],
        "description": "List the log data in a given Hook",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "limit"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset"
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/filters/{filterId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "pattern": "fi_pgfuo11uhn2xeo"
          },
          "name": "filterId",
          "in": "path",
          "required": true,
          "description": "Unique Filter ID"
        }
      ],
      "get": {
        "summary": "Get Filter",
        "operationId": "db-table-filter-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Filter"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "source_id": "ds_g4ccx6e77h1dmi",
                      "comparison_op": "eq",
                      "comparison_sub_op": null,
                      "created_at": "2023-03-02 18:18:05",
                      "fk_column_id": "cl_d7ah9n2qfupgys",
                      "fk_hook_id": null,
                      "fk_parent_id": null,
                      "fk_view_id": "vw_b739e29vqmrxnf",
                      "id": "fi_xn647tpmdq8fu8",
                      "is_group": null,
                      "logical_op": "and",
                      "order": 1,
                      "base_id": "p_xm3thidrblw4n7",
                      "updated_at": "2023-03-02 18:18:05",
                      "value": "foo"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Filter"
        ],
        "description": "Get the filter data with a given Filter ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "patch": {
        "summary": "Update Filter",
        "operationId": "db-table-filter-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Filter"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "comparison_op": "eq",
                    "comparison_sub_op": null,
                    "fk_column_id": "cl_d7ah9n2qfupgys",
                    "is_group": false,
                    "logical_op": "and",
                    "value": "foo"
                  }
                }
              }
            }
          }
        },
        "description": "Update the filter data with a given Filter ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Delete Filter",
        "operationId": "db-table-filter-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Filter"
        ],
        "description": "Delete the filter data with a given Filter ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/filters/{filterGroupId}/children": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "fi_pgfuo11uhn2xeo",
            "description": "Filter Group ID"
          },
          "name": "filterGroupId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Filter Group Children",
        "operationId": "db-table-filter-children-read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "comparison_op": "eq",
                          "comparison_sub_op": null,
                          "created_at": "2023-03-02 18:18:05",
                          "fk_column_id": "cl_d7ah9n2qfupgys",
                          "fk_hook_id": null,
                          "fk_parent_id": null,
                          "fk_view_id": "vw_b739e29vqmrxnf",
                          "id": "fi_xn647tpmdq8fu8",
                          "is_group": null,
                          "logical_op": "and",
                          "order": 1,
                          "base_id": "p_xm3thidrblw4n7",
                          "updated_at": "2023-03-02 18:18:05",
                          "value": "foo"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Filter"
        ],
        "description": "Get Filter Group Children of a given group ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/grids": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "post": {
        "summary": "Create Grid View",
        "operationId": "db-view-grid-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "vw_o50jiw9v2txktv",
                      "source_id": "ds_a95vextjl510z7",
                      "base_id": "p_slkm6i3v31q4bc",
                      "fk_model_id": "md_8hr3xndx8umuce",
                      "title": "Grid-1",
                      "type": 3,
                      "is_default": null,
                      "show_system_fields": null,
                      "lock_type": "collaborative",
                      "uuid": null,
                      "password": null,
                      "show": true,
                      "order": 2,
                      "created_at": "2023-03-13T07:29:16.610Z",
                      "updated_at": "2023-03-13T07:29:16.610Z",
                      "meta": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewCreateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "title": "My Grid View",
                    "type": 3,
                    "copy_from_id": null,
                    "fk_grp_col_id": null,
                    "fk_geo_data_col_id": null
                  }
                }
              }
            }
          }
        },
        "description": "Create a new grid view in a given Table",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/forms": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "post": {
        "summary": "Create Form View",
        "operationId": "db-view-form-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "vw_a830n4bmwk8wlp",
                      "source_id": "ds_a95vextjl510z7",
                      "base_id": "p_slkm6i3v31q4bc",
                      "fk_model_id": "md_8hr3xndx8umuce",
                      "title": "Form-1",
                      "type": 1,
                      "is_default": null,
                      "show_system_fields": null,
                      "lock_type": "collaborative",
                      "uuid": null,
                      "password": null,
                      "show": true,
                      "order": 4,
                      "created_at": "2023-03-13T07:29:19.957Z",
                      "updated_at": "2023-03-13T07:29:19.957Z",
                      "meta": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Create a new form view in a given Table",
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewCreateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "title": "My Form View",
                    "type": 1,
                    "copy_from_id": null,
                    "fk_grp_col_id": null,
                    "fk_geo_data_col_id": null
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/forms/{formViewId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "vw_6fqln9vdytdv8q"
          },
          "name": "formViewId",
          "in": "path",
          "required": true,
          "description": "Unique Form View ID"
        }
      ],
      "patch": {
        "summary": "Update Form View",
        "operationId": "db-view-form-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "banner_image_url": null,
                    "email": "user@example.com",
                    "heading": "My Form",
                    "lock_type": "collaborative",
                    "logo_url": null,
                    "meta": null,
                    "redirect_after_secs": null,
                    "redirect_url": null,
                    "show_blank_form": 0,
                    "subheading": "My Form Subheading",
                    "submit_another_form": 0,
                    "success_msg": "Thank you for the submission.",
                    "title": "Form View 1"
                  }
                }
              }
            }
          }
        },
        "description": "Update the form data by Form ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "get": {
        "summary": "Get Form",
        "operationId": "db-view-form-read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "source_id": "ds_g4ccx6e77h1dmi",
                      "banner_image_url": null,
                      "columns": [
                        {
                          "id": "fvc_ugj9zo5bzocxtl",
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "base_id": "p_xm3thidrblw4n7",
                          "fk_view_id": "vw_kdf5cr7qmhksek",
                          "fk_column_id": "cl_phvuuwjrzcdo0g",
                          "uuid": null,
                          "label": null,
                          "help": null,
                          "description": null,
                          "required": null,
                          "show": 0,
                          "order": 1,
                          "created_at": "2023-03-04 16:40:47",
                          "updated_at": "2023-03-04 16:40:47",
                          "meta": {}
                        }
                      ],
                      "email": "user@example.com",
                      "fk_model_id": "md_rsu68aqjsbyqtl",
                      "heading": "My Form",
                      "lock_type": "collaborative",
                      "logo_url": null,
                      "meta": null,
                      "redirect_after_secs": null,
                      "redirect_url": null,
                      "show_blank_form": 0,
                      "subheading": "My Form Subheading",
                      "submit_another_form": 0,
                      "success_msg": "Thank you for the submission.",
                      "title": "Form View 1"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "description": "Get the form data by Form ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/form-columns/{formViewColumnId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "fvc_1m9b0aub791d4m",
            "type": "string"
          },
          "name": "formViewColumnId",
          "in": "path",
          "required": true,
          "description": "Unique Form View Column ID"
        }
      ],
      "patch": {
        "summary": "Update Form Column",
        "operationId": "db-view-form-column-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormColumnReq"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "description": null,
                      "help": "This is a help text",
                      "label": "Form Label",
                      "meta": null,
                      "order": 1,
                      "required": 0,
                      "show": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormColumnReq"
              }
            }
          }
        },
        "description": "Update the form column(s) by Form View Column ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/grids/{viewId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "vw_wtdg2meyig5l4q"
          },
          "name": "viewId",
          "in": "path",
          "required": true,
          "description": "Unique View ID"
        }
      ],
      "patch": {
        "summary": "Update Grid View",
        "operationId": "db-view-grid-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GridUpdateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "row_height": 1,
                    "meta": null
                  }
                }
              }
            }
          }
        },
        "description": "Update Grid View",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/grids/{gridId}/grid-columns": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "vw_q6k13mmygdi3yz"
          },
          "name": "gridId",
          "in": "path",
          "required": true,
          "description": "Grid View ID"
        }
      ],
      "get": {
        "summary": "List Grid Columns",
        "operationId": "db-view-grid-columns-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridColumn"
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "id": "nc_c8jz4kxe6xvh11",
                        "fk_view_id": "vw_p2jcatxz4mvcfw",
                        "fk_column_id": "cl_c5knoi4xs4sfpt",
                        "base_id": "p_xm3thidrblw4n7",
                        "source_id": "ds_g4ccx6e77h1dmi",
                        "show": 0,
                        "order": 1,
                        "width": "200px",
                        "help": null
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "description": "List all columns in the given Grid",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/grid-columns/{columnId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "cl_8iw2o4ejzvdyna",
            "type": "string"
          },
          "name": "columnId",
          "in": "path",
          "required": true,
          "description": "Unique Column ID"
        }
      ],
      "patch": {
        "summary": "Update Grid Column",
        "operationId": "db-view-grid-column-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GridColumnReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "fk_column_id": "cl_c5knoi4xs4sfpt",
                    "label": "My Column",
                    "width": "200px"
                  }
                }
              }
            }
          }
        },
        "description": "Update grid column(s) in the given Grid",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/galleries": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "post": {
        "summary": "Create Gallery View",
        "operationId": "db-view-gallery-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "vw_qp94qfnvffgk5f",
                      "source_id": "ds_a95vextjl510z7",
                      "base_id": "p_slkm6i3v31q4bc",
                      "fk_model_id": "md_8hr3xndx8umuce",
                      "title": "Gallery-1",
                      "type": 2,
                      "is_default": null,
                      "show_system_fields": null,
                      "lock_type": "collaborative",
                      "uuid": null,
                      "password": null,
                      "show": true,
                      "order": 3,
                      "created_at": "2023-03-13T07:29:18.707Z",
                      "updated_at": "2023-03-13T07:29:18.707Z",
                      "meta": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewCreateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "title": "My Gallery View",
                    "type": 2,
                    "copy_from_id": null,
                    "fk_grp_col_id": null,
                    "fk_geo_data_col_id": null
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/galleries/{galleryViewId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "vw_1eq2wk2xe3a9j5"
          },
          "name": "galleryViewId",
          "in": "path",
          "required": true,
          "description": "Unique Gallery View ID"
        }
      ],
      "patch": {
        "summary": "Update Gallery View",
        "operationId": "db-view-gallery-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GalleryUpdateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "fk_cover_image_col_id": "cl_ib8l4j1kiu1efx",
                    "meta": null
                  }
                }
              }
            }
          }
        },
        "description": "Update the Gallery View data with Gallery ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "get": {
        "summary": "Get Gallery View",
        "operationId": "db-view-gallery-read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gallery"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "description": "Get the Gallery View data with Gallery ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/kanbans": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "post": {
        "summary": "Create Kanban View",
        "operationId": "db-view-kanban-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "vw_569sqsrp2vuff4",
                      "source_id": "ds_a95vextjl510z7",
                      "base_id": "p_slkm6i3v31q4bc",
                      "fk_model_id": "md_8hr3xndx8umuce",
                      "title": "Kanban-1",
                      "type": 4,
                      "is_default": null,
                      "show_system_fields": null,
                      "lock_type": "collaborative",
                      "uuid": null,
                      "password": null,
                      "show": true,
                      "order": 5,
                      "created_at": "2023-03-13T07:29:21.387Z",
                      "updated_at": "2023-03-13T07:29:21.387Z",
                      "meta": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewCreateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "title": "My Kanban View",
                    "type": 4,
                    "copy_from_id": null,
                    "fk_grp_col_id": "cl_g0a89q9xdry3lu",
                    "fk_geo_data_col_id": null
                  }
                }
              }
            }
          }
        },
        "description": "Create a new Kanban View",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/kanbans/{kanbanViewId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "vw_1eq2wk2xe3a9j5"
          },
          "name": "kanbanViewId",
          "in": "path",
          "required": true,
          "description": "Unique Kanban View ID"
        }
      ],
      "patch": {
        "summary": "Update Kanban View",
        "operationId": "db-view-kanban-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KanbanUpdateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "fk_grp_col_id": "cl_g0a89q9xdry3lu",
                    "fk_cover_image_col_id": "cl_ib8l4j1kiu1efx",
                    "meta": {
                      "cl_g0a89q9xdry3lu": [
                        {
                          "id": "uncategorized",
                          "title": null,
                          "order": 0,
                          "color": "#c2f5e8",
                          "collapsed": false
                        },
                        {
                          "id": "sl_ihyva6jx6dg0fc",
                          "fk_column_id": "cl_g0a89q9xdry3lu",
                          "title": "a",
                          "color": "#cfdffe",
                          "order": 1,
                          "collapsed": false
                        },
                        {
                          "id": "sl_gqdm5v6t8aetoa",
                          "fk_column_id": "cl_g0a89q9xdry3lu",
                          "title": "b",
                          "color": "#d0f1fd",
                          "order": 2,
                          "collapsed": false
                        },
                        {
                          "id": "sl_eipnl0kn7a9d3c",
                          "fk_column_id": "cl_g0a89q9xdry3lu",
                          "title": "cc",
                          "color": "#c2f5e8",
                          "order": 3,
                          "collapsed": false
                        },
                        {
                          "id": "sl_dei8p2jq0cnlv0",
                          "fk_column_id": "cl_g0a89q9xdry3lu",
                          "title": "d",
                          "color": "#ffdaf6",
                          "order": 4,
                          "collapsed": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update the Kanban View data with Kanban ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "get": {
        "summary": "Get Kanban View",
        "operationId": "db-view-kanban-read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kanban"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "description": "Get the Kanban View data by Kanban ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/maps": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "post": {
        "summary": "Create Map View",
        "operationId": "db-view-map-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "source_id": "ds_g4ccx6e77h1dmi",
                      "created_at": "2023-03-02 17:46:31",
                      "fk_model_id": "md_mhs9z4r2ak98x0",
                      "id": "vw_lg052cnc1c26kf",
                      "is_default": 1,
                      "lock_type": "collaborative",
                      "meta": {},
                      "order": 1,
                      "password": null,
                      "base_id": "p_xm3thidrblw4n7",
                      "show": 1,
                      "show_system_fields": null,
                      "title": "Sheet-1",
                      "type": 3,
                      "updated_at": "2023-03-02 17:46:31",
                      "uuid": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewCreateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "title": "My Map View",
                    "type": 5,
                    "copy_from_id": null,
                    "fk_grp_col_id": null,
                    "fk_geo_data_col_id": "cl_uu1meolj00tlrq"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "description": "Create a new Map View",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/maps/{mapViewId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "vw_1eq2wk2xe3a9j5"
          },
          "name": "mapViewId",
          "in": "path",
          "required": true,
          "description": "Unique Map View ID"
        }
      ],
      "patch": {
        "summary": "Update Map View",
        "operationId": "db-view-map-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapUpdateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "fk_geo_data_col_id": "cl_8iw2o4ejzvdyna",
                    "meta": null
                  }
                }
              }
            }
          }
        },
        "description": "Update the Map View data by Map ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "get": {
        "summary": "Get Map View",
        "operationId": "db-view-map-read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Map"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB View"
        ],
        "description": "Get the Map View data by Map ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}/meta-diff": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "post": {
        "summary": "Sync Meta",
        "operationId": "base-meta-diff-sync",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "la6fd99uw6eao"
                      },
                      "example": "The meta has been synchronized successfully"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "msg": "The meta has been synchronized successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Base"
        ],
        "description": "Synchronise the meta data difference between NC_DB and external data sources ",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "get": {
        "summary": "Meta Diff",
        "operationId": "base-meta-diff-get",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Base"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "x-stoplight": {
                      "id": "awdkjwr7uultr"
                    },
                    "type": "object",
                    "properties": {
                      "table_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "jjj8ufafq1sd2"
                        },
                        "description": "Table Name",
                        "example": "Table 1"
                      },
                      "source_id": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "smx2or6bv1xym"
                        },
                        "description": "Source ID",
                        "example": "ds_rrplkgy0pq1f3c"
                      },
                      "type": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "zr19ahh1s6d13"
                        },
                        "description": "Change Type",
                        "example": "table"
                      },
                      "detectedChanges": {
                        "type": "array",
                        "x-stoplight": {
                          "id": "bptxla2y27aq6"
                        },
                        "description": "Detected Changes",
                        "items": {
                          "x-stoplight": {
                            "id": "ob16o1ln7xy8o"
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "table_name": "_nc_m2m_uuv_xzru3m",
                        "source_id": "ds_rrplkgy0pq1f3c",
                        "type": "table",
                        "detectedChanges": [
                          {
                            "type": "TABLE_NEW",
                            "msg": "New table"
                          },
                          {
                            "type": "TABLE_RELATION_ADD",
                            "tn": "_nc_m2m_uuv_xzru3m",
                            "rtn": "Sheet-1",
                            "cn": "table1_id",
                            "rcn": "id",
                            "msg": "New relation added",
                            "relationType": "bt",
                            "cstn": "_nc_m2m_uuv_xzru3m_table1_id_foreign"
                          },
                          {
                            "type": "TABLE_RELATION_ADD",
                            "tn": "_nc_m2m_uuv_xzru3m",
                            "rtn": "address",
                            "cn": "table2_id",
                            "rcn": "address_id",
                            "msg": "New relation added",
                            "relationType": "bt",
                            "cstn": "_nc_m2m_uuv_xzru3m_table2_id_foreign"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Get the meta data difference between NC_DB and external data sources "
      }
    },
    "/api/v2/meta/bases/{baseId}/meta-diff/{sourceId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        },
        {
          "schema": {
            "type": "string",
            "pattern": "ds_j04jmxh5xg10lu"
          },
          "name": "sourceId",
          "in": "path",
          "required": true,
          "description": "Unique Source ID"
        }
      ],
      "post": {
        "summary": "Synchronise Source Meta",
        "operationId": "source-meta-diff-sync",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "acy7tx4rounqw"
                      },
                      "example": "The source meta has been synchronized successfully"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "msg": "The source meta has been synchronized successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Source"
        ],
        "description": "Synchronise the meta data difference between NC_DB and external data sources in a given Source",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "get": {
        "summary": "Source Meta Diff",
        "operationId": "source-meta-diff-get",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Source"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "x-stoplight": {
                      "id": "pav4jmel1ebeu"
                    },
                    "type": "object",
                    "properties": {
                      "table_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "xjw4k4httzmaf"
                        },
                        "description": "Table Name",
                        "example": "Table 1"
                      },
                      "source_id": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "l1o3qhkgagsdl"
                        },
                        "example": "ds_rrplkgy0pq1f3c",
                        "description": "Source ID"
                      },
                      "type": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "v5ciaygrj64uh"
                        },
                        "description": "Change Type",
                        "example": "table"
                      },
                      "detectedChanges": {
                        "type": "array",
                        "x-stoplight": {
                          "id": "wqn5noi0e46q8"
                        },
                        "description": "Detected Changes",
                        "items": {
                          "x-stoplight": {
                            "id": "r2roo274wquvf"
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "table_name": "_nc_m2m_uuv_xzru3m",
                        "source_id": "ds_rrplkgy0pq1f3c",
                        "type": "table",
                        "detectedChanges": [
                          {
                            "type": "TABLE_NEW",
                            "msg": "New table"
                          },
                          {
                            "type": "TABLE_RELATION_ADD",
                            "tn": "_nc_m2m_uuv_xzru3m",
                            "rtn": "Sheet-1",
                            "cn": "table1_id",
                            "rcn": "id",
                            "msg": "New relation added",
                            "relationType": "bt",
                            "cstn": "_nc_m2m_uuv_xzru3m_table1_id_foreign"
                          },
                          {
                            "type": "TABLE_RELATION_ADD",
                            "tn": "_nc_m2m_uuv_xzru3m",
                            "rtn": "address",
                            "cn": "table2_id",
                            "rcn": "address_id",
                            "msg": "New relation added",
                            "relationType": "bt",
                            "cstn": "_nc_m2m_uuv_xzru3m_table2_id_foreign"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Get the meta data difference between NC_DB and external data sources in a given Source"
      }
    },
    "/api/v2/meta/bases/{baseId}/has-empty-or-null-filters": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "get": {
        "summary": "List Empty & Null Filter",
        "operationId": "base-has-empty-or-null-filters",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Base"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Check if a base contains empty and null filters. Used in `Show NULL and EMPTY in Filter` in Base Setting.",
        "x-internal": true
      }
    },
    "/api/v2/public/shared-view/{sharedViewUuid}/group/{columnId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "24a6d0bb-e45d-4b1a-bfef-f492d870de9f"
          },
          "name": "sharedViewUuid",
          "in": "path",
          "required": true,
          "description": "Shared View UUID"
        },
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "cl_8iw2o4ejzvdyna",
            "type": "string"
          },
          "name": "columnId",
          "in": "path",
          "required": true,
          "description": "Unique Column ID"
        },
        {
          "schema": {
            "type": "string"
          },
          "in": "header",
          "name": "xc-password",
          "description": "Shared view password"
        }
      ],
      "get": {
        "summary": "List Shared View Grouped Data",
        "operationId": "public-grouped-data-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "x-stoplight": {
                      "id": "bldcv1pwuri5s"
                    },
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "n0ujmkbyhgsxo"
                        },
                        "description": "The Grouped Key"
                      },
                      "value": {
                        "type": "object",
                        "x-stoplight": {
                          "id": "0xsi3jvwn7duo"
                        },
                        "description": "the paginated result of the given key",
                        "required": [
                          "list",
                          "pageInfo"
                        ],
                        "properties": {
                          "list": {
                            "type": "array",
                            "x-stoplight": {
                              "id": "jw8dmo16txbjv"
                            },
                            "description": "List of the target data",
                            "items": {
                              "x-stoplight": {
                                "id": "xcu8vxmf5ygyi"
                              },
                              "type": "object"
                            }
                          },
                          "pageInfo": {
                            "$ref": "#/components/schemas/Paginated",
                            "x-stoplight": {
                              "id": "1gsbgwi9bg8s5"
                            },
                            "description": "Paginated Info"
                          }
                        }
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ]
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "key": "a",
                        "value": {
                          "list": [
                            {
                              "Id": 2,
                              "Title": "foo",
                              "s": "a"
                            }
                          ],
                          "pageInfo": {
                            "totalRows": 1,
                            "page": 1,
                            "pageSize": 25,
                            "isFirstPage": true,
                            "isLastPage": true
                          }
                        }
                      },
                      {
                        "key": "b",
                        "value": {
                          "list": [
                            {
                              "Id": 3,
                              "Title": "bar",
                              "s": "b"
                            }
                          ],
                          "pageInfo": {
                            "totalRows": 1,
                            "page": 1,
                            "pageSize": 25,
                            "isFirstPage": true,
                            "isLastPage": true
                          }
                        }
                      },
                      {
                        "key": null,
                        "value": {
                          "list": [
                            {
                              "Id": 1,
                              "Title": "baz",
                              "s": null
                            }
                          ],
                          "pageInfo": {
                            "totalRows": 1,
                            "page": 1,
                            "pageSize": 25,
                            "isFirstPage": true,
                            "isLastPage": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Public"
        ],
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "fields",
            "description": "Which fields to be shown"
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "The result will be sorted based on `sort` query"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "description": "Extra filtering"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Offset in rows"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Limit in rows"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sortArrJson",
            "description": "Used for multiple sort queries"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filterArrJson",
            "description": "Used for multiple filter queries"
          }
        ],
        "description": "List Shared View Grouped Data"
      }
    },
    "/api/v2/public/shared-view/{sharedViewUuid}/rows": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "24a6d0bb-e45d-4b1a-bfef-f492d870de9f"
          },
          "name": "sharedViewUuid",
          "in": "path",
          "required": true,
          "description": "Shared View UUID"
        },
        {
          "schema": {
            "type": "string"
          },
          "in": "header",
          "name": "xc-password",
          "description": "Shared view password"
        }
      ],
      "get": {
        "summary": "List Shared View Rows",
        "operationId": "public-data-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedViewList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "source_id": "ds_g4ccx6e77h1dmi",
                          "created_at": "2023-03-02 17:46:31",
                          "fk_model_id": "md_mhs9z4r2ak98x0",
                          "id": "vw_lg052cnc1c26kf",
                          "is_default": 1,
                          "lock_type": "collaborative",
                          "meta": {},
                          "order": 1,
                          "password": null,
                          "base_id": "p_xm3thidrblw4n7",
                          "show": 1,
                          "show_system_fields": null,
                          "title": "Sheet-1",
                          "type": 3,
                          "updated_at": "2023-03-02 17:46:31",
                          "uuid": null,
                          "view": {
                            "source_id": "ds_g4ccx6e77h1dmi",
                            "created_at": "2023-03-02 17:46:31",
                            "fk_view_id": "vw_lg052cnc1c26kf",
                            "meta": null,
                            "base_id": "p_xm3thidrblw4n7",
                            "row_height": null,
                            "updated_at": "2023-03-02 17:46:31",
                            "uuid": null
                          }
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Public"
        ],
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "fields",
            "description": "Which fields to be shown"
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "The result will be sorted based on `sort` query"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "description": "Extra filtering"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Offset in rows"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Limit in rows"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sortArrJson",
            "description": "Used for multiple sort queries"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filterArrJson",
            "description": "Used for multiple filter queries"
          }
        ],
        "description": "List all shared view rows"
      },
      "post": {
        "summary": "Create Share View Row",
        "operationId": "public-data-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "Id": 1,
                      "col1": "foo",
                      "col2": "bar",
                      "CreatedAt": "2023-03-11T08:48:25.598Z",
                      "UpdatedAt": "2023-03-11T08:48:25.598Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {}
          },
          "description": ""
        },
        "tags": [
          "Public"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "xc-password",
            "description": "Shared view password"
          }
        ],
        "description": "Create a new row for the target shared view"
      }
    },
    "/api/v2/public/shared-view/{sharedViewUuid}/groupby": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "24a6d0bb-e45d-4b1a-bfef-f492d870de9f"
          },
          "name": "sharedViewUuid",
          "in": "path",
          "required": true,
          "description": "Shared View UUID"
        },
        {
          "schema": {
            "type": "string"
          },
          "in": "header",
          "name": "xc-password",
          "description": "Shared view password"
        }
      ],
      "get": {
        "summary": "List Shared View Rows",
        "operationId": "public-data-group-by",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedViewList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Public"
        ],
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "fields",
            "description": "Which fields to be shown"
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "The result will be sorted based on `sort` query"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "description": "Extra filtering"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Offset in rows"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Limit in rows"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sortArrJson",
            "description": "Used for multiple sort queries"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filterArrJson",
            "description": "Used for multiple filter queries"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "column_name",
            "description": "Columns to group by"
          }
        ],
        "description": "List all shared view rows grouped by a column"
      }
    },
    "/api/v2/public/shared-view/{sharedViewUuid}/rows/{rowId}/{relationType}/{columnName}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "24a6d0bb-e45d-4b1a-bfef-f492d870de9f"
          },
          "name": "sharedViewUuid",
          "in": "path",
          "required": true,
          "description": "Shared View UUID"
        },
        {
          "schema": {
            "example": "1"
          },
          "name": "rowId",
          "in": "path",
          "required": true,
          "description": "Unique Row ID"
        },
        {
          "schema": {
            "type": "string",
            "enum": [
              "mm",
              "hm",
              "bt"
            ]
          },
          "name": "relationType",
          "in": "path",
          "required": true,
          "description": "Relation Type"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "columnName",
          "in": "path",
          "required": true,
          "description": "Column Name"
        }
      ],
      "get": {
        "summary": "List Nested List Data",
        "operationId": "public-data-nested-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "gvblksjzjfyg7"
                      },
                      "description": "List of data objects",
                      "items": {
                        "x-stoplight": {
                          "id": "8assgoc1vtcs9"
                        },
                        "type": "object"
                      }
                    },
                    "pageInfo": {
                      "$ref": "#/components/schemas/Paginated",
                      "x-stoplight": {
                        "id": "if546w1yuo6fw"
                      },
                      "description": "Paginated info"
                    }
                  },
                  "required": [
                    "list",
                    "pageInfo"
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "Id": 1,
                          "Title": "foo",
                          "CreatedAt": "2023-03-11T08:41:41.356Z",
                          "UpdatedAt": "2023-03-11T08:41:41.356Z"
                        },
                        {
                          "Id": 2,
                          "Title": "bar",
                          "CreatedAt": "2023-03-11T08:41:45.330Z",
                          "UpdatedAt": "2023-03-11T08:41:45.330Z"
                        },
                        {
                          "Id": 3,
                          "Title": "baz",
                          "CreatedAt": "2023-03-11T08:48:25.598Z",
                          "UpdatedAt": "2023-03-11T08:48:25.598Z"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "pageSize": 1,
                        "sort": "string",
                        "totalRows": 3
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Public"
        ],
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "fields",
            "description": "Which fields to be shown"
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "The result will be sorted based on `sort` query"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "description": "Extra filtering"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Offset in rows"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Limit in rows"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sortArrJson",
            "description": "Used for multiple sort queries"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filterArrJson",
            "description": "Used for multiple filter queries"
          }
        ],
        "description": "List all nested list data in a given shared view"
      }
    },
    "/api/v2/public/shared-view/{sharedViewUuid}/rows/export/{type}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "76d44b86-bc65-4500-8956-ab512c80ab25"
          },
          "name": "sharedViewUuid",
          "in": "path",
          "required": true,
          "description": "Shared View UUID"
        },
        {
          "schema": {
            "type": "string",
            "enum": [
              "csv",
              "excel"
            ],
            "example": "csv"
          },
          "name": "type",
          "in": "path",
          "required": true,
          "description": "Export Type"
        }
      ],
      "get": {
        "summary": "Export Rows in Share View",
        "operationId": "public-csv-export",
        "description": "Export all rows in Share View in a CSV / Excel Format",
        "wrapped": true,
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {}
              }
            },
            "headers": {
              "nc-export-offset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The starting offset of the next set of rows"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Public"
        ]
      }
    },
    "/api/v2/public/shared-view/{sharedViewUuid}/nested/{columnName}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "24a6d0bb-e45d-4b1a-bfef-f492d870de9f"
          },
          "name": "sharedViewUuid",
          "in": "path",
          "required": true,
          "description": "Shared View UUID"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "columnName",
          "in": "path",
          "required": true,
          "description": "Column Name"
        },
        {
          "schema": {
            "type": "string"
          },
          "in": "header",
          "name": "xc-password",
          "description": "Shared view password"
        }
      ],
      "get": {
        "summary": "List Nested Data Relation",
        "operationId": "public-data-relation-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "fields",
            "description": "Which fields to be shown"
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "The result will be sorted based on `sort` query"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "description": "Extra filtering"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Offset in rows"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Limit in rows"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sortArrJson",
            "description": "Used for multiple sort queries"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filterArrJson",
            "description": "Used for multiple filter queries"
          }
        ],
        "tags": [
          "Public"
        ],
        "description": "List Nested Data Relation"
      }
    },
    "/api/v2/public/shared-base/{sharedBaseUuid}/meta": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "24a6d0bb-e45d-4b1a-bfef-f492d870de9f"
          },
          "name": "sharedBaseUuid",
          "in": "path",
          "required": true,
          "description": "Shared Base UUID"
        }
      ],
      "get": {
        "summary": "Get Share Source Meta",
        "operationId": "public-shared-base-get",
        "description": "Get Share Source Meta",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "base_id": {
                      "type": "string",
                      "description": "Base ID"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "base_id": "p_63b4q0qengen1x"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Public"
        ]
      }
    },
    "/api/v2/public/shared-view/{sharedViewUuid}/meta": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "24a6d0bb-e45d-4b1a-bfef-f492d870de9f"
          },
          "name": "sharedViewUuid",
          "in": "path",
          "required": true,
          "description": "Shared View UUID"
        },
        {
          "schema": {
            "type": "string"
          },
          "in": "header",
          "name": "xc-password",
          "description": "Shared view password"
        }
      ],
      "get": {
        "summary": "Get Share View Meta",
        "operationId": "public-shared-view-meta-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/View"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "relatedMetas": {},
                        "client": {
                          "type": "string"
                        },
                        "source_id": {
                          "type": "string"
                        },
                        "columns": {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "$ref": "#/components/schemas/GridColumn"
                                },
                                {
                                  "$ref": "#/components/schemas/FormColumn"
                                },
                                {
                                  "$ref": "#/components/schemas/GalleryColumn"
                                }
                              ]
                            },
                            {
                              "$ref": "#/components/schemas/Column"
                            }
                          ]
                        },
                        "model": {
                          "$ref": "#/components/schemas/Table"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "view": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/Form"
                            },
                            {
                              "$ref": "#/components/schemas/Grid"
                            },
                            {
                              "$ref": "#/components/schemas/Gallery"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Public"
        ],
        "description": "Get Share View Meta"
      }
    },
    "/api/v2/public/shared-erd/{sharedErdUuid}/meta": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "sharedErdUuid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "",
        "operationId": "public-shared-erd-meta-get",
        "tags": [
          "Public"
        ],
        "description": "",
        "parameters": []
      }
    },
    "/api/v2/meta/audits/comments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/xc-auth"
        }
      ],
      "get": {
        "summary": "List Comments in Audit",
        "operationId": "utils-comment-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "x-stoplight": {
                        "id": "5zto1xohsngbu"
                      },
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Audit",
                        "x-stoplight": {
                          "id": "d22zkup0c0l80"
                        }
                      }
                    }
                  },
                  "required": [
                    "list"
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "id": "adt_3sii7erfwrlegb",
                          "user": "w@nocodb.com",
                          "display_name": "NocoDB",
                          "ip": null,
                          "source_id": null,
                          "base_id": "p_63b4q0qengen1x",
                          "fk_model_id": "md_5mipbdg6ketmv8",
                          "row_id": "1",
                          "op_type": "COMMENT",
                          "op_sub_type": null,
                          "status": null,
                          "description": "bar",
                          "details": null,
                          "created_at": "2023-03-13T09:39:14.225Z",
                          "updated_at": "2023-03-13T09:39:14.225Z"
                        },
                        {
                          "id": "adt_fezs668qbxj8gc",
                          "user": "w@nocodb.com",
                          "display_name": "NocoDB",
                          "ip": null,
                          "source_id": null,
                          "base_id": "p_63b4q0qengen1x",
                          "fk_model_id": "md_5mipbdg6ketmv8",
                          "row_id": "1",
                          "op_type": "COMMENT",
                          "op_sub_type": null,
                          "status": null,
                          "description": "foo",
                          "details": null,
                          "created_at": "2023-03-13T09:39:13.321Z",
                          "updated_at": "2023-03-13T09:39:13.321Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "List all comments",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "10"
            },
            "in": "query",
            "name": "row_id",
            "required": true,
            "description": "Row ID"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/Id",
              "example": "md_c6csq89tl37jm5"
            },
            "in": "query",
            "name": "fk_model_id",
            "required": true,
            "description": "Foreign Key to Model"
          },
          {
            "schema": {
              "type": "boolean",
              "example": true
            },
            "in": "query",
            "name": "comments_only",
            "description": "Is showing comments only?"
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Utils"
        ]
      },
      "post": {
        "summary": "Comment Rows",
        "operationId": "utils-comment-row",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audit"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "user": "w@nocodb.com",
                      "row_id": "1",
                      "fk_model_id": "md_5mipbdg6ketmv8",
                      "op_type": "COMMENT",
                      "description": "qq",
                      "base_id": "p_63b4q0qengen1x",
                      "id": "adt_vx58jpp0loo8qy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "description": "This is the comment for the row",
                    "fk_model_id": "md_ehn5izr99m7d45",
                    "row_id": "3"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Utils"
        ],
        "description": "Create a new comment in a row. Logged in Audit.",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/audits/{auditId}/comment": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "adt_zlskd6rlf3liay"
          },
          "name": "auditId",
          "in": "path",
          "required": true,
          "description": "Audit ID"
        },
        {
          "name": "xc-auth",
          "in": "header",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Auth Token is a JWT Token generated based on the logged-in user. By default, the token is only valid for 10 hours. However, you can change the value by defining it using environment variable NC_JWT_EXPIRES_IN."
        }
      ],
      "patch": {
        "summary": "Update Comment in Audit",
        "operationId": "utils-comment-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "example": 1
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Utils"
        ],
        "description": "Update comment in Audit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentUpdateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "description": "This is the comment for the row"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/meta/audits/comments/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/xc-auth"
        }
      ],
      "get": {
        "summary": "Count Comments",
        "operationId": "utils-comment-count",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "x-stoplight": {
                      "id": "ziwcy4va5r1ao"
                    },
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "5r91gkxmaiyv4"
                        },
                        "description": "The number of comments",
                        "example": "4"
                      },
                      "row_id": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "08sgorhq172sm"
                        },
                        "description": "Row ID",
                        "example": "1"
                      }
                    },
                    "required": [
                      "count",
                      "row_id"
                    ]
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "count": "4",
                        "row_id": "1"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Return the number of comments in the given query.",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "description": "Comment IDs"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/Id"
            },
            "in": "query",
            "name": "fk_model_id",
            "required": true,
            "description": "Foreign Key to Model"
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/api/v2/meta/bases/{baseId}/audits": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ],
      "get": {
        "summary": "List Audits in Base",
        "operationId": "base-audit-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "$ref": "#/components/schemas/Audit"
                      }
                    },
                    "pageInfo": {
                      "$ref": "#/components/schemas/Paginated"
                    }
                  },
                  "required": [
                    "list",
                    "pageInfo"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "List all audit data in the given base",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset"
          },
          {
            "schema": {
              "type": "integer",
              "maximum": 1
            },
            "in": "query",
            "name": "limit"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sourceId"
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Base"
        ]
      }
    },
    "/api/v2/meta/audits/rows/{rowId}/update": {
      "parameters": [
        {
          "schema": {
            "example": "1"
          },
          "name": "rowId",
          "in": "path",
          "required": true,
          "description": "Unique Row ID"
        }
      ],
      "post": {
        "summary": "Update Audit Row",
        "operationId": "utils-audit-row-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audit"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "user": "w@nocodb.com",
                      "row_id": "1",
                      "fk_model_id": "md_5mipbdg6ketmv8",
                      "op_type": "COMMENT",
                      "description": "Table Sheet-1 : field Column A got changed from foo to bar",
                      "base_id": "p_63b4q0qengen1x",
                      "id": "adt_vx58jpp0loo8qy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Utils"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditRowUpdateReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "column_name": "baz",
                    "fk_model_id": "md_ehn5izr99m7d45",
                    "row_id": "1",
                    "prev_value": "foo",
                    "value": "bar"
                  }
                }
              }
            }
          }
        },
        "description": "Update Audit Row",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/hooks": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "get": {
        "summary": "List Table Hooks",
        "operationId": "db-table-webhook-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HookList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "active": 0,
                          "async": 0,
                          "description": "This is my hook description",
                          "env": "all",
                          "event": "after",
                          "fk_model_id": "md_rsu68aqjsbyqtl",
                          "id": "string",
                          "notification": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"http://example.com\"}}",
                          "null": null,
                          "operation": "insert",
                          "retries": 10,
                          "retry_interval": 60000,
                          "timeout": 60000,
                          "title": "My Webhook"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "List all hook records in the given Table",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "DB Table Webhook"
        ]
      },
      "post": {
        "summary": "Create Table Hook",
        "operationId": "db-table-webhook-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hook"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "active": 0,
                      "async": 0,
                      "description": "This is my hook description",
                      "env": "all",
                      "event": "after",
                      "fk_model_id": "md_rsu68aqjsbyqtl",
                      "id": "string",
                      "notification": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"http://example.com\"}}",
                      "null": null,
                      "operation": "insert",
                      "retries": 10,
                      "retry_interval": 60000,
                      "timeout": 60000,
                      "title": "My Webhook"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Create a hook in the given table",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HookReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "active": 0,
                    "async": 0,
                    "description": "This is my hook description",
                    "env": "all",
                    "event": "after",
                    "fk_model_id": "md_rsu68aqjsbyqtl",
                    "id": "string",
                    "notification": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"http://example.com\"}}",
                    "null": null,
                    "operation": "insert",
                    "retries": 10,
                    "retry_interval": 60000,
                    "timeout": 60000,
                    "title": "My Webhook",
                    "condition": false
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DB Table Webhook"
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/hooks/test": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "post": {
        "summary": "Test Hook",
        "operationId": "db-table-webhook-test",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "l5k90tzuvvv1g"
                      },
                      "example": "The hook has been tested successfully"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "msg": "The hook has been tested successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Webhook"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HookTestReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "hook": {
                      "active": 0,
                      "async": 0,
                      "description": "This is my hook description",
                      "env": "all",
                      "event": "after",
                      "fk_model_id": "md_rsu68aqjsbyqtl",
                      "id": "string",
                      "notification": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"http://example.com\"}}",
                      "null": null,
                      "operation": "insert",
                      "retries": 10,
                      "retry_interval": 60000,
                      "timeout": 60000,
                      "title": "My Webhook"
                    },
                    "payload": {
                      "data": {
                        "Id": 1,
                        "Title": "Sample Text",
                        "CreatedAt": "2023-03-03T10:03:06.484Z",
                        "UpdatedAt": "2023-03-03T10:03:06.484Z",
                        "attachment": [
                          {
                            "url": "https://nocodb.com/dummy.png",
                            "title": "image.png",
                            "mimetype": "image/png",
                            "size": 0
                          }
                        ],
                        "f": "Sample Output"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Test the hook in the given Table",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/hooks/samplePayload/{operation}/{version}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        },
        {
          "schema": {
            "type": "string",
            "enum": [
              "insert",
              "update",
              "delete",
              "bulkInsert",
              "bulkUpdate",
              "bulkDelete"
            ]
          },
          "name": "operation",
          "in": "path",
          "required": true,
          "description": "Hook Operation"
        },
        {
          "schema": {
            "type": "string",
            "enum": [
              "v1",
              "v2"
            ]
          },
          "name": "version",
          "in": "path",
          "required": true,
          "description": "Hook Version"
        }
      ],
      "get": {
        "summary": "Get Sample Hook Payload",
        "operationId": "db-table-webhook-sample-payload-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-stoplight": {
                        "id": "qifsikf69hqbl"
                      },
                      "description": "Sample Payload Data"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": {
                        "Id": 1,
                        "Title": "Sample Text",
                        "CreatedAt": "2023-03-13T04:59:49.363Z",
                        "UpdatedAt": "2023-03-13T04:59:49.363Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Get the sample hook payload",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "DB Table Webhook"
        ]
      }
    },
    "/api/v2/meta/hooks/{hookId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "hk_0063k4o1frnxbr"
          },
          "name": "hookId",
          "in": "path",
          "required": true,
          "description": "Unique Hook ID"
        }
      ],
      "patch": {
        "summary": "Update Hook",
        "operationId": "db-table-webhook-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hook"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "active": 0,
                      "async": 0,
                      "description": "This is my hook description",
                      "env": "all",
                      "event": "after",
                      "fk_model_id": "md_rsu68aqjsbyqtl",
                      "id": "string",
                      "notification": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"http://example.com\"}}",
                      "null": null,
                      "operation": "insert",
                      "retries": 10,
                      "retry_interval": 60000,
                      "timeout": 60000,
                      "title": "My Webhook"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Webhook"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hook"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "active": 0,
                    "async": 0,
                    "description": "This is my hook description",
                    "env": "all",
                    "event": "after",
                    "fk_model_id": "md_rsu68aqjsbyqtl",
                    "id": "string",
                    "notification": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"http://example.com\"}}",
                    "null": null,
                    "operation": "insert",
                    "retries": 10,
                    "retry_interval": 60000,
                    "timeout": 60000,
                    "title": "My Webhook"
                  }
                }
              }
            }
          }
        },
        "description": "Update the exsiting hook by its ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Delete Hook",
        "operationId": "db-table-webhook-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "DB Table Webhook"
        ],
        "description": "Delete the exsiting hook by its ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/plugins": {
      "parameters": [
        {
          "$ref": "#/components/parameters/xc-auth"
        }
      ],
      "get": {
        "summary": "List Plugins",
        "operationId": "plugin-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "$ref": "#/components/schemas/Plugin"
                      }
                    },
                    "pageInfo": {
                      "$ref": "#/components/schemas/Paginated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "List all plugins",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Plugin"
        ]
      }
    },
    "/api/v2/meta/plugins/webhook": {
      "parameters": [
        {
          "$ref": "#/components/parameters/xc-auth"
        }
      ],
      "get": {
        "summary": "Webhook List Plugins",
        "operationId": "plugin-webhook-list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "$ref": "#/components/schemas/Plugin"
                      }
                    },
                    "pageInfo": {
                      "$ref": "#/components/schemas/Paginated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "List all webhook plugins",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Plugin"
        ]
      }
    },
    "/api/v2/meta/plugins/{pluginTitle}/status": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "pluginTitle",
          "in": "path",
          "required": true,
          "description": "Plugin Title"
        }
      ],
      "get": {
        "summary": "Get Plugin Status",
        "operationId": "plugin-status",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Check plugin is active or not",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Plugin"
        ],
        "x-internal": false
      }
    },
    "/api/v2/meta/plugins/test": {
      "parameters": [
        {
          "$ref": "#/components/parameters/xc-auth"
        }
      ],
      "post": {
        "summary": "Test Plugin",
        "operationId": "plugin-test",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Test if the plugin is working with the given configurations",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "tags": [
          "Plugin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginTestReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "title": "Plugin Foo",
                    "input": "{\"bucket\":\"my-bucket\",\"region\":\"us-west-004\",\"access_key\":\"redacted\",\"access_secret\":\"redacted\"}",
                    "category": "Email"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/meta/plugins/{pluginId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "pluginId",
          "in": "path",
          "required": true,
          "description": "Plugin ID"
        }
      ],
      "patch": {
        "summary": "Update Plugin",
        "operationId": "plugin-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Plugin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginReq"
              }
            }
          }
        },
        "description": "Update the plugin data by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "x-internal": false
      },
      "get": {
        "summary": "Get Plugin",
        "operationId": "plugin-read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Plugin"
        ],
        "description": "Get the plugin data by ID",
        "x-internal": false
      }
    },
    "/api/v2/meta/connection/test": {
      "parameters": [
        {
          "$ref": "#/components/parameters/xc-auth"
        }
      ],
      "post": {
        "summary": "Test DB Connection",
        "operationId": "utils-test-connection",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "x-stoplight": {
                        "id": "6orbk04w97ien"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Utils"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "client": "mysql2",
                    "connection": {
                      "host": "localhost",
                      "port": "3306",
                      "user": "root",
                      "password": "password",
                      "database": null
                    }
                  }
                },
                "properties": {
                  "client": {
                    "description": "DB Type",
                    "enum": [
                      "mssql",
                      "mysql",
                      "mysql2",
                      "oracledb",
                      "pg",
                      "snowflake",
                      "sqlite3"
                    ],
                    "example": "mysql2",
                    "type": "string"
                  },
                  "connection": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string"
                      },
                      "port": {
                        "type": "string"
                      },
                      "user": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "database": {
                        "$ref": "#/components/schemas/StringOrNull"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "client": "mysql2",
                    "connection": {
                      "host": "localhost",
                      "port": "3306",
                      "user": "root",
                      "password": "password",
                      "database": null
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Test the DB Connection",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/connection/select": {
      "parameters": [],
      "post": {
        "summary": "",
        "operationId": "utils-select-query",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "Utils"
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "description": ""
      }
    },
    "/api/v2/meta/nocodb/info": {
      "parameters": [
        {
          "$ref": "#/components/parameters/xc-auth"
        }
      ],
      "get": {
        "summary": "Get App Info",
        "operationId": "utils-app-info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "authType": "jwt",
                      "baseHasAdmin": true,
                      "firstUser": false,
                      "type": "rest",
                      "googleAuthEnabled": false,
                      "githubAuthEnabled": false,
                      "oneClick": false,
                      "connectToExternalDB": true,
                      "version": "0.105.3",
                      "defaultLimit": 25,
                      "ncMin": false,
                      "teleEnabled": false,
                      "auditEnabled": true,
                      "ncSiteUrl": "http://localhost:8080",
                      "ee": false,
                      "ncAttachmentFieldSize": 20971520,
                      "ncMaxAttachmentsAllowed": 10
                    }
                  },
                  "properties": {
                    "authType": {
                      "type": "string"
                    },
                    "baseHasAdmin": {
                      "type": "boolean"
                    },
                    "firstUser": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string"
                    },
                    "googleAuthEnabled": {
                      "type": "boolean"
                    },
                    "githubAuthEnabled": {
                      "type": "boolean"
                    },
                    "oneClick": {
                      "type": "boolean"
                    },
                    "connectToExternalDB": {
                      "type": "boolean"
                    },
                    "version": {
                      "type": "string"
                    },
                    "defaultLimit": {
                      "type": "number"
                    },
                    "ncMin": {
                      "type": "boolean"
                    },
                    "teleEnabled": {
                      "type": "boolean"
                    },
                    "auditEnabled": {
                      "type": "boolean"
                    },
                    "ncSiteUrl": {
                      "type": "string"
                    },
                    "ee": {
                      "type": "boolean"
                    },
                    "ncAttachmentFieldSize": {
                      "type": "number"
                    },
                    "ncMaxAttachmentsAllowed": {
                      "type": "number"
                    },
                    "isCloud": {
                      "type": "boolean",
                      "x-stoplight": {
                        "id": "bstdkpky2131f"
                      }
                    },
                    "automationLogLevel": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "uc3vaotye2eu8"
                      },
                      "enum": [
                        "OFF",
                        "ERROR",
                        "ALL"
                      ],
                      "example": "OFF"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "authType": "jwt",
                      "baseHasAdmin": true,
                      "firstUser": false,
                      "type": "rest",
                      "googleAuthEnabled": false,
                      "githubAuthEnabled": false,
                      "oneClick": false,
                      "connectToExternalDB": true,
                      "version": "0.105.3",
                      "defaultLimit": 25,
                      "ncMin": false,
                      "teleEnabled": false,
                      "auditEnabled": true,
                      "ncSiteUrl": "http://localhost:8080",
                      "ee": false,
                      "ncAttachmentFieldSize": 20971520,
                      "ncMaxAttachmentsAllowed": 10,
                      "isCloud": false,
                      "automationLogLevel": "OFF"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Utils"
        ],
        "description": "Get the application info such as authType, defaultLimit, version and etc.",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/axiosRequestMake": {
      "parameters": [
        {
          "$ref": "#/components/parameters/xc-auth"
        }
      ],
      "post": {
        "summary": "Axios Request",
        "operationId": "utils-axios-request-make",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Generic Axios Call",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "tags": [
          "Utils"
        ],
        "x-internal": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/cache": {
      "get": {
        "summary": "Get Cache",
        "tags": [
          "Utils"
        ],
        "responses": {},
        "operationId": "utils-cache-get",
        "description": "Get All K/V pairs in NocoCache",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Delete Cache",
        "operationId": "utils-cache-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "description": "Delete All K/V pairs in NocoCache",
        "tags": [
          "Utils"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/xc-auth"
        }
      ]
    },
    "/api/v2/meta/bases/{baseId}/api-tokens": {
      "get": {
        "summary": "List API Tokens in Base",
        "tags": [
          "API Token"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTokenList"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "id": "1",
                          "fk_user_id": "us_b3xo2i44nx5y9l",
                          "description": "This API Token is for ABC application",
                          "token": "DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2"
                        }
                      ],
                      "pageInfo": {
                        "isFirstPage": true,
                        "isLastPage": true,
                        "page": 1,
                        "pageSize": 10,
                        "totalRows": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "operationId": "api-token-list",
        "description": "List API Tokens in the given base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "post": {
        "summary": "Create API Token",
        "operationId": "api-token-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "1",
                      "fk_user_id": "us_b3xo2i44nx5y9l",
                      "description": "This API Token is for ABC application",
                      "token": "DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiTokenReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "description": "This API token is for ABC application"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "API Token"
        ],
        "description": "Create API Token in a base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        }
      ]
    },
    "/api/v2/meta/bases/{baseId}/api-tokens/{token}": {
      "delete": {
        "summary": "Delete API Token",
        "operationId": "api-token-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "example": 1
                },
                "examples": {
                  "Example 1": {
                    "value": 1
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "API Token"
        ],
        "description": "Delete the given API Token in base",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        },
        {
          "schema": {
            "type": "string",
            "example": "DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2"
          },
          "name": "token",
          "in": "path",
          "required": true,
          "description": "API Token"
        }
      ]
    },
    "/api/v2/storage/upload": {
      "post": {
        "summary": "Attachment Upload",
        "operationId": "storage-upload",
        "responses": {},
        "tags": [
          "Storage"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentReq"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "mimetype": "image/jpeg",
                    "path": "download/noco/jango_fett/Table1/attachment/uVbjPVQxC_SSfs8Ctx.jpg",
                    "size": 13052,
                    "title": "22bc-kavypmq4869759 (1).jpg"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "download/noco/jango_fett/Table1/attachment/uVbjPVQxC_SSfs8Ctx.jpg"
            },
            "name": "path",
            "in": "query",
            "required": true,
            "description": "Target File Path"
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "description": "Upload attachment"
      }
    },
    "/api/v2/storage/upload-by-url": {
      "post": {
        "summary": "Attachment Upload by URL",
        "operationId": "storage-upload-by-url",
        "responses": {},
        "tags": [
          "Storage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentReq"
                }
              },
              "examples": {}
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "download/noco/jango_fett/Table1/attachment/c7z_UF8sZBgJUxMjpN.jpg"
            },
            "name": "path",
            "in": "query",
            "description": "Target File Path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "description": "Upload attachment by URL. Used in Airtable Migration."
      }
    },
    "/api/v2/meta/bases/{baseId}/users/{userId}/resend-invite": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "name": "baseId",
          "in": "path",
          "required": true,
          "description": "Unique Base ID"
        },
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "us_b3xo2i44nx5y9l"
          },
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "Unique User ID"
        }
      ],
      "post": {
        "summary": "Resend User Invitation",
        "operationId": "auth-base-user-resend-invite",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "m570oh5j3afjt"
                      },
                      "description": "Success Message",
                      "example": "The invitation has been sent to the user"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "msg": "The invitation has been sent to the user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Resend Invitation to a specific user",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/columns/hash": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "get": {
        "summary": "Get columns hash for table",
        "operationId": "db-table-column-hash",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string",
                      "description": "Columns hash"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DB Table Column"
        ],
        "description": "Get columns hash for table",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/meta/tables/{tableId}/columns/bulk": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Id",
            "example": "md_w9gpnaousnfss1",
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "Unique Table ID"
        }
      ],
      "post": {
        "summary": "Bulk create-update-delete columns",
        "operationId": "db-table-column-bulk",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "failedOps": {
                      "type": "array",
                      "items": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "op": {
                              "type": "string",
                              "enum": [
                                "add",
                                "update",
                                "delete"
                              ],
                              "required": true
                            },
                            "column": {
                              "$ref": "#/components/schemas/Column",
                              "required": true
                            },
                            "error": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hash": {
                    "type": "string",
                    "description": "Columns hash"
                  },
                  "ops": {
                    "type": "array",
                    "items": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "op": {
                            "type": "string"
                          },
                          "column": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DB Table Column"
        ],
        "description": "Bulk create-update-delete columns",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/tables/{tableId}/records": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "**Table Identifier**."
        }
      ],
      "get": {
        "summary": "List Table Records",
        "operationId": "db-data-table-row-list",
        "description": "This API endpoint allows you to retrieve records from a specified table. You can customize the response by applying various query parameters for filtering, sorting, and formatting.\n\n**Pagination**: The response is paginated by default, with the first page being returned initially. The response includes the following additional information in the `pageInfo` JSON block:\n\n- `totalRows`: Indicates the total number of rows available for the specified conditions (if any).\n- `page`: Specifies the current page number.\n- `pageSize`: Defaults to 25 and defines the number of records on each page.\n- `isFirstPage`: A boolean value that indicates whether the current page is the first page of records in the dataset.\n- `isLastPage`: A boolean value that indicates whether the current page is the last page of records in the dataset.\n\nThe `pageInfo` attributes are particularly valuable when dealing with large datasets that are divided into multiple pages. They enable you to determine whether additional pages of records are available for retrieval or if you've reached the end of the dataset.",
        "tags": [
          "Table Records"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allows you to specify the fields that you wish to include in your API response. By default, all the fields are included in the response.\n\nExample: `fields=field1,field2` will include only 'field1' and 'field2' in the API response. \n\nPlease note that it's essential not to include spaces between field names in the comma-separated list."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "description": "Allows you to specify the fields by which you want to sort the records in your API response. By default, sorting is done in ascending order for the designated fields. To sort in descending order, add a '-' symbol before the field name.\n\nExample: `sort=field1,-field2` will sort the records first by 'field1' in ascending order and then by 'field2' in descending order.\n\nIf `viewId` query parameter is also included, the sort included here will take precedence over any sorting configuration defined in the view.\n\nPlease note that it's essential not to include spaces between field names in the comma-separated list."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "description": "Enables you to define specific conditions for filtering records in your API response. Multiple conditions can be combined using logical operators such as 'and' and 'or'. Each condition consists of three parts: a field name, a comparison operator, and a value.\n\nExample: `where=(field1,eq,value1)~and(field2,eq,value2)` will filter records where 'field1' is equal to 'value1' AND 'field2' is equal to 'value2'. \n\nYou can also use other comparison operators like 'ne' (not equal), 'gt' (greater than), 'lt' (less than), and more, to create complex filtering rules.\n\nIf `viewId` query parameter is also included, then the filters included here will be applied over the filtering configuration defined in the view. \n\nPlease remember to maintain the specified format, and do not include spaces between the different condition components"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Enables you to control the pagination of your API response by specifying the number of records you want to skip from the beginning of the result set. The default value for this parameter is set to 0, meaning no records are skipped by default.\n\nExample: `offset=25` will skip the first 25 records in your API response, allowing you to access records starting from the 26th position.\n\nPlease note that the 'offset' value represents the number of records to exclude, not an index value, so an offset of 25 will skip the first 25 records."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Enables you to set a limit on the number of records you want to retrieve in your API response. By default, your response includes all the available records, but by using this parameter, you can control the quantity you receive.\n\nExample: `limit=100` will constrain your response to the first 100 records in the dataset."
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "viewId",
            "in": "query",
            "description": "***View Identifier***. Allows you to fetch records that are currently visible within a specific view. API retrieves records in the order they are displayed if the SORT option is enabled within that view.\n\nAdditionally, if you specify a `sort` query parameter, it will take precedence over any sorting configuration defined in the view. If you specify a `where` query parameter, it will be applied over the filtering configuration defined in the view. \n\nBy default, all fields, including those that are disabled within the view, are included in the response. To explicitly specify which fields to include or exclude, you can use the `fields` query parameter to customize the output according to your requirements."
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "description": "List of data objects",
                      "items": {
                        "type": "object"
                      }
                    },
                    "pageInfo": {
                      "$ref": "#/components/schemas/Paginated",
                      "description": "Paginated Info"
                    }
                  },
                  "required": [
                    "list",
                    "pageInfo"
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "Id": 1,
                          "SingleLineText": "David",
                          "Year": 2023,
                          "URL": "www.google.com",
                          "SingleSelect": "Jan",
                          "Email": "a@b.com",
                          "Duration": 74040,
                          "Decimal": 23.658,
                          "Currency": 23,
                          "JSON": {
                            "name": "John Doe",
                            "age": 30,
                            "email": "johndoe@example.com",
                            "isSubscribed": true,
                            "address": {
                              "street": "123 Main Street",
                              "city": "Anytown",
                              "zipCode": "12345"
                            },
                            "hobbies": [
                              "Reading",
                              "Hiking",
                              "Cooking"
                            ],
                            "scores": {
                              "math": 95,
                              "science": 88,
                              "history": 75
                            }
                          },
                          "Date": "2023-10-16",
                          "Time": "06:02:00",
                          "Rating": 1,
                          "Percent": 55,
                          "Checkbox": true,
                          "Attachment": [
                            {
                              "url": "https://some-s3-server.com/nc/uploads/2023/10/16/some-key/3niqHLngUKiU2Hupe8.jpeg",
                              "title": "2 be loved.jpeg",
                              "mimetype": "image/jpeg",
                              "size": 146143,
                              "signedUrl": "https://some-s3-server.com/nc/uploads/2023/10/16/signed-url-misc-info"
                            }
                          ],
                          "MultiSelect": "Jan,Feb",
                          "DateTime": "2023-10-16 08:56:32+00:00",
                          "LongText": "The sunsets in the small coastal town were a breathtaking sight. The sky would transform from a vibrant blue to warm hues of orange and pink as the day came to an end. Locals and tourists alike would gather at the beach, sipping on cool drinks and watching in awe as the sun dipped below the horizon.",
                          "Geometry": "23.23, 36.54",
                          "PhoneNumber": "123456789",
                          "Number": 5248,
                          "Barcode": "David",
                          "QRCode": "David",
                          "Formula": "10",
                          "Lookup": "a",
                          "Links:belongs-to": {
                            "Id": 1,
                            "Title": "a"
                          },
                          "Links:has-many": 2,
                          "Rollup": 3,
                          "Links:many-many": 3
                        }
                      ],
                      "pageInfo": {
                        "totalRows": 5,
                        "page": 1,
                        "pageSize": 1,
                        "isFirstPage": true,
                        "isLastPage": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "post": {
        "summary": "Create Table Records",
        "operationId": "db-data-table-row-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "Id": 10
                      },
                      {
                        "Id": 11
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Table Records"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "value": [{
                    "SingleLineText": "David",
                    "LongText": "The sunsets in the small coastal town were a breathtaking sight. The sky would transform from a vibrant blue to warm hues of orange and pink as the day came to an end. Locals and tourists alike would gather at the beach, sipping on cool drinks and watching in awe as the sun dipped below the horizon.",
                    "CreatedAt": "2023-10-16 08:27:59+00:00",
                    "UpdatedAt": "2023-10-16 08:56:32+00:00",
                    "Decimal": 23.658,
                    "Checkbox": true,
                    "Attachment": [
                      {
                        "url": "https://some-s3-server.com/nc/uploads/2023/10/16/some-key/3niqHLngUKiU2Hupe8.jpeg",
                        "title": "2 be loved.jpeg",
                        "mimetype": "image/jpeg",
                        "size": 146143,
                        "signedUrl": "https://some-s3-server.com/nc/uploads/2023/10/16/signed-url-misc-info"
                      }
                    ],
                    "MultiSelect": "Jan,Feb",
                    "SingleSelect": "Jan",
                    "Date": "2023-10-16",
                    "Year": 2023,
                    "Time": "06:02:00",
                    "PhoneNumber": "123456789",
                    "Email": "a@b.com",
                    "URL": "www.google.com",
                    "Currency": 23,
                    "Percent": 55,
                    "Duration": 74040,
                    "Rating": 1,
                    "JSON": {
                      "name": "John Doe",
                      "age": 30,
                      "email": "johndoe@example.com",
                      "isSubscribed": true,
                      "address": {
                        "street": "123 Main Street",
                        "city": "Anytown",
                        "zipCode": "12345"
                      },
                      "hobbies": [
                        "Reading",
                        "Hiking",
                        "Cooking"
                      ],
                      "scores": {
                        "math": 95,
                        "science": 88,
                        "history": 75
                      }
                    },
                    "DateTime": "2023-10-16 08:56:32+00:00",
                    "Geometry": "23.23, 36.54",
                    "Number": 5248
                  }
                  ]
                }
              }
            }
          }
        },
        "description": "This API endpoint allows the creation of new records within a specified table. Records to be inserted are input as an array of key-value pair objects, where each key corresponds to a field name. Ensure that all the required fields are included in the payload, with exceptions for fields designated as auto-increment or those having default values. \n\nWhen dealing with 'Links' or 'Link To Another Record' field types, you should utilize the 'Create Link' API to insert relevant data. \n\nCertain read-only field types will be disregarded if included in the request. These field types include 'Look Up,' 'Roll Up,' 'Formula,' 'Auto Number,' 'Created By,' 'Updated By,' 'Created At,' 'Updated At,' 'Barcode,' and 'QR Code.'",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "patch": {
        "summary": "Update Table Records",
        "operationId": "db-data-table-row-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "Id": 6
                      },
                      {
                        "Id": 7
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Table Records"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "value": [{
                    "Id": 6,
                    "SingleLineText": "Updated text-1",
                    "DateTime": "2023-10-19 08:56:32+00:00",
                    "Geometry": "23.232, 36.542",
                    "Number": 52482
                  },{
                    "Id": 7,
                    "SingleLineText": "Updated text-2",
                    "DateTime": "2023-10-19 08:56:32+00:00",
                    "Geometry": "23.232, 36.542",
                    "Number": 52482
                  }]
                }
              }
            }
          }
        },
        "description": "This API endpoint allows updating existing records within a specified table identified by an array of Record-IDs, serving as unique identifier for the record. Records to be updated are input as an array of key-value pair objects, where each key corresponds to a field name. Ensure that all the required fields are included in the payload, with exceptions for fields designated as auto-increment or those having default values. \n\nWhen dealing with 'Links' or 'Link To Another Record' field types, you should utilize the 'Create Link' API to insert relevant data. \n\nCertain read-only field types will be disregarded if included in the request. These field types include 'Look Up,' 'Roll Up,' 'Formula,' 'Auto Number,' 'Created By,' 'Updated By,' 'Created At,' 'Updated At,' 'Barcode,' and 'QR Code.'\n\nNote that a PATCH request only updates the specified fields while leaving other fields unaffected. Currently, PUT requests are not supported by this endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Delete Table Records",
        "operationId": "db-data-table-row-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "Id": 1
                      },
                      {
                        "Id": 2
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Table Records"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "Id": 1
                    },
                    {
                      "Id": 2
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "This API endpoint allows deleting existing records within a specified table identified by an array of Record-IDs, serving as unique identifier for the record. Records to be deleted are input as an array of record-identifiers.",
        "parameters": [
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    },
    "/api/v2/tables/{tableId}/records/{recordId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "**Table Identifier**"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "recordId",
          "in": "path",
          "required": true,
          "description": "Record ID"
        }
      ],
      "get": {
        "summary": "Read Table Record",
        "operationId": "db-data-table-row-read",
        "description": "This API endpoint allows you to retrieve a single record identified by Record-ID, serving as unique identifier for the record from a specified table.",
        "tags": [
          "Table Records"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allows you to specify the fields that you wish to include in your API response. By default, all the fields are included in the response.\n\nExample: `fields=field1,field2` will include only 'field1' and 'field2' in the API response. \n\nPlease note that it's essential not to include spaces between field names in the comma-separated list."
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "Id": 1,
                      "SingleLineText": "David",
                      "CreatedAt": "2023-10-16 08:27:59+00:00",
                      "UpdatedAt": "2023-10-16 10:05:41+00:00",
                      "Year": 2023,
                      "URL": "www.google.com",
                      "SingleSelect": "Jan",
                      "Email": "a@b.com",
                      "Duration": 74040,
                      "Decimal": 23.658,
                      "Currency": 23,
                      "Barcode": "David",
                      "JSON": {
                        "name": "John Doe",
                        "age": 30,
                        "email": "johndoe@example.com",
                        "isSubscribed": true,
                        "address": {
                          "street": "123 Main Street",
                          "city": "Anytown",
                          "zipCode": "12345"
                        },
                        "hobbies": [
                          "Reading",
                          "Hiking",
                          "Cooking"
                        ],
                        "scores": {
                          "math": 95,
                          "science": 88,
                          "history": 75
                        }
                      },
                      "QRCode": "David",
                      "Rollup": 3,
                      "Date": "2023-10-16",
                      "Time": "06:02:00",
                      "Rating": 1,
                      "Percent": 55,
                      "Formula": 10,
                      "Checkbox": true,
                      "Attachment": [
                        {
                          "url": "https://some-s3-server.com/nc/uploads/2023/10/16/some-key/3niqHLngUKiU2Hupe8.jpeg",
                          "title": "2 be loved.jpeg",
                          "mimetype": "image/jpeg",
                          "size": 146143,
                          "signedUrl": "https://some-s3-server.com/nc/uploads/2023/10/16/signed-url-misc-info"
                        }
                      ],
                      "MultiSelect": "Jan,Feb",
                      "DateTime": "2023-10-19 08:56:32+00:00",
                      "LongText": "The sunsets in the small coastal town were a breathtaking sight. The sky would transform from a vibrant blue to warm hues of orange and pink as the day came to an end. Locals and tourists alike would gather at the beach, sipping on cool drinks and watching in awe as the sun dipped below the horizon.",
                      "Geometry": "23.232, 36.542",
                      "PhoneNumber": "123456789",
                      "Number": 52482,
                      "Links:has-many": 2,
                      "Links:many-many": 3,
                      "Links:belongs-to": {
                        "Id": 1,
                        "Title": "a"
                      },
                      "Lookup": "a"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/api/v2/tables/{tableId}/records/count": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "**Table Identifier**"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "viewId",
          "in": "query",
          "description": "**View Identifier**. Allows you to fetch record count that are currently visible within a specific view."
        }
      ],
      "get": {
        "summary": "Count Table Records",
        "operationId": "db-data-table-row-count",
        "description": "This API endpoint allows you to retrieve the total number of records from a specified table or a view. You can narrow down search results by applying `where` query parameter",
        "tags": [
          "Table Records"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "description": "Enables you to define specific conditions for filtering record count in your API response. Multiple conditions can be combined using logical operators such as 'and' and 'or'. Each condition consists of three parts: a field name, a comparison operator, and a value.\n\nExample: `where=(field1,eq,value1)~and(field2,eq,value2)` will filter records where 'field1' is equal to 'value1' AND 'field2' is equal to 'value2'. \n\nYou can also use other comparison operators like 'ne' (not equal), 'gt' (greater than), 'lt' (less than), and more, to create complex filtering rules.\n\nIf `viewId` query parameter is also included, then the filters included here will be applied over the filtering configuration defined in the view. \n\nPlease remember to maintain the specified format, and do not include spaces between the different condition components"
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "list",
                    "pageInfo"
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "count": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/api/v2/tables/{tableId}/links/{linkFieldId}/records/{recordId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "**Table Identifier**"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "linkFieldId",
          "in": "path",
          "required": true,
          "description": "**Links Field Identifier** corresponding to the relation field `Links` established between tables."
        }
      ],
      "get": {
        "summary": "List Linked Records",
        "operationId": "db-data-table-row-nested-list",
        "description": "This API endpoint allows you to retrieve list of linked records for a specific `Link field` and `Record ID`. The response is an array of objects containing Primary Key and its corresponding display value.",
        "tags": [
          "Table Records"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "recordId",
            "in": "path",
            "required": true,
            "description": "**Record Identifier** corresponding to the record in this table for which linked records are being fetched."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Allows you to specify the fields that you wish to include from the linked records in your API response. By default, only Primary Key and associated display value field is included.\n\nExample: `fields=field1,field2` will include only 'field1' and 'field2' in the API response. \n\nPlease note that it's essential not to include spaces between field names in the comma-separated list."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "description": "Allows you to specify the fields by which you want to sort linked records in your API response. By default, sorting is done in ascending order for the designated fields. To sort in descending order, add a '-' symbol before the field name.\n\nExample: `sort=field1,-field2` will sort the records first by 'field1' in ascending order and then by 'field2' in descending order.\n\nPlease note that it's essential not to include spaces between field names in the comma-separated list."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "description": "Enables you to define specific conditions for filtering linked records in your API response. Multiple conditions can be combined using logical operators such as 'and' and 'or'. Each condition consists of three parts: a field name, a comparison operator, and a value.\n\nExample: `where=(field1,eq,value1)~and(field2,eq,value2)` will filter linked records where 'field1' is equal to 'value1' AND 'field2' is equal to 'value2'. \n\nYou can also use other comparison operators like 'ne' (not equal), 'gt' (greater than), 'lt' (less than), and more, to create complex filtering rules.\n\nPlease remember to maintain the specified format, and do not include spaces between the different condition components"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Enables you to control the pagination of your API response by specifying the number of linked records you want to skip from the beginning of the result set. The default value for this parameter is set to 0, meaning no linked records are skipped by default.\n\nExample: `offset=25` will skip the first 25 linked records in your API response, allowing you to access linked records starting from the 26th position.\n\nPlease note that the 'offset' value represents the number of linked records to exclude, not an index value, so an offset of 25 will skip the first 25 linked records."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Enables you to set a limit on the number of linked records you want to retrieve in your API response. By default, your response includes all the available linked records, but by using this parameter, you can control the quantity you receive.\n\nExample: `limit=100` will constrain your response to the first 100 linked records in the dataset."
          },

          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "description": "List of data objects",
                      "items": {
                        "type": "object"
                      }
                    },
                    "pageInfo": {
                      "$ref": "#/components/schemas/Paginated",
                      "description": "Paginated Info"
                    }
                  },
                  "required": [
                    "list",
                    "pageInfo"
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "list": [
                        {
                          "Id": 1,
                          "SingleLineText": "David"
                        },
                        {
                          "Id": 2,
                          "SingleLineText": "Jane"
                        },
                        {
                          "Id": 3,
                          "SingleLineText": "Dave"
                        },
                        {
                          "Id": 4,
                          "SingleLineText": "Martin"
                        }
                      ],
                      "pageInfo": {
                        "totalRows": 4,
                        "page": 1,
                        "pageSize": 25,
                        "isFirstPage": true,
                        "isLastPage": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "post": {
        "summary": "Link Records",
        "operationId": "db-data-table-row-nested-link",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Table Records"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "Id": 4
                    },
                    {
                      "Id": 5
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "This API endpoint allows you to link records to a specific `Link field` and `Record ID`. The request payload is an array of record-ids from the adjacent table for linking purposes. Note that any existing links, if present, will be unaffected during this operation.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "recordId",
            "in": "path",
            "required": true,
            "description": "**Record Identifier** corresponding to the record in this table for which links are being created."
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      },
      "delete": {
        "summary": "Unlink Records",
        "operationId": "db-data-table-row-nested-unlink",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "Example 1": {
                    "value": true
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "tags": [
          "Table Records"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "Id": 1
                    },
                    {
                      "Id": 2
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "This API endpoint allows you to unlink records from a specific `Link field` and `Record ID`. The request payload is an array of record-ids from the adjacent table for unlinking purposes. Note that, \n- duplicated record-ids will be ignored.\n- non-existent record-ids will be ignored.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "recordId",
            "in": "path",
            "required": true,
            "description": "**Record Identifier** corresponding to the record in this table for which links are being removed."
          },
          {
            "$ref": "#/components/parameters/xc-auth"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiToken": {
        "description": "Model for API Token",
        "examples": [
          {
            "id": "1",
            "fk_user_id": "us_b3xo2i44nx5y9l",
            "description": "This API Token is for ABC application",
            "token": "DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2"
          }
        ],
        "title": "API Token Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique API Token ID"
          },
          "fk_user_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to User"
          },
          "description": {
            "type": "string",
            "description": "API Token Description",
            "example": "This API Token is for ABC application"
          },
          "token": {
            "type": "string",
            "description": "API Token",
            "example": "DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2"
          }
        },
        "x-stoplight": {
          "id": "c7i7cfci4kobt"
        }
      },
      "ApiTokenReq": {
        "description": "Model for API Token Request",
        "examples": [
          {
            "description": "This API token is for ABC application"
          }
        ],
        "title": "API Token Request Model",
        "type": "object",
        "properties": {
          "description": {
            "description": "Description of the API token",
            "maxLength": 255,
            "type": "string",
            "example": "This API Token is for ABC application"
          }
        },
        "x-stoplight": {
          "id": "53ux6deypkuwb"
        }
      },
      "ApiTokenList": {
        "description": "Model for API Token List",
        "x-stoplight": {
          "id": "t24xmch4x2o30"
        },
        "examples": [
          {
            "list": [
              {
                "id": "1",
                "fk_user_id": "us_b3xo2i44nx5y9l",
                "description": "This API Token is for ABC application",
                "token": "DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "API Token List Model",
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "example": [
              {
                "list": [
                  {
                    "id": "1",
                    "fk_user_id": "us_b3xo2i44nx5y9l",
                    "description": "This API Token is for ABC application",
                    "token": "DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2"
                  }
                ],
                "pageInfo": {
                  "isFirstPage": true,
                  "isLastPage": true,
                  "page": 1,
                  "pageSize": 10,
                  "totalRows": 1
                }
              }
            ],
            "x-stoplight": {
              "id": "c7xu43yjgyjww"
            },
            "description": "List of api token objects",
            "items": {
              "$ref": "#/components/schemas/ApiToken",
              "x-stoplight": {
                "id": "5ih4l0ix2tr5q"
              }
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "x-stoplight": {
              "id": "0w8ktfnx3pusz"
            },
            "description": "Model for Paginated"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ]
      },
      "Attachment": {
        "description": "Model for Attachment",
        "examples": [
          {
            "data": null,
            "mimetype": "image/jpeg",
            "path": "download/noco/jango_fett/Table1/attachment/c7z_UF8sZBgJUxMjpN.jpg",
            "size": 12345,
            "title": "kavypmq4869759.jpg"
          }
        ],
        "title": "Attachment Model",
        "type": "object",
        "properties": {
          "data": {
            "description": "Data for uploading"
          },
          "mimetype": {
            "type": "string",
            "description": "The mimetype of the attachment"
          },
          "path": {
            "type": "string",
            "description": "File Path"
          },
          "size": {
            "type": "number",
            "description": "Attachment Size"
          },
          "title": {
            "type": "string",
            "description": "The title of the attachment. Used in UI."
          },
          "url": {
            "type": "string",
            "description": "Attachment URL"
          }
        },
        "x-stoplight": {
          "id": "mjewsbpmazrwe"
        }
      },
      "AttachmentReq": {
        "description": "Model for Attachment Request",
        "type": "object",
        "x-examples": {
          "Example 1": {
            "mimetype": "image/jpeg",
            "path": "download/noco/jango_fett/Table1/attachment/uVbjPVQxC_SSfs8Ctx.jpg",
            "size": 13052,
            "title": "22bc-kavypmq4869759 (1).jpg"
          }
        },
        "title": "Attachment Request Model",
        "properties": {
          "mimetype": {
            "type": "string",
            "description": "The mimetype of the attachment"
          },
          "path": {
            "type": "string",
            "description": "The file path of the attachment"
          },
          "size": {
            "type": "number",
            "description": "The size of the attachment"
          },
          "title": {
            "type": "string",
            "description": "The title of the attachment used in UI"
          },
          "url": {
            "type": "string",
            "description": "Attachment URL to be uploaded via upload-by-url"
          }
        },
        "x-stoplight": {
          "id": "6cr1iwhbyxncd"
        }
      },
      "Audit": {
        "description": "Model for Audit",
        "examples": [
          {
            "id": "adt_l5we7pkx70vaao",
            "user": "w@nocodb.com",
            "display_name": "NocoDB",
            "ip": "::ffff:127.0.0.1",
            "source_id": "ds_3l9qx8xqksenrl",
            "base_id": "p_9sx43moxhqtjm3",
            "fk_model_id": "md_ehn5izr99m7d45",
            "row_id": "rec0Adp9PMG9o7uJy",
            "op_type": "AUTHENTICATION",
            "op_sub_type": "UPDATE",
            "status": "string",
            "description": "Table nc_snms___Table_1 : field Date got changed from  2023-03-12 to ",
            "details": "<span class=\"\">Date</span>   : <span class=\"text-decoration-line-through red px-2 lighten-4 black--text\">2023-03-12</span>   <span class=\"black--text green lighten-4 px-2\"></span>"
          }
        ],
        "title": "Audit Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "user": {
            "type": "string",
            "description": "The user name performing the action",
            "example": "w@nocodb.com"
          },
          "display_name": {
            "type": "string",
            "description": "The display name of user performing the action",
            "example": "NocoDB"
          },
          "ip": {
            "type": "string",
            "example": "::ffff:127.0.0.1",
            "description": "IP address from the user"
          },
          "source_id": {
            "type": "string",
            "description": "Source ID in where action is performed",
            "example": "ds_3l9qx8xqksenrl"
          },
          "base_id": {
            "type": "string",
            "description": "Base ID in where action is performed",
            "example": "p_9sx43moxhqtjm3"
          },
          "fk_model_id": {
            "type": "string",
            "description": "Model ID in where action is performed",
            "example": "md_ehn5izr99m7d45"
          },
          "row_id": {
            "type": "string",
            "description": "Row ID",
            "example": "rec0Adp9PMG9o7uJy"
          },
          "op_type": {
            "type": "string",
            "description": "Operation Type",
            "example": "AUTHENTICATION",
            "enum": [
              "COMMENT",
              "DATA",
              "PROJECT",
              "VIRTUAL_RELATION",
              "RELATION",
              "TABLE_VIEW",
              "TABLE",
              "VIEW",
              "META",
              "WEBHOOKS",
              "AUTHENTICATION",
              "TABLE_COLUMN",
              "ORG_USER"
            ]
          },
          "op_sub_type": {
            "type": "string",
            "description": "Operation Sub Type",
            "example": "UPDATE",
            "enum": [
              "UPDATE",
              "INSERT",
              "BULK_INSERT",
              "BULK_UPDATE",
              "BULK_DELETE",
              "LINK_RECORD",
              "UNLINK_RECORD",
              "DELETE",
              "CREATE",
              "RENAME",
              "IMPORT_FROM_ZIP",
              "EXPORT_TO_FS",
              "EXPORT_TO_ZIP",
              "SIGNIN",
              "SIGNUP",
              "PASSWORD_RESET",
              "PASSWORD_FORGOT",
              "PASSWORD_CHANGE",
              "EMAIL_VERIFICATION",
              "ROLES_MANAGEMENT",
              "INVITE",
              "RESEND_INVITE"
            ]
          },
          "status": {
            "type": "string",
            "description": "Audit Status"
          },
          "description": {
            "type": "string",
            "description": "Description of the action",
            "example": "Table nc_snms___Table_1 : field Date got changed from  2023-03-12 to "
          },
          "details": {
            "type": "string",
            "description": "Detail",
            "example": "<span class=\"\">Date</span>   : <span class=\"text-decoration-line-through red px-2 lighten-4 black--text\">2023-03-12</span>   <span class=\"black--text green lighten-4 px-2\"></span>"
          }
        },
        "x-stoplight": {
          "id": "n44nqsmhm56c7"
        }
      },
      "AuditRowUpdateReq": {
        "description": "Model for Audit Row Update Request",
        "examples": [
          {
            "column_name": "baz",
            "fk_model_id": "md_ehn5izr99m7d45",
            "row_id": "rec0Adp9PMG9o7uJy",
            "prev_value": "foo",
            "value": "bar"
          }
        ],
        "title": "Audit Row Update Request Model",
        "type": "object",
        "properties": {
          "column_name": {
            "type": "string",
            "description": "Column Name",
            "example": "baz"
          },
          "fk_model_id": {
            "type": "string",
            "description": "Foreign Key to Model",
            "example": "md_ehn5izr99m7d45"
          },
          "row_id": {
            "type": "string",
            "example": "rec0Adp9PMG9o7uJy",
            "description": "Row ID"
          },
          "prev_value": {
            "description": "The previous value before the action"
          },
          "value": {
            "description": "The current value after the action"
          }
        },
        "x-stoplight": {
          "id": "2fzwvc4m1k5or"
        }
      },
      "Source": {
        "description": "Model for Source",
        "examples": [
          {
            "alias": null,
            "config": "<ENCRYPTED>",
            "enabled": 1,
            "id": "ds_krsappzu9f8vmo",
            "inflection_column": "camelize",
            "inflection_table": "camelize",
            "is_meta": 1,
            "meta": null,
            "order": 1,
            "base_id": "p_01clqvzik3izk6",
            "type": "mysql2"
          }
        ],
        "title": "Source Model",
        "type": "object",
        "properties": {
          "alias": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Source Name - Default BASE will be null by default"
          },
          "config": {
            "description": "Source Configuration"
          },
          "enabled": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this source enabled"
          },
          "id": {
            "description": "Unique Source ID",
            "type": "string"
          },
          "inflection_column": {
            "description": "Inflection for columns",
            "example": "camelize",
            "type": "string"
          },
          "inflection_table": {
            "description": "Inflection for tables",
            "example": "camelize",
            "type": "string"
          },
          "is_meta": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is the data source connected externally"
          },
          "is_local": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is the data source minimal db"
          },
          "order": {
            "description": "The order of the list of sources",
            "example": 1,
            "type": "number"
          },
          "base_id": {
            "description": "The base ID that this source belongs to",
            "type": "string"
          },
          "type": {
            "description": "DB Type",
            "enum": [
              "mssql",
              "mysql",
              "mysql2",
              "oracledb",
              "pg",
              "snowflake",
              "sqlite3"
            ],
            "example": "mysql2",
            "type": "string"
          }
        },
        "x-stoplight": {
          "id": "qyzsky82ovjiv"
        }
      },
      "BaseList": {
        "description": "Model for Source List",
        "examples": [
          {
            "list": [
              {
                "alias": null,
                "config": "<ENCRYPTED>",
                "enabled": 1,
                "id": "ds_krsappzu9f8vmo",
                "inflection_column": "camelize",
                "inflection_table": "camelize",
                "is_meta": 1,
                "meta": null,
                "order": 1,
                "base_id": "p_01clqvzik3izk6",
                "type": "mysql2"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "Source List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "sakila",
                  "config": "<ENCRYPTED>",
                  "created_at": "2023-03-02 11:28:17",
                  "enabled": 1,
                  "id": "ds_btbdt19zde0gj9",
                  "inflection_column": "camelize",
                  "inflection_table": "camelize",
                  "is_meta": null,
                  "meta": null,
                  "order": 2,
                  "base_id": "p_01clqvzik3izk6",
                  "type": "mysql2",
                  "updated_at": "2023-03-02 11:28:17"
                },
                {
                  "alias": null,
                  "config": "<ENCRYPTED>",
                  "created_at": "2023-03-01 16:31:49",
                  "enabled": 1,
                  "id": "ds_krsappzu9f8vmo",
                  "inflection_column": "camelize",
                  "inflection_table": "camelize",
                  "is_meta": 1,
                  "meta": null,
                  "order": 1,
                  "base_id": "p_01clqvzik3izk6",
                  "type": "mysql2",
                  "updated_at": "2023-03-02 11:28:17"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "page": 1,
                "pageSize": 2,
                "totalRows": 2
              }
            }
          }
        },
        "properties": {
          "list": {
            "type": "array",
            "x-stoplight": {
              "id": "1q3ny60j1g4z2"
            },
            "description": "List of source objects",
            "items": {
              "$ref": "#/components/schemas/Source",
              "x-stoplight": {
                "id": "udd0nrcv6pq8d"
              }
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "x-stoplight": {
              "id": "xqwcniocq37hk"
            },
            "description": "Paginated Info"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ],
        "x-stoplight": {
          "id": "tty21vb01bfr0"
        }
      },
      "BaseReq": {
        "description": "Model for Source Request",
        "examples": [
          {
            "alias": "My Source",
            "config": null,
            "inflection_column": "camelize",
            "inflection_table": "camelize",
            "is_meta": true,
            "type": "mysql"
          }
        ],
        "properties": {
          "alias": {
            "description": "Source Name - Default BASE will be null by default",
            "example": "My Source",
            "maxLength": 128,
            "type": "string"
          },
          "config": {
            "description": "Source Configuration"
          },
          "inflection_column": {
            "description": "Inflection for columns",
            "example": "camelize",
            "type": "string"
          },
          "inflection_table": {
            "description": "Inflection for tables",
            "example": "camelize",
            "type": "string"
          },
          "is_meta": {
            "description": "Is the data source connected externally",
            "type": "boolean"
          },
          "is_local": {
            "description": "Is the data source minimal db",
            "type": "boolean"
          },
          "type": {
            "description": "DB Type",
            "enum": [
              "mssql",
              "mysql",
              "mysql2",
              "oracledb",
              "pg",
              "snowflake",
              "sqlite3"
            ],
            "type": "string"
          }
        },
        "title": "Source Request",
        "type": "object",
        "x-stoplight": {
          "id": "ky2ak9xsyl3b5"
        }
      },
      "Bool": {
        "description": "Model for Bool",
        "examples": [
          true
        ],
        "oneOf": [
          {
            "description": "0 or 1",
            "example": 0,
            "type": "integer"
          },
          {
            "description": "true or false",
            "type": "boolean"
          },
          {
            "type": "null"
          }
        ],
        "title": "Bool Model",
        "x-stoplight": {
          "id": "y0m76u8t9x2tn"
        }
      },
      "Column": {
        "description": "Model for Column",
        "examples": [
          {
            "ai": 0,
            "au": 0,
            "source_id": "ds_krsappzu9f8vmo",
            "cc": "",
            "cdf": null,
            "clen": "45",
            "column_name": "title",
            "cop": "2",
            "created_at": "2023-03-02 13:14:16",
            "csn": "utf8mb4",
            "ct": "varchar(45)",
            "deleted": null,
            "dt": "varchar",
            "dtx": "specificType",
            "dtxp": "45",
            "dtxs": null,
            "fk_model_id": "md_yvwvbt2i78rgcm",
            "id": "cl_0j9gv0oi8vjy46",
            "meta": null,
            "np": null,
            "ns": null,
            "order": 2,
            "pk": 0,
            "base_id": "p_01clqvzik3izk6",
            "pv": 1,
            "rqd": 0,
            "system": 0,
            "title": "Title",
            "uidt": "SingleLineText",
            "un": 0,
            "unique": 0,
            "updated_at": "2023-03-02 13:14:16",
            "validate": null,
            "virtual": null
          }
        ],
        "title": "Column Model",
        "type": "object",
        "properties": {
          "ai": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is Auto-Increment?"
          },
          "au": {
            "$ref": "#/components/schemas/Bool",
            "description": "Auto Update Timestamp"
          },
          "source_id": {
            "description": "Source ID that this column belongs to",
            "example": "ds_krsappzu9f8vmo",
            "type": "string"
          },
          "cc": {
            "description": "Column Comment",
            "type": "string"
          },
          "cdf": {
            "$ref": "#/components/schemas/StringOrNullOrBooleanOrNumber",
            "description": "Column Default"
          },
          "clen": {
            "description": "Character Maximum Length",
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "colOptions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Formula"
              },
              {
                "$ref": "#/components/schemas/LinkToAnotherRecord"
              },
              {
                "$ref": "#/components/schemas/Lookup"
              },
              {
                "$ref": "#/components/schemas/Rollup"
              },
              {
                "$ref": "#/components/schemas/SelectOptions"
              },
              {
                "type": "object"
              }
            ],
            "description": "Column Options"
          },
          "column_name": {
            "description": "Column Name",
            "example": "title",
            "type": "string"
          },
          "cop": {
            "description": "Column Ordinal Position",
            "type": "string"
          },
          "csn": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Character Set Name"
          },
          "ct": {
            "description": "Column Type",
            "example": "varchar(45)",
            "type": "string"
          },
          "deleted": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is Deleted?"
          },
          "dt": {
            "description": "Data Type in DB",
            "example": "varchar",
            "type": "string"
          },
          "dtx": {
            "description": "Data Type X",
            "example": "specificType",
            "type": "string"
          },
          "dtxp": {
            "description": "Data Type X Precision",
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          },
          "dtxs": {
            "description": "Data Type X Scale",
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          },
          "fk_model_id": {
            "description": "Model ID that this column belongs to",
            "example": "md_yvwvbt2i78rgcm",
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta Info"
          },
          "np": {
            "description": "Numeric Precision",
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ns": {
            "description": "Numeric Scale",
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "order": {
            "description": "The order of the list of columns",
            "type": "number"
          },
          "pk": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is Primary Key?"
          },
          "pv": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is Primary Value?"
          },
          "rqd": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is Required?"
          },
          "system": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is System Column?"
          },
          "title": {
            "description": "Column Title",
            "example": "Title",
            "type": "string"
          },
          "uidt": {
            "description": "The data type in UI",
            "example": "SingleLineText",
            "enum": [
              "Attachment",
              "AutoNumber",
              "Barcode",
              "Button",
              "Checkbox",
              "Collaborator",
              "Count",
              "CreateTime",
              "Currency",
              "Date",
              "DateTime",
              "Decimal",
              "Duration",
              "Email",
              "Formula",
              "ForeignKey",
              "GeoData",
              "Geometry",
              "ID",
              "JSON",
              "LastModifiedTime",
              "LongText",
              "LinkToAnotherRecord",
              "Lookup",
              "MultiSelect",
              "Number",
              "Percent",
              "PhoneNumber",
              "Rating",
              "Rollup",
              "SingleLineText",
              "SingleSelect",
              "SpecificDBType",
              "Time",
              "URL",
              "Year",
              "QrCode",
              "Links"
            ],
            "type": "string"
          },
          "un": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is Unsigned?"
          },
          "unique": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is unique?"
          },
          "visible": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is Visible?"
          }
        },
        "x-stoplight": {
          "id": "y9jx9r6o6x0h6"
        }
      },
      "ColumnList": {
        "description": "Model for Column List",
        "examples": [
          {
            "list": [
              {
                "ai": 0,
                "au": 0,
                "source_id": "ds_krsappzu9f8vmo",
                "cc": "",
                "cdf": null,
                "clen": "45",
                "column_name": "title",
                "cop": "2",
                "created_at": "2023-03-02 13:14:16",
                "csn": "utf8mb4",
                "ct": "varchar(45)",
                "deleted": null,
                "dt": "varchar",
                "dtx": "specificType",
                "dtxp": "45",
                "dtxs": null,
                "fk_model_id": "md_yvwvbt2i78rgcm",
                "id": "cl_0j9gv0oi8vjy46",
                "meta": null,
                "np": null,
                "ns": null,
                "order": 2,
                "pk": 0,
                "base_id": "p_01clqvzik3izk6",
                "pv": 1,
                "rqd": 0,
                "system": 0,
                "title": "Title",
                "uidt": "SingleLineText",
                "un": 0,
                "unique": 0,
                "updated_at": "2023-03-02 13:14:16",
                "validate": null,
                "virtual": null
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "Column List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "type": "array",
            "x-stoplight": {
              "id": "c6lpw8px25356"
            },
            "description": "List of column objects",
            "items": {
              "$ref": "#/components/schemas/Column",
              "x-stoplight": {
                "id": "zbm89i86dr73y"
              }
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "x-stoplight": {
              "id": "ko0s0z13h4hsw"
            }
          }
        },
        "required": [
          "list",
          "pageInfo"
        ],
        "x-stoplight": {
          "id": "rsk9o5cs00wh5"
        }
      },
      "ColumnReq": {
        "allOf": [
          {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FormulaColumnReq"
              },
              {
                "$ref": "#/components/schemas/LinkToAnotherColumnReq"
              },
              {
                "$ref": "#/components/schemas/LookupColumnReq"
              },
              {
                "$ref": "#/components/schemas/NormalColumnRequest"
              },
              {
                "$ref": "#/components/schemas/RollupColumnReq"
              }
            ]
          },
          {
            "properties": {
              "column_name": {
                "type": "string"
              },
              "column_order": {
                "description": "Column order in a specific view",
                "properties": {
                  "order": {
                    "type": "number"
                  },
                  "view_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "title": {
                "maxLength": 255,
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "title"
            ]
          }
        ],
        "description": "Model for Column Request",
        "examples": [
          {
            "ai": 0,
            "au": 0,
            "source_id": "ds_krsappzu9f8vmo",
            "cc": "",
            "cdf": null,
            "clen": "45",
            "column_name": "title",
            "cop": "2",
            "created_at": "2023-03-02 13:14:16",
            "csn": "utf8mb4",
            "ct": "varchar(45)",
            "deleted": null,
            "dt": "varchar",
            "dtx": "specificType",
            "dtxp": "45",
            "dtxs": null,
            "fk_model_id": "md_yvwvbt2i78rgcm",
            "id": "cl_0j9gv0oi8vjy46",
            "meta": null,
            "np": null,
            "ns": null,
            "order": 2,
            "pk": 0,
            "base_id": "p_01clqvzik3izk6",
            "pv": 1,
            "rqd": 0,
            "system": 0,
            "title": "Title",
            "uidt": "SingleLineText",
            "un": 0,
            "unique": 0,
            "updated_at": "2023-03-02 13:14:16",
            "validate": null,
            "virtual": null
          }
        ],
        "title": "Column Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "aipiq4098ocg3"
        }
      },
      "CommentReq": {
        "description": "Model for Comment Request",
        "examples": [
          {
            "description": "This is the comment for the row",
            "fk_model_id": "md_ehn5izr99m7d45",
            "row_id": "3"
          }
        ],
        "title": "Comment Request Model",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description for the target row",
            "example": "This is the comment for the row"
          },
          "fk_model_id": {
            "type": "string",
            "description": "Foreign Key to Model",
            "example": "md_ehn5izr99m7d45"
          },
          "row_id": {
            "type": "string",
            "description": "Row ID",
            "example": "3"
          }
        },
        "required": [
          "fk_model_id",
          "row_id"
        ],
        "x-stoplight": {
          "id": "ohotsd0vq6d8w"
        }
      },
      "CommentUpdateReq": {
        "description": "Model for Comment Update Request",
        "x-stoplight": {
          "id": "5shp04hfghm3a"
        },
        "examples": [
          {
            "description": "This is the comment for the row"
          }
        ],
        "title": "Comment Update Request Model",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description for the target row",
            "example": "This is the comment for the row"
          }
        }
      },
      "Filter": {
        "description": "Model for Filter",
        "examples": [
          {
            "source_id": "ds_g4ccx6e77h1dmi",
            "comparison_op": "eq",
            "comparison_sub_op": null,
            "created_at": "2023-03-02 18:18:05",
            "fk_column_id": "cl_d7ah9n2qfupgys",
            "fk_hook_id": null,
            "fk_parent_id": null,
            "fk_view_id": "vw_b739e29vqmrxnf",
            "id": "fi_xn647tpmdq8fu8",
            "is_group": null,
            "logical_op": "and",
            "order": 1,
            "base_id": "p_xm3thidrblw4n7",
            "updated_at": "2023-03-02 18:18:05",
            "value": "foo"
          }
        ],
        "properties": {
          "source_id": {
            "description": "Unqiue Source ID",
            "readOnly": true,
            "type": "string"
          },
          "children": {
            "description": "Children filters. Available when the filter is grouped.",
            "items": {
              "$ref": "#/components/schemas/Filter"
            },
            "type": "array"
          },
          "comparison_op": {
            "description": "Comparison Operator",
            "anyOf": [
              {
                "enum": [
                  "allof",
                  "anyof",
                  "blank",
                  "btw",
                  "checked",
                  "empty",
                  "eq",
                  "ge",
                  "gt",
                  "gte",
                  "in",
                  "is",
                  "isWithin",
                  "isnot",
                  "le",
                  "like",
                  "lt",
                  "lte",
                  "nallof",
                  "nanyof",
                  "nbtw",
                  "neq",
                  "nlike",
                  "not",
                  "notblank",
                  "notchecked",
                  "notempty",
                  "notnull",
                  "null"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "comparison_sub_op": {
            "anyOf": [
              {
                "enum": [
                  "daysAgo",
                  "daysFromNow",
                  "exactDate",
                  "nextMonth",
                  "nextNumberOfDays",
                  "nextWeek",
                  "nextYear",
                  "oneMonthAgo",
                  "oneMonthFromNow",
                  "oneWeekAgo",
                  "oneWeekFromNow",
                  "pastMonth",
                  "pastNumberOfDays",
                  "pastWeek",
                  "pastYear",
                  "today",
                  "tomorrow",
                  "yesterday"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Comparison Sub-Operator"
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Foreign Key to Column"
          },
          "fk_hook_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Foreign Key to Hook"
          },
          "fk_model_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Model"
          },
          "fk_parent_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Foreign Key to parent group."
          },
          "fk_view_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Foreign Key to View"
          },
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "is_group": {
            "description": "Is this filter grouped?",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "logical_op": {
            "description": "Logical Operator",
            "enum": [
              "and",
              "not",
              "or"
            ],
            "type": "string"
          },
          "base_id": {
            "description": "Unique Base ID",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The filter value. Can be NULL for some operators."
          }
        },
        "readOnly": true,
        "title": "Filter Model",
        "type": "object",
        "x-stoplight": {
          "id": "txz3lsqh1rbsu"
        }
      },
      "FilterList": {
        "description": "Model for Filter List",
        "examples": [
          {
            "list": [
              {
                "source_id": "ds_g4ccx6e77h1dmi",
                "comparison_op": "eq",
                "comparison_sub_op": null,
                "created_at": "2023-03-02 18:18:05",
                "fk_column_id": "cl_d7ah9n2qfupgys",
                "fk_hook_id": null,
                "fk_parent_id": null,
                "fk_view_id": "vw_b739e29vqmrxnf",
                "id": "fi_xn647tpmdq8fu8",
                "is_group": null,
                "logical_op": "and",
                "order": 1,
                "base_id": "p_xm3thidrblw4n7",
                "updated_at": "2023-03-02 18:18:05",
                "value": "foo"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "Filter List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "type": "array",
            "x-stoplight": {
              "id": "22sgv37ve9kxo"
            },
            "description": "List of filter objects",
            "items": {
              "$ref": "#/components/schemas/Filter",
              "x-stoplight": {
                "id": "ttw5rxhy83k8p"
              }
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "x-stoplight": {
              "id": "7cyrb1770mrzz"
            }
          }
        },
        "required": [
          "list",
          "pageInfo"
        ],
        "x-stoplight": {
          "id": "wbc42cyev1qzt"
        }
      },
      "FilterLogList": {
        "description": "Model for Filter Log List",
        "x-stoplight": {
          "id": "jbgae8q40szhc"
        },
        "examples": [
          {
            "list": [
              {
                "source_id": "ds_g4ccx6e77h1dmi",
                "comparison_op": "eq",
                "comparison_sub_op": null,
                "created_at": "2023-03-02 18:18:05",
                "fk_column_id": "cl_d7ah9n2qfupgys",
                "fk_hook_id": null,
                "fk_parent_id": null,
                "fk_view_id": "vw_b739e29vqmrxnf",
                "id": "fi_xn647tpmdq8fu8",
                "is_group": null,
                "logical_op": "and",
                "order": 1,
                "base_id": "p_xm3thidrblw4n7",
                "updated_at": "2023-03-02 18:18:05",
                "value": "foo"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "Filter Log List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "type": "array",
            "x-stoplight": {
              "id": "22sgv37ve9kxo"
            },
            "description": "List of filter objects",
            "items": {
              "$ref": "#/components/schemas/Filter",
              "x-stoplight": {
                "id": "ttw5rxhy83k8p"
              }
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "x-stoplight": {
              "id": "7cyrb1770mrzz"
            }
          }
        },
        "required": [
          "list",
          "pageInfo"
        ]
      },
      "FilterReq": {
        "description": "Model for Filter Request",
        "examples": [
          {
            "comparison_op": "eq",
            "comparison_sub_op": null,
            "fk_column_id": "cl_d7ah9n2qfupgys",
            "is_group": false,
            "logical_op": "and",
            "value": "foo"
          }
        ],
        "title": "Filter Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "f95qy45zzlhei"
        },
        "properties": {
          "comparison_op": {
            "description": "Comparison Operator",
            "anyOf": [
              {
                "enum": [
                  "allof",
                  "anyof",
                  "blank",
                  "btw",
                  "checked",
                  "empty",
                  "eq",
                  "ge",
                  "gt",
                  "gte",
                  "in",
                  "is",
                  "isWithin",
                  "isnot",
                  "le",
                  "like",
                  "lt",
                  "lte",
                  "nallof",
                  "nanyof",
                  "nbtw",
                  "neq",
                  "nlike",
                  "not",
                  "notblank",
                  "notchecked",
                  "notempty",
                  "notnull",
                  "null"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "comparison_sub_op": {
            "anyOf": [
              {
                "enum": [
                  "daysAgo",
                  "daysFromNow",
                  "exactDate",
                  "nextMonth",
                  "nextNumberOfDays",
                  "nextWeek",
                  "nextYear",
                  "oneMonthAgo",
                  "oneMonthFromNow",
                  "oneWeekAgo",
                  "oneWeekFromNow",
                  "pastMonth",
                  "pastNumberOfDays",
                  "pastWeek",
                  "pastYear",
                  "today",
                  "tomorrow",
                  "yesterday"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Comparison Sub-Operator"
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Foreign Key to Column"
          },
          "fk_parent_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Belong to which filter ID"
          },
          "is_group": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this filter grouped?"
          },
          "logical_op": {
            "description": "Logical Operator",
            "enum": [
              "and",
              "not",
              "or"
            ],
            "type": "string"
          },
          "value": {
            "description": "The filter value. Can be NULL for some operators."
          }
        },
        "readOnly": true
      },
      "Follower": {
        "properties": {
          "fk_follower_id": {
            "type": "string"
          }
        },
        "title": "Follower",
        "type": "object",
        "x-stoplight": {
          "id": "a3aza5b3wavkv"
        }
      },
      "Form": {
        "description": "Model for Form",
        "examples": [
          {
            "source_id": "ds_g4ccx6e77h1dmi",
            "banner_image_url": null,
            "columns": [
              {
                "id": "fvc_ugj9zo5bzocxtl",
                "source_id": "ds_g4ccx6e77h1dmi",
                "base_id": "p_xm3thidrblw4n7",
                "fk_view_id": "vw_kdf5cr7qmhksek",
                "fk_column_id": "cl_phvuuwjrzcdo0g",
                "uuid": null,
                "label": null,
                "help": null,
                "description": null,
                "required": null,
                "show": 0,
                "order": 1,
                "created_at": "2023-03-04 16:40:47",
                "updated_at": "2023-03-04 16:40:47",
                "meta": {}
              }
            ],
            "email": "user@example.com",
            "fk_model_id": "md_rsu68aqjsbyqtl",
            "heading": "My Form",
            "lock_type": "collaborative",
            "logo_url": null,
            "meta": null,
            "redirect_after_secs": null,
            "redirect_url": null,
            "show_blank_form": 0,
            "subheading": "My Form Subheading",
            "submit_another_form": 0,
            "success_msg": "Thank you for the submission.",
            "title": "Form View 1"
          }
        ],
        "title": "Form Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID",
            "x-stoplight": {
              "id": "z6wjvs00d3qfk"
            }
          },
          "banner_image_url": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Banner Image URL. Not in use currently."
          },
          "columns": {
            "type": "array",
            "description": "Form Columns",
            "items": {
              "$ref": "#/components/schemas/FormColumn"
            }
          },
          "email": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Email to sned after form is submitted"
          },
          "fk_model_id": {
            "type": "string",
            "description": "Foreign Key to Model",
            "example": "md_rsu68aqjsbyqtl"
          },
          "source_id": {
            "type": "string",
            "description": "Source ID",
            "example": "md_rsu68aqjsbyqtl",
            "x-stoplight": {
              "id": "kfz7tve8nzj6f"
            }
          },
          "heading": {
            "type": "string",
            "description": "The heading of the form",
            "example": "My Form"
          },
          "lock_type": {
            "enum": [
              "collaborative",
              "locked",
              "personal"
            ],
            "type": "string",
            "description": "Lock Type of this view",
            "example": "collaborative"
          },
          "logo_url": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Logo URL. Not in use currently."
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta Info for this view"
          },
          "redirect_after_secs": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "The numbers of seconds to redirect after form submission"
          },
          "redirect_url": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "URL to redirect after submission"
          },
          "show_blank_form": {
            "$ref": "#/components/schemas/Bool",
            "description": "Show `Blank Form` after 5 seconds"
          },
          "subheading": {
            "type": "string",
            "description": "The subheading of the form",
            "example": "My Form Subheading"
          },
          "submit_another_form": {
            "$ref": "#/components/schemas/Bool",
            "description": "Show `Submit Another Form` button"
          },
          "success_msg": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Custom message after the form is successfully submitted"
          },
          "title": {
            "type": "string",
            "description": "Form View Title",
            "example": "Form View 1"
          }
        },
        "x-stoplight": {
          "id": "szw7mwcmvrj90"
        }
      },
      "FormUpdateReq": {
        "description": "Model for Form Update Request",
        "examples": [
          {
            "banner_image_url": null,
            "email": "user@example.com",
            "heading": "My Form",
            "logo_url": null,
            "meta": null,
            "redirect_after_secs": null,
            "redirect_url": null,
            "show_blank_form": 0,
            "subheading": "My Form Subheading",
            "submit_another_form": 0,
            "success_msg": "Thank you for the submission."
          }
        ],
        "title": "Form Update Request Model",
        "type": "object",
        "properties": {
          "banner_image_url": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Banner Image URL. Not in use currently."
          },
          "email": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Email to sned after form is submitted"
          },
          "heading": {
            "description": "The heading of the form",
            "example": "My Form",
            "maxLength": 255,
            "type": "string"
          },
          "logo_url": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Logo URL. Not in use currently."
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta Info for this view"
          },
          "redirect_after_secs": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "The numbers of seconds to redirect after form submission"
          },
          "redirect_url": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "URL to redirect after submission"
          },
          "show_blank_form": {
            "$ref": "#/components/schemas/Bool",
            "description": "Show `Blank Form` after 5 seconds"
          },
          "subheading": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "The subheading of the form"
          },
          "submit_another_form": {
            "$ref": "#/components/schemas/Bool",
            "description": "Show `Submit Another Form` button"
          },
          "success_msg": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Custom message after the form is successfully submitted"
          }
        },
        "x-stoplight": {
          "id": "gqdmtil2ni0ln"
        }
      },
      "FormColumn": {
        "description": "Model for Form Column",
        "examples": [
          {
            "id": "fvc_1m9b0aub791d4m",
            "description": null,
            "fk_column_id": "cl_ah9zavkn25ihyd",
            "fk_view_id": "vw_6fqln9vdytdv8q",
            "help": "This is a help text",
            "label": "Form Label",
            "meta": null,
            "order": 1,
            "required": 0,
            "show": 0,
            "uuid": null
          }
        ],
        "title": "Form Column Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "_cn": "first_name",
            "alias": "first_name",
            "created_at": "2022-02-15 12:39:04",
            "description": "dsdsdsdsd",
            "fk_column_id": "cl_yvyhsl9u81tokc",
            "fk_view_id": "vw_s1pf4umdnikoyn",
            "help": null,
            "id": "fvc_8z1i7t8aswkqxx",
            "label": "dsdsds",
            "order": 1,
            "required": false,
            "show": 1,
            "enable_scanner": true,
            "updated_at": "2022-02-15 12:39:16",
            "uuid": null
          }
        },
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "description": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Form Column Description (Not in use)"
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Column"
          },
          "fk_view_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to View"
          },
          "help": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Form Column Help Text"
          },
          "label": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Form Column Label"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta Info"
          },
          "order": {
            "type": "number",
            "description": "The order among all the columns in the form",
            "example": 1
          },
          "required": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this form column required in submission?"
          },
          "show": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this column shown in Form?"
          },
          "enable_scanner": {
            "$ref": "#/components/schemas/Bool",
            "description": "Indicates whether the 'Fill by scan' button is visible for this column or not.",
            "example": true
          },
          "uuid": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Form Column UUID (Not in use)"
          }
        },
        "x-stoplight": {
          "id": "rs2uh5opf10q6"
        }
      },
      "FormColumnReq": {
        "description": "Model for Form Column Request",
        "examples": [
          {
            "description": null,
            "help": "This is a help text",
            "label": "Form Label",
            "meta": null,
            "order": 1,
            "required": 0,
            "show": 0
          }
        ],
        "title": "Form Column Request Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "_cn": "first_name",
            "alias": "first_name",
            "created_at": "2022-02-15 12:39:04",
            "description": "dsdsdsdsd",
            "fk_column_id": "cl_yvyhsl9u81tokc",
            "fk_view_id": "vw_s1pf4umdnikoyn",
            "help": null,
            "id": "fvc_8z1i7t8aswkqxx",
            "label": "dsdsds",
            "order": 1,
            "required": false,
            "show": 1,
            "updated_at": "2022-02-15 12:39:16",
            "uuid": null
          }
        },
        "properties": {
          "description": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Form Column Description (Not in use)"
          },
          "help": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Form Column Help Text"
          },
          "label": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Form Column Label"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta Info"
          },
          "order": {
            "type": "number",
            "description": "The order among all the columns in the form"
          },
          "required": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this form column required in submission?"
          },
          "show": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this column shown in Form?"
          }
        },
        "x-stoplight": {
          "id": "a1vgymjna1ose"
        }
      },
      "Formula": {
        "description": "Model for Formula",
        "examples": [
          {
            "error": "Error Message shows here",
            "fk_column_id": "cl_h2micb4jdnmsh1",
            "formula": "CONCAT(\"FOO\", {{cl_c5knoi4xs4sfpt}})",
            "formula_raw": "CONCAT(\"FOO\", {Title})",
            "id": "fm_1lo8wqtvvipdns"
          }
        ],
        "title": "Formula Model",
        "type": "object",
        "properties": {
          "error": {
            "description": "Error Message",
            "type": "string"
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Column"
          },
          "formula": {
            "description": "Formula with column ID replaced",
            "example": "CONCAT(\"FOO\", {{cl_c5knoi4xs4sfpt}})",
            "type": "string"
          },
          "formula_raw": {
            "description": "Original Formula inputted in UI",
            "example": "CONCAT(\"FOO\", {Title})",
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          }
        },
        "x-stoplight": {
          "id": "syn5ameyiipp7"
        }
      },
      "FormulaColumnReq": {
        "description": "Model for Formula Column Request",
        "examples": [
          {
            "formula": "CONCAT(\"FOO\", {{cl_c5knoi4xs4sfpt}})",
            "formula_raw": "CONCAT(\"FOO\", {Title})",
            "title": "Formula",
            "uidt": "Formula"
          }
        ],
        "title": "Formula Column Request Model",
        "type": "object",
        "properties": {
          "formula": {
            "description": "Formula with column ID replaced",
            "type": "string"
          },
          "formula_raw": {
            "description": "Original Formula inputted in UI",
            "type": "string"
          },
          "title": {
            "description": "Formula Title",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "uidt": {
            "description": "UI Data Type",
            "enum": [
              "Formula"
            ],
            "type": "string"
          }
        },
        "x-stoplight": {
          "id": "tvczns7x7nj73"
        }
      },
      "Gallery": {
        "description": "Model for Gallery",
        "examples": [
          {
            "alias": "string",
            "columns": [
              {
                "fk_col_id": "string",
                "fk_gallery_id": "string",
                "help": "string",
                "id": "string",
                "label": "string"
              }
            ],
            "cover_image": "string",
            "cover_image_idx": 0,
            "deleted": true,
            "fk_cover_image_col_id": "string",
            "fk_model_id": "string",
            "fk_view_id": "string",
            "lock_type": "collaborative",
            "next_enabled": true,
            "order": 0,
            "prev_enabled": true,
            "restrict_number": "string",
            "restrict_size": "string",
            "restrict_types": "string",
            "title": "string"
          }
        ],
        "properties": {
          "alias": {
            "type": "string"
          },
          "columns": {
            "items": {
              "$ref": "#/components/schemas/GalleryColumn"
            },
            "type": "array"
          },
          "cover_image": {
            "type": "string"
          },
          "cover_image_idx": {
            "type": "integer"
          },
          "deleted": {
            "$ref": "#/components/schemas/Bool"
          },
          "fk_cover_image_col_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Foreign Key to Cover Image Column"
          },
          "fk_model_id": {
            "type": "string",
            "description": "Foreign Key to Model"
          },
          "fk_view_id": {
            "type": "string",
            "description": "Foreign Key to View"
          },
          "lock_type": {
            "enum": [
              "collaborative",
              "locked",
              "personal"
            ],
            "type": "string"
          },
          "next_enabled": {
            "$ref": "#/components/schemas/Bool"
          },
          "order": {
            "type": "number",
            "description": "Order of Gallery"
          },
          "prev_enabled": {
            "$ref": "#/components/schemas/Bool"
          },
          "restrict_number": {
            "type": "string"
          },
          "restrict_size": {
            "type": "string"
          },
          "restrict_types": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "title": "Gallery Model",
        "type": "object",
        "x-stoplight": {
          "id": "brih3mxjli606"
        }
      },
      "GalleryColumn": {
        "description": "Model for Gallery Column",
        "examples": [
          {
            "fk_col_id": "string",
            "fk_gallery_id": "string",
            "help": "string",
            "id": "string",
            "label": "string"
          }
        ],
        "properties": {
          "fk_col_id": {
            "type": "string"
          },
          "fk_gallery_id": {
            "type": "string"
          },
          "help": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "label": {
            "type": "string"
          }
        },
        "title": "Gallery Column Model",
        "type": "object",
        "x-stoplight": {
          "id": "auloy6128iwh9"
        }
      },
      "GalleryUpdateReq": {
        "description": "Model for Gallery View Update Request",
        "x-stoplight": {
          "id": "8o7b279bp9wmg"
        },
        "examples": [
          {
            "fk_cover_image_col_id": "cl_ib8l4j1kiu1efx",
            "meta": null
          }
        ],
        "title": "Gallery View Update Request Model",
        "type": "object",
        "properties": {
          "fk_cover_image_col_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "The id of the column that contains the cover image"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "x-stoplight": {
              "id": "zhp6jkrr54wuf"
            },
            "description": "Meta Info"
          }
        }
      },
      "GeoLocation": {
        "description": "Model for Geo Location",
        "examples": [
          {
            "latitude": 18.52139,
            "longitude": 179.87295
          }
        ],
        "properties": {
          "latitude": {
            "description": "The latitude of the location",
            "example": 18.52139,
            "exclusiveMaximum": 90,
            "exclusiveMinimum": -90,
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "description": "The longitude of the location",
            "example": 179.87295,
            "exclusiveMaximum": 180,
            "exclusiveMinimum": -180,
            "format": "double",
            "type": "number"
          }
        },
        "title": "Geo Location Model",
        "type": "object",
        "x-stoplight": {
          "id": "jv0zkileq99er"
        }
      },
      "Grid": {
        "description": "Model for Grid",
        "examples": [
          {
            "base_id": "p_xm3thidrblw4n7",
            "source_id": "ds_g4ccx6e77h1dmi",
            "fk_view_id": "vw_p2jcatxz4mvcfw",
            "row_height": 1,
            "meta": null,
            "columns": [
              {
                "id": "cl_phvuuwjrzcdo0g",
                "source_id": "ds_g4ccx6e77h1dmi",
                "base_id": "p_xm3thidrblw4n7",
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "title": "Id",
                "column_name": "id",
                "uidt": "ID",
                "dt": "int",
                "np": "10",
                "ns": "0",
                "clen": null,
                "cop": "1",
                "pk": 1,
                "pv": null,
                "rqd": 1,
                "un": 1,
                "ct": "int unsigned",
                "ai": 1,
                "unique": 0,
                "cdf": null,
                "cc": "",
                "csn": null,
                "dtx": "specificType",
                "dtxp": "",
                "dtxs": "0",
                "au": 0,
                "validate": null,
                "virtual": null,
                "deleted": null,
                "system": 0,
                "order": 1,
                "created_at": "2023-03-02 17:04:06",
                "updated_at": "2023-03-02 17:04:06",
                "meta": null
              }
            ]
          }
        ],
        "title": "Grid Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID",
            "x-stoplight": {
              "id": "e3ti3fc0ocjyu"
            }
          },
          "base_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Base ID",
            "x-stoplight": {
              "id": "e3ti3fc0ocjyu"
            }
          },
          "source_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Source ID",
            "x-stoplight": {
              "id": "m8v3iyf1tidy9"
            }
          },
          "fk_view_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to View",
            "x-stoplight": {
              "id": "m8v3iyf1tidy9"
            }
          },
          "row_height": {
            "type": "number",
            "example": 1,
            "description": "Row Height"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "x-stoplight": {
              "id": "n8cud3jyqw5yv"
            },
            "description": "Meta info for Grid Model"
          },
          "columns": {
            "type": "array",
            "x-stoplight": {
              "id": "22y0gipx2jdf8"
            },
            "description": "Grid View Columns",
            "items": {
              "$ref": "#/components/schemas/GridColumn",
              "x-stoplight": {
                "id": "nmzp6w3o6b24u"
              }
            }
          }
        },
        "x-stoplight": {
          "id": "wlj101286bua3"
        }
      },
      "Grid - copy": {
        "description": "Model for Grid",
        "x-stoplight": {
          "id": "9hiq0xt18jao0"
        },
        "examples": [
          {
            "base_id": "p_xm3thidrblw4n7",
            "source_id": "ds_g4ccx6e77h1dmi",
            "fk_view_id": "vw_p2jcatxz4mvcfw",
            "row_height": 1,
            "meta": null,
            "columns": [
              {
                "id": "cl_phvuuwjrzcdo0g",
                "source_id": "ds_g4ccx6e77h1dmi",
                "base_id": "p_xm3thidrblw4n7",
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "title": "Id",
                "column_name": "id",
                "uidt": "ID",
                "dt": "int",
                "np": "10",
                "ns": "0",
                "clen": null,
                "cop": "1",
                "pk": 1,
                "pv": null,
                "rqd": 1,
                "un": 1,
                "ct": "int unsigned",
                "ai": 1,
                "unique": 0,
                "cdf": null,
                "cc": "",
                "csn": null,
                "dtx": "specificType",
                "dtxp": "",
                "dtxs": "0",
                "au": 0,
                "validate": null,
                "virtual": null,
                "deleted": null,
                "system": 0,
                "order": 1,
                "created_at": "2023-03-02 17:04:06",
                "updated_at": "2023-03-02 17:04:06",
                "meta": null
              }
            ]
          }
        ],
        "title": "Grid Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID",
            "x-stoplight": {
              "id": "e3ti3fc0ocjyu"
            }
          },
          "base_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Base ID",
            "x-stoplight": {
              "id": "e3ti3fc0ocjyu"
            }
          },
          "source_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Source ID",
            "x-stoplight": {
              "id": "m8v3iyf1tidy9"
            }
          },
          "fk_view_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to View",
            "x-stoplight": {
              "id": "m8v3iyf1tidy9"
            }
          },
          "row_height": {
            "type": "number",
            "example": 1,
            "description": "Row Height"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "x-stoplight": {
              "id": "n8cud3jyqw5yv"
            },
            "description": "Meta info for Grid Model"
          },
          "columns": {
            "type": "array",
            "x-stoplight": {
              "id": "22y0gipx2jdf8"
            },
            "description": "Grid View Columns",
            "items": {
              "$ref": "#/components/schemas/GridColumn",
              "x-stoplight": {
                "id": "nmzp6w3o6b24u"
              }
            }
          }
        }
      },
      "GridColumn": {
        "description": "Model for Grid Column",
        "examples": [
          {
            "id": "nc_c8jz4kxe6xvh11",
            "fk_view_id": "vw_p2jcatxz4mvcfw",
            "fk_column_id": "cl_c5knoi4xs4sfpt",
            "base_id": "p_xm3thidrblw4n7",
            "source_id": "ds_g4ccx6e77h1dmi",
            "show": 0,
            "order": 1,
            "width": "200px",
            "help": null,
            "group_by": 0,
            "group_by_order": null,
            "group_by_sort": null
          }
        ],
        "title": "Grid Column Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID",
            "x-stoplight": {
              "id": "jc14yojp52rqj"
            }
          },
          "fk_view_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to View",
            "x-stoplight": {
              "id": "vl18dbt5c2r8r"
            }
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Column",
            "x-stoplight": {
              "id": "2drg88fmodf3v"
            }
          },
          "base_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Base ID",
            "x-stoplight": {
              "id": "2drg88fmodf3v"
            }
          },
          "source_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Source ID",
            "x-stoplight": {
              "id": "2drg88fmodf3v"
            }
          },
          "show": {
            "$ref": "#/components/schemas/Bool",
            "x-stoplight": {
              "id": "d47eer13oa8yr"
            }
          },
          "order": {
            "type": "number",
            "x-stoplight": {
              "id": "d47eer13oa8yr"
            },
            "example": 1,
            "description": "Grid Column Order"
          },
          "width": {
            "type": "string",
            "description": "Column Width",
            "example": "200px"
          },
          "help": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Column Help Text",
            "x-stoplight": {
              "id": "azwh6zn37qzkc"
            }
          },
          "group_by": {
            "$ref": "#/components/schemas/Bool",
            "description": "Group By"
          },
          "group_by_order": {
            "type": "number",
            "description": "Group By Order",
            "example": 1
          },
          "group_by_sort": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Group By Sort",
            "example": "asc"
          }
        },
        "x-stoplight": {
          "id": "195gzd7s6p7nv"
        }
      },
      "GridColumnReq": {
        "description": "Model for Grid Column Request",
        "examples": [
          {
            "fk_column_id": "cl_c5knoi4xs4sfpt",
            "label": "My Column",
            "width": "200px"
          }
        ],
        "properties": {
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Column"
          },
          "help": {
            "maxLength": 255,
            "type": "string"
          },
          "label": {
            "description": "The label of the column",
            "example": "My Column",
            "maxLength": 255,
            "type": "string"
          },
          "width": {
            "description": "The width of the column",
            "example": "200px",
            "maxLength": 255,
            "pattern": "^[0-9]+(px|%)$",
            "type": "string"
          },
          "group_by": {
            "$ref": "#/components/schemas/Bool",
            "description": "Group By"
          },
          "group_by_order": {
            "type": "number",
            "description": "Group By Order",
            "example": 1
          },
          "group_by_sort": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Group By Sort",
            "example": "asc"
          }
        },
        "title": "Grid Column Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "9yhalgmix6d0m"
        }
      },
      "GridUpdateReq": {
        "description": "Model for Grid View Update",
        "x-stoplight": {
          "id": "v0hz01gynll1t"
        },
        "examples": [
          {
            "row_height": "1",
            "meta": null
          }
        ],
        "title": "Grid View Update Model",
        "type": "object",
        "properties": {
          "row_height": {
            "type": "number",
            "x-stoplight": {
              "id": "m5976ax1q13cr"
            },
            "description": "Row Height",
            "example": 1
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "x-stoplight": {
              "id": "dugbkhe9iupqu"
            },
            "description": "Meta Info for grid view"
          }
        }
      },
      "Hook": {
        "description": "Model for Hook",
        "examples": [
          {
            "active": 0,
            "async": 0,
            "description": "This is my hook description",
            "env": "all",
            "event": "after",
            "fk_model_id": "md_rsu68aqjsbyqtl",
            "id": "string",
            "notification": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"http://example.com\"}}",
            "null": null,
            "operation": "insert",
            "retries": 10,
            "retry_interval": 60000,
            "timeout": 60000,
            "title": "My Webhook"
          }
        ],
        "title": "Hook Model",
        "type": "object",
        "x-stoplight": {
          "id": "5jvfnece2nu6w"
        },
        "properties": {
          "active": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is the hook active?"
          },
          "async": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is the hook aysnc?"
          },
          "description": {
            "type": "string",
            "description": "Hook Description",
            "example": "This is my hook description"
          },
          "env": {
            "type": "string",
            "example": "all",
            "description": "Environment for the hook"
          },
          "event": {
            "enum": [
              "after",
              "before"
            ],
            "type": "string",
            "description": "Event Type for the operation",
            "example": "after"
          },
          "fk_model_id": {
            "type": "string",
            "description": "Foreign Key to Model",
            "example": "md_rsu68aqjsbyqtl"
          },
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "notification": {
            "description": "Hook Notification including info such as type, payload, method, body, and etc",
            "type": [
              "object",
              "string"
            ]
          },
          "operation": {
            "enum": [
              "insert",
              "update",
              "delete",
              "bulkInsert",
              "bulkUpdate",
              "bulkDelete"
            ],
            "type": "string",
            "description": "Hook Operation",
            "example": "insert"
          },
          "retries": {
            "type": "number",
            "description": "Retry Count",
            "example": 10
          },
          "retry_interval": {
            "type": "number",
            "description": "Retry Interval",
            "example": 60000
          },
          "timeout": {
            "type": "number",
            "example": 60000,
            "description": "Timeout"
          },
          "title": {
            "type": "string",
            "description": "Hook Title",
            "example": "My Webhook"
          },
          "type": {
            "type": "string",
            "description": "Hook Type"
          },
          "version": {
            "type": "string",
            "x-stoplight": {
              "id": "socewqvadj91n"
            },
            "example": "v2",
            "description": "Hook Version",
            "enum": [
              "v1",
              "v2"
            ]
          }
        }
      },
      "HookReq": {
        "description": "Model for Hook",
        "x-stoplight": {
          "id": "btj9o665l08xj"
        },
        "examples": [
          {
            "active": 0,
            "async": 0,
            "description": "This is my hook description",
            "env": "all",
            "event": "after",
            "fk_model_id": "md_rsu68aqjsbyqtl",
            "id": "string",
            "notification": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"http://example.com\"}}",
            "null": null,
            "operation": "insert",
            "retries": 10,
            "retry_interval": 60000,
            "timeout": 60000,
            "title": "My Webhook",
            "condition": false
          }
        ],
        "title": "Hook Request Model",
        "type": "object",
        "properties": {
          "active": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is the hook active?"
          },
          "async": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is the hook aysnc?"
          },
          "description": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Hook Description"
          },
          "env": {
            "type": "string",
            "example": "all",
            "description": "Environment for the hook"
          },
          "event": {
            "enum": [
              "after",
              "before"
            ],
            "type": "string",
            "description": "Event Type for the operation",
            "example": "after"
          },
          "fk_model_id": {
            "type": "string",
            "description": "Foreign Key to Model",
            "example": "md_rsu68aqjsbyqtl"
          },
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "notification": {
            "description": "Hook Notification including info such as type, payload, method, body, and etc",
            "type": [
              "object",
              "string"
            ]
          },
          "operation": {
            "enum": [
              "insert",
              "update",
              "delete",
              "bulkInsert",
              "bulkUpdate",
              "bulkDelete"
            ],
            "type": "string",
            "description": "Hook Operation",
            "example": "insert"
          },
          "retries": {
            "type": "number",
            "description": "Retry Count",
            "example": 10
          },
          "retry_interval": {
            "type": "number",
            "description": "Retry Interval",
            "example": 60000
          },
          "timeout": {
            "type": "number",
            "example": 60000,
            "description": "Timeout"
          },
          "title": {
            "type": "string",
            "description": "Hook Title",
            "example": "My Webhook"
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "description": "Hook Type"
          },
          "condition": {
            "$ref": "#/components/schemas/Bool",
            "x-stoplight": {
              "id": "wwzoum7rrlwun"
            },
            "description": "Is this hook assoicated with some filters"
          }
        },
        "required": [
          "event",
          "notification",
          "operation",
          "title"
        ]
      },
      "HookList": {
        "description": "Model for Hook List",
        "examples": [
          {
            "list": [
              {
                "active": 0,
                "async": 0,
                "description": "This is my hook description",
                "env": "all",
                "event": "after",
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "id": "string",
                "notification": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"http://example.com\"}}",
                "null": null,
                "operation": "insert",
                "retries": 10,
                "retry_interval": 60000,
                "timeout": 60000,
                "title": "My Webhook"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "Hook List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "minItems": 1,
            "type": "array",
            "uniqueItems": true,
            "description": "List of hook objects",
            "items": {
              "$ref": "#/components/schemas/Hook"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ],
        "x-stoplight": {
          "id": "oza9z6dpygn29"
        }
      },
      "HookLog": {
        "description": "Model for Hook Log",
        "examples": [
          {
            "source_id": "ds_jxuewivwbxeum2",
            "event": "after",
            "execution_time": "98",
            "fk_hook_id": "hk_035ijv5qdi97y5",
            "id": "string",
            "notifications": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b\"}}",
            "operation": "insert",
            "payload": "{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b\"}",
            "base_id": "p_tbhl1hnycvhe5l",
            "response": "{\"status\":200,\"statusText\":\"OK\",\"headers\":{\"server\":\"nginx\",\"content-type\":\"text/plain; charset=UTF-8\",\"transfer-encoding\":\"chunked\",\"connection\":\"close\",\"vary\":\"Accept-Encoding\",\"x-request-id\":\"53844a7d-ede8-4798-adf7-8af441908a72\",\"x-token-id\":\"6eb45ce5-b611-4be1-8b96-c2965755662b\",\"cache-control\":\"no-cache, private\",\"date\":\"Fri, 24 Mar 2023 10:50:10 GMT\"},\"config\":{\"url\":\"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b\",\"method\":\"post\",\"data\":\"{\\\"type\\\":\\\"records.after.insert\\\",\\\"id\\\":\\\"a77d97dc-a3e4-4719-9b46-45f93e0cc99a\\\",\\\"data\\\":{\\\"table_id\\\":\\\"md_d8v403o74mf5lf\\\",\\\"table_name\\\":\\\"Sheet-2\\\"}}\",\"headers\":{\"Accept\":\"application/json, text/plain, */*\",\"Content-Type\":\"application/x-www-form-urlencoded\",\"User-Agent\":\"axios/0.21.4\",\"Content-Length\":138},\"params\":{}}}",
            "test_call": 0,
            "triggered_by": "w@nocodb.com",
            "type": "URL"
          }
        ],
        "title": "Hook Log Model",
        "type": "object",
        "x-stoplight": {
          "id": "alkb2a68ewbpz"
        },
        "properties": {
          "source_id": {
            "type": "string",
            "description": "Unique Source ID",
            "example": "ds_jxuewivwbxeum2"
          },
          "conditions": {
            "type": "string",
            "description": "Hook Conditions"
          },
          "error": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Error"
          },
          "error_code": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Error Code"
          },
          "error_message": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Error Message"
          },
          "event": {
            "type": "string",
            "description": "Hook Event",
            "example": "after",
            "enum": [
              "after",
              "before"
            ]
          },
          "execution_time": {
            "type": "string",
            "description": "Execution Time in milliseconds",
            "example": "98"
          },
          "fk_hook_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Foreign Key to Hook"
          },
          "id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Unique ID"
          },
          "notifications": {
            "type": "string",
            "description": "Hook Notification"
          },
          "operation": {
            "type": "string",
            "description": "Hook Operation",
            "enum": [
              "insert",
              "update",
              "delete",
              "bulkInsert",
              "bulkUpdate",
              "bulkDelete"
            ],
            "example": "insert"
          },
          "payload": {
            "type": "string",
            "description": "Hook Payload",
            "example": "{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b\"}"
          },
          "base_id": {
            "type": "string",
            "description": "Base ID",
            "example": "p_tbhl1hnycvhe5l"
          },
          "response": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Hook Response"
          },
          "test_call": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this testing hook call?"
          },
          "triggered_by": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Who triggered the hook?"
          },
          "type": {
            "type": "string",
            "example": "URL",
            "description": "Hook Type"
          }
        }
      },
      "HookLogList": {
        "description": "Model for Hook Log List",
        "x-stoplight": {
          "id": "ck3ymtqepbl7e"
        },
        "examples": [],
        "title": "Hook Log List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "minItems": 1,
            "type": "array",
            "uniqueItems": true,
            "description": "List of hook objects",
            "items": {
              "$ref": "#/components/schemas/HookLog"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ]
      },
      "HookTestReq": {
        "description": "Model for Hook Test Request",
        "examples": [
          {
            "hook": {
              "active": 0,
              "async": 0,
              "description": "This is my hook description",
              "env": "all",
              "event": "after",
              "fk_model_id": "md_rsu68aqjsbyqtl",
              "id": "string",
              "notification": "{\"type\":\"URL\",\"payload\":{\"method\":\"POST\",\"body\":\"{{ json data }}\",\"headers\":[{}],\"parameters\":[{}],\"auth\":\"\",\"path\":\"http://example.com\"}}",
              "null": null,
              "operation": "insert",
              "retries": 10,
              "retry_interval": 60000,
              "timeout": 60000,
              "title": "My Webhook"
            },
            "payload": {
              "data": {
                "Id": 1,
                "Title": "Sample Text",
                "CreatedAt": "2023-03-03T10:03:06.484Z",
                "UpdatedAt": "2023-03-03T10:03:06.484Z",
                "attachment": [
                  {
                    "url": "https://nocodb.com/dummy.png",
                    "title": "image.png",
                    "mimetype": "image/png",
                    "size": 0
                  }
                ],
                "f": "Sample Output"
              }
            }
          }
        ],
        "title": "Hook Test Request Model",
        "type": "object",
        "properties": {
          "hook": {
            "$ref": "#/components/schemas/HookReq"
          },
          "payload": {
            "description": "Payload to be sent"
          }
        },
        "required": [
          "hook",
          "payload"
        ],
        "x-stoplight": {
          "id": "fmxwekzyi46za"
        }
      },
      "Id": {
        "description": "Model for ID",
        "examples": [
          "string"
        ],
        "maxLength": 20,
        "minLength": 0,
        "title": "ID Model",
        "type": "string",
        "x-stoplight": {
          "id": "upw7it13u2dkn"
        }
      },
      "Kanban": {
        "description": "Model for Kanban",
        "examples": [
          {
            "id": "vw_wqs4zheuo5lgdy",
            "fk_grp_col_id": "cl_3704cxcbqt7sj7",
            "fk_view_id": "vw_wqs4zheuo5lgdy",
            "fk_cover_image_col_id": null,
            "columns": [
              {
                "id": "kvc_2skkg5mi1eb37f",
                "fk_column_id": "cl_hzos4ghyncqi4k",
                "fk_view_id": "vw_wqs4zheuo5lgdy",
                "source_id": "ds_hd4ojj0xpquaam",
                "base_id": "p_kzfl5lb0t3tcok",
                "title": "string",
                "show": 0,
                "order": "1"
              }
            ],
            "meta": null,
            "title": "My Kanban"
          }
        ],
        "title": "Kanban Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "fk_grp_col_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Grouping Field Column ID"
          },
          "fk_view_id": {
            "$ref": "#/components/schemas/Id",
            "x-stoplight": {
              "id": "1kgw1w06b97nl"
            },
            "description": "View ID"
          },
          "fk_cover_image_col_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Cover Image Column ID"
          },
          "columns": {
            "type": "array",
            "description": "Kanban Columns",
            "items": {
              "$ref": "#/components/schemas/KanbanColumn"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta Info for Kanban"
          },
          "title": {
            "type": "string",
            "description": "Kanban Title",
            "example": "My Kanban"
          }
        },
        "x-stoplight": {
          "id": "gu721t0zw7jqq"
        }
      },
      "KanbanColumn": {
        "description": "Model for Kanban Column",
        "examples": [
          {
            "id": "kvc_2skkg5mi1eb37f",
            "fk_column_id": "cl_hzos4ghyncqi4k",
            "fk_view_id": "vw_wqs4zheuo5lgdy",
            "source_id": "ds_hd4ojj0xpquaam",
            "base_id": "p_kzfl5lb0t3tcok",
            "title": "string",
            "show": 0,
            "order": "1"
          }
        ],
        "title": "Kanban Column Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Column"
          },
          "fk_view_id": {
            "$ref": "#/components/schemas/Id",
            "x-stoplight": {
              "id": "t1fy4zy561ih8"
            },
            "description": "Foreign Key to View"
          },
          "source_id": {
            "$ref": "#/components/schemas/Id",
            "x-stoplight": {
              "id": "uqq8xmyz97t1u"
            },
            "description": "Baes ID\n"
          },
          "base_id": {
            "$ref": "#/components/schemas/Id",
            "x-stoplight": {
              "id": "uqq8xmyz97t1u"
            },
            "description": "Base ID"
          },
          "title": {
            "x-stoplight": {
              "id": "uqq8xmyz97t1u"
            },
            "description": "Base ID",
            "type": "string"
          },
          "show": {
            "$ref": "#/components/schemas/Bool",
            "x-stoplight": {
              "id": "uqq8xmyz97t1u"
            },
            "description": "Is this column shown?"
          },
          "order": {
            "type": "number",
            "x-stoplight": {
              "id": "pbnchzgci5dwa"
            },
            "example": 1,
            "description": "Column Order"
          }
        },
        "x-stoplight": {
          "id": "psbv6c6y9qvbu"
        }
      },
      "KanbanUpdateReq": {
        "description": "Model for Kanban Update Request",
        "examples": [
          {
            "fk_grp_col_id": "cl_g0a89q9xdry3lu",
            "fk_cover_image_col_id": "cl_ib8l4j1kiu1efx",
            "meta": {
              "cl_g0a89q9xdry3lu": [
                {
                  "id": "uncategorized",
                  "title": null,
                  "order": 0,
                  "color": "#c2f5e8",
                  "collapsed": false
                },
                {
                  "id": "sl_ihyva6jx6dg0fc",
                  "fk_column_id": "cl_g0a89q9xdry3lu",
                  "title": "a",
                  "color": "#cfdffe",
                  "order": 1,
                  "collapsed": false
                },
                {
                  "id": "sl_gqdm5v6t8aetoa",
                  "fk_column_id": "cl_g0a89q9xdry3lu",
                  "title": "b",
                  "color": "#d0f1fd",
                  "order": 2,
                  "collapsed": false
                },
                {
                  "id": "sl_eipnl0kn7a9d3c",
                  "fk_column_id": "cl_g0a89q9xdry3lu",
                  "title": "cc",
                  "color": "#c2f5e8",
                  "order": 3,
                  "collapsed": false
                },
                {
                  "id": "sl_dei8p2jq0cnlv0",
                  "fk_column_id": "cl_g0a89q9xdry3lu",
                  "title": "d",
                  "color": "#ffdaf6",
                  "order": 4,
                  "collapsed": false
                }
              ]
            }
          }
        ],
        "title": "Kanban Update Request Model",
        "type": "object",
        "properties": {
          "fk_grp_col_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Foreign Key to Grouping Field Column"
          },
          "fk_cover_image_col_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "x-stoplight": {
              "id": "81wn4hzj76wod"
            },
            "description": "Foreign Key to Cover Image Column"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "x-stoplight": {
              "id": "stsvdmkli1b0r"
            },
            "description": "Meta Info"
          }
        },
        "x-stoplight": {
          "id": "9zirjgj9k1gqa"
        }
      },
      "LicenseReq": {
        "description": "Model for Kanban Request",
        "examples": [
          {
            "key": "1234567890"
          }
        ],
        "properties": {
          "key": {
            "description": "The license key",
            "example": "1234567890",
            "maxLength": 255,
            "type": "string"
          }
        },
        "title": "License Key Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "4vo9hms4s6uie"
        }
      },
      "LinkToAnotherColumnReq": {
        "description": "Model for LinkToAnotherColumn Request",
        "examples": [
          {
            "childId": "string",
            "parentId": "string",
            "title": "string",
            "type": "hm",
            "uidt": "LinkToAnotherRecord",
            "virtual": true
          }
        ],
        "properties": {
          "childId": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to chhild column"
          },
          "parentId": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to parent column"
          },
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title of the virtual column"
          },
          "type": {
            "enum": [
              "bt",
              "hm",
              "mm"
            ],
            "type": "string",
            "description": "The type of the relationship"
          },
          "uidt": {
            "enum": [
              "LinkToAnotherRecord",
              "Links"
            ],
            "type": "string",
            "description": "Abstract type of the relationship"
          },
          "virtual": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this relationship virtual?"
          }
        },
        "required": [
          "childId",
          "parentId",
          "title",
          "type",
          "uidt"
        ],
        "title": "LinkToAnotherColumn Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "ke4urwgcmt83x"
        }
      },
      "LinkToAnotherRecord": {
        "description": "Model for LinkToAnotherRecord",
        "examples": [
          {
            "deleted": "string",
            "dr": "string",
            "fk_child_column_id": "string",
            "fk_column_id": "string",
            "fk_index_name": "string",
            "fk_mm_child_column_id": "string",
            "fk_mm_model_id": "string",
            "fk_mm_parent_column_id": "string",
            "fk_parent_column_id": "string",
            "fk_related_model_id": "string",
            "id": "string",
            "order": "string",
            "type": "string",
            "ur": "string",
            "virtual": true
          }
        ],
        "properties": {
          "deleted": {
            "type": "string"
          },
          "dr": {
            "type": "string"
          },
          "fk_child_column_id": {
            "type": "string"
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Column"
          },
          "fk_index_name": {
            "type": "string"
          },
          "fk_mm_child_column_id": {
            "type": "string"
          },
          "fk_mm_model_id": {
            "type": "string"
          },
          "fk_mm_parent_column_id": {
            "type": "string"
          },
          "fk_parent_column_id": {
            "type": "string"
          },
          "fk_related_model_id": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "order": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "ur": {
            "type": "string"
          },
          "virtual": {
            "$ref": "#/components/schemas/Bool"
          }
        },
        "title": "LinkToAnotherRecord Model",
        "type": "object",
        "x-stoplight": {
          "id": "tcn1muyj67810"
        }
      },
      "Lookup": {
        "description": "Model for Lookup",
        "examples": [
          {
            "id": "lk_mngsu0e45njbxr",
            "fk_column_id": "cl_vdiy9bz7h11kdm",
            "fk_relation_column_id": "cl_5jestblzneb649",
            "fk_lookup_column_id": "cl_4cm47dtjphgqkv",
            "order": 1
          }
        ],
        "title": "Lookup Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Column"
          },
          "fk_lookup_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Lookup Column"
          },
          "fk_relation_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Relation Column"
          },
          "order": {
            "type": "number",
            "description": "The order among the list",
            "example": 1
          }
        },
        "x-stoplight": {
          "id": "53ff6kxwlgjrb"
        }
      },
      "LookupColumnReq": {
        "description": "Model for Lookup Column Request",
        "examples": [
          {
            "fk_relation_column_id": "cl_5jestblzneb649",
            "fk_lookup_column_id": "cl_4cm47dtjphgqkv",
            "title": "My Lookup",
            "uidt": "Lookup"
          }
        ],
        "title": "Lookup Column Request Model",
        "type": "object",
        "properties": {
          "fk_lookup_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Lookup Column"
          },
          "fk_relation_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Relation Column"
          },
          "title": {
            "maxLength": 255,
            "type": "string",
            "description": "Lookup Title",
            "example": "My Lookup"
          },
          "uidt": {
            "enum": [
              "Lookup"
            ],
            "type": "string",
            "description": "UI DataType"
          }
        },
        "x-stoplight": {
          "id": "rmmtwpsofeqo5"
        }
      },
      "Map": {
        "description": "Model for Map",
        "examples": [
          {
            "source_id": "ds_g4ccx6e77h1dmi",
            "columns": [
              {
                "source_id": "ds_g4ccx6e77h1dmi",
                "fk_column_id": "cl_8iw2o4ejzvdyna",
                "fk_view_id": "vw_qjt7klod1p9kyv",
                "id": "nc_46xcacqn4rc9xf",
                "order": 1,
                "base_id": "p_xm3thidrblw4n7",
                "show": 1
              }
            ],
            "fk_geo_data_col_id": "cl_8iw2o4ejzvdyna",
            "fk_view_id": "vw_qjt7klod1p9kyv",
            "meta": {},
            "order": 0,
            "base_id": "p_xm3thidrblw4n7",
            "show": true,
            "title": "My Map"
          }
        ],
        "properties": {
          "source_id": {
            "description": "The ID of the source that this view belongs to",
            "example": "ds_g4ccx6e77h1dmi",
            "type": "string"
          },
          "columns": {
            "description": "Columns in this view",
            "items": {
              "$ref": "#/components/schemas/MapColumn"
            },
            "type": "array"
          },
          "fk_geo_data_col_id": {
            "description": "Foreign Key to GeoData Column",
            "example": "cl_8iw2o4ejzvdyna",
            "type": "string"
          },
          "fk_view_id": {
            "description": "Unique ID for Map",
            "example": "vw_qjt7klod1p9kyv",
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta data for this view"
          },
          "order": {
            "description": "The order of the map list",
            "type": "number"
          },
          "base_id": {
            "description": "The ID of the base that this view belongs to",
            "example": "p_xm3thidrblw4n7",
            "type": "string"
          },
          "show": {
            "description": "To show this Map or not",
            "type": "boolean"
          },
          "title": {
            "description": "Title of Map View",
            "example": "My Map",
            "type": "string"
          }
        },
        "title": "Map Model",
        "type": "object",
        "x-stoplight": {
          "id": "bg6hvpyk90f0p"
        }
      },
      "MapUpdateReq": {
        "description": "Model for Map",
        "x-stoplight": {
          "id": "2me98w8ot1e6o"
        },
        "examples": [
          {
            "fk_geo_data_col_id": "cl_8iw2o4ejzvdyna",
            "meta": null
          }
        ],
        "title": "Map View Update Request Model",
        "type": "object",
        "properties": {
          "fk_geo_data_col_id": {
            "description": "Foreign Key to GeoData Column",
            "example": "cl_8iw2o4ejzvdyna",
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta data for this view"
          }
        }
      },
      "MapColumn": {
        "description": "Model for Map Column",
        "examples": [
          {
            "source_id": "ds_g4ccx6e77h1dmi",
            "fk_column_id": "cl_8iw2o4ejzvdyna",
            "fk_view_id": "vw_qjt7klod1p9kyv",
            "id": "nc_46xcacqn4rc9xf",
            "order": 1,
            "base_id": "p_xm3thidrblw4n7",
            "show": 1
          }
        ],
        "properties": {
          "source_id": {
            "description": "The ID of the source that this map column belongs to",
            "example": "ds_g4ccx6e77h1dmi",
            "type": "string"
          },
          "fk_column_id": {
            "description": "Foreign Key to Column",
            "example": "cl_8iw2o4ejzvdyna",
            "type": "string"
          },
          "fk_view_id": {
            "description": "Foreign Key to View",
            "example": "vw_qjt7klod1p9kyv",
            "type": "string"
          },
          "id": {
            "description": "Unique ID of Map Column",
            "example": "nc_46xcacqn4rc9xf",
            "type": "string"
          },
          "order": {
            "description": "the order in the list of map columns",
            "example": 1,
            "type": "number"
          },
          "base_id": {
            "description": "The ID of the base that this map column belongs to",
            "example": "p_xm3thidrblw4n7",
            "type": "string"
          },
          "show": {
            "description": "Whether to show this column or not",
            "example": 1,
            "type": "number"
          }
        },
        "title": "Map Column Model",
        "type": "object",
        "x-stoplight": {
          "id": "01nfqgzhqlqoe"
        }
      },
      "Meta": {
        "description": "Model for Meta",
        "examples": [
          {}
        ],
        "oneOf": [
          {
            "type": "null"
          },
          {
            "type": "object"
          },
          {
            "type": "string"
          }
        ],
        "title": "Meta Model",
        "x-stoplight": {
          "id": "daskjldw4zldd"
        }
      },
      "ModelRoleVisibility": {
        "description": "Model for ModelRoleVisibility",
        "examples": [
          {
            "source_id": "string",
            "disabled": true,
            "fk_model_id": "string",
            "fk_view_id": "string",
            "id": "string",
            "base_id": "string",
            "role": "string"
          }
        ],
        "properties": {
          "source_id": {
            "type": "string"
          },
          "disabled": {
            "$ref": "#/components/schemas/Bool"
          },
          "fk_model_id": {
            "type": "string"
          },
          "fk_view_id": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "base_id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "title": "ModelRoleVisibility Model",
        "type": "object",
        "x-stoplight": {
          "id": "cxh7walcnpkn0"
        }
      },
      "NormalColumnRequest": {
        "description": "Model for Normal Column Request",
        "examples": [
          {
            "ai": true,
            "au": true,
            "cc": "string",
            "cdf": "string",
            "column_name": "string",
            "csn": "string",
            "dt": "string",
            "dtx": "string",
            "dtxp": 0,
            "dtxs": 0,
            "np": 0,
            "ns": 0,
            "pk": true,
            "pv": true,
            "rqd": true,
            "title": "string",
            "uidt": "ID",
            "un": true,
            "unique": true
          }
        ],
        "properties": {
          "ai": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this column auto-incremented?"
          },
          "au": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this column auto-updated datetime field?"
          },
          "cc": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Column Comment"
          },
          "cdf": {
            "$ref": "#/components/schemas/StringOrNullOrBooleanOrNumber",
            "description": "Column Default Value"
          },
          "column_name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Column Name"
          },
          "csn": {
            "$ref": "#/components/schemas/StringOrNull"
          },
          "dt": {
            "type": "string",
            "description": "Data Type"
          },
          "dtx": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Data Type Extra"
          },
          "dtxp": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Data Type Extra Precision"
          },
          "dtxs": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringOrNull"
              },
              {
                "type": "number"
              }
            ],
            "description": "Data Type Extra Scale"
          },
          "np": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringOrNull"
              },
              {
                "type": "integer"
              }
            ],
            "description": "Numeric Precision"
          },
          "ns": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringOrNull"
              },
              {
                "type": "integer"
              }
            ],
            "description": "Numeric Scale"
          },
          "pk": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this column a primary key?"
          },
          "pv": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this column a primary value?"
          },
          "rqd": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this column required?"
          },
          "title": {
            "maxLength": 255,
            "type": "string",
            "description": "Column Title"
          },
          "uidt": {
            "enum": [
              "Attachment",
              "AutoNumber",
              "Barcode",
              "Button",
              "Checkbox",
              "Collaborator",
              "Count",
              "CreateTime",
              "Currency",
              "Date",
              "DateTime",
              "Decimal",
              "Duration",
              "Email",
              "Formula",
              "ForeignKey",
              "GeoData",
              "Geometry",
              "ID",
              "JSON",
              "LastModifiedTime",
              "LongText",
              "LinkToAnotherRecord",
              "Lookup",
              "MultiSelect",
              "Number",
              "Percent",
              "PhoneNumber",
              "Rating",
              "Rollup",
              "SingleLineText",
              "SingleSelect",
              "SpecificDBType",
              "Time",
              "URL",
              "Year",
              "QrCode",
              "Links"
            ],
            "type": "string",
            "description": "UI Data Type"
          },
          "un": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this column unique?"
          },
          "unique": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this column unique?"
          }
        },
        "title": "Normal Column Request Model",
        "type": "object",
        "required": [
          "column_name"
        ],
        "x-stoplight": {
          "id": "fn3gqmojvswv2"
        }
      },
      "OrgUserReq": {
        "description": "Model for Organisation User Update Request",
        "examples": [
          {
            "email": "user@example.com",
            "roles": "org-level-creator"
          }
        ],
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "roles": {
            "enum": [
              "org-level-creator",
              "org-level-viewer"
            ],
            "type": "string",
            "description": "Roles for the base user"
          }
        },
        "title": "Organisation User Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "n484boi6jv3up"
        }
      },
      "Paginated": {
        "description": "Model for Paginated",
        "examples": [
          {
            "isFirstPage": true,
            "isLastPage": true,
            "page": 1,
            "pageSize": 10,
            "totalRows": 1
          }
        ],
        "properties": {
          "isFirstPage": {
            "description": "Is the current page the first page",
            "type": "boolean"
          },
          "isLastPage": {
            "description": "Is the current page the last page",
            "type": "boolean"
          },
          "page": {
            "description": "The current page",
            "example": 1,
            "type": "number"
          },
          "pageSize": {
            "description": "The number of pages",
            "example": 10,
            "type": "number"
          },
          "totalRows": {
            "description": "The number of rows in the given result",
            "example": 1,
            "type": "number"
          }
        },
        "title": "Paginated Model",
        "type": "object",
        "x-stoplight": {
          "id": "2x65v3n9xo8q3"
        }
      },
      "Password": {
        "description": "Model for Password",
        "example": "password123456789",
        "examples": [
          "password123456789"
        ],
        "minLength": 8,
        "title": "Password Model",
        "type": "string",
        "x-stoplight": {
          "id": "s7gk265anpyc7"
        }
      },
      "PasswordChangeReq": {
        "description": "Model for Password Change Request",
        "examples": [
          {
            "currentPassword": "currentpassword",
            "newPassword": "newpassword"
          }
        ],
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "minLength": 8,
            "type": "string"
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "title": "Password Change Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "wvritsht82jyy"
        }
      },
      "PasswordForgotReq": {
        "description": "Model for Password Forgot Request",
        "examples": [
          {
            "email": "user@example.com"
          }
        ],
        "properties": {
          "email": {
            "description": "Email address of the user",
            "format": "email",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "title": "Password Forgot Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "qj6pb0nc6dtb1"
        }
      },
      "PasswordResetReq": {
        "description": "Model for Password Reset Request",
        "examples": [
          {
            "password": "newpassword"
          }
        ],
        "properties": {
          "password": {
            "description": "New password",
            "example": "newpassword",
            "minLength": 8,
            "type": "string"
          }
        },
        "required": [
          "password"
        ],
        "title": "Password Reset Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "24ig9uh9evw2p"
        }
      },
      "Plugin": {
        "description": "Model for Plugin",
        "examples": [
          {
            "id": "nc_tljibbzcyjrhcc",
            "title": "S3",
            "description": "Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance.",
            "active": true,
            "rating": null,
            "version": "0.0.1",
            "docs": null,
            "status": "install",
            "status_details": null,
            "logo": "plugins/s3.png",
            "icon": null,
            "tags": "Storage",
            "category": "Storage",
            "input_schema": "{\"title\":\"Configure Amazon S3\",\"items\":[{\"key\":\"bucket\",\"label\":\"Bucket Name\",\"placeholder\":\"Bucket Name\",\"type\":\"SingleLineText\",\"required\":true},{\"key\":\"region\",\"label\":\"Region\",\"placeholder\":\"Region\",\"type\":\"SingleLineText\",\"required\":true},{\"key\":\"access_key\",\"label\":\"Access Key\",\"placeholder\":\"Access Key\",\"type\":\"SingleLineText\",\"required\":true},{\"key\":\"access_secret\",\"label\":\"Access Secret\",\"placeholder\":\"Access Secret\",\"type\":\"Password\",\"required\":true}],\"actions\":[{\"label\":\"Test\",\"placeholder\":\"Test\",\"key\":\"test\",\"actionType\":\"TEST\",\"type\":\"Button\"},{\"label\":\"Save\",\"placeholder\":\"Save\",\"key\":\"save\",\"actionType\":\"SUBMIT\",\"type\":\"Button\"}],\"msgOnInstall\":\"Successfully installed and attachment will be stored in AWS S3\",\"msgOnUninstall\":\"\"}",
            "input": "{\"bucket\":\"my-bucket\",\"region\":\"us-west-004\",\"access_key\":\"redacted\",\"access_secret\":\"redacted\"}",
            "creator": null,
            "creator_website": null,
            "price": null
          }
        ],
        "title": "Plugin Model",
        "type": "object",
        "properties": {
          "active": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is plguin active?"
          },
          "category": {
            "type": "string",
            "description": "Plugin Category",
            "example": "Storage"
          },
          "creator": {
            "type": "string",
            "description": "Plugin Creator (Not in use)"
          },
          "creator_website": {
            "type": "string",
            "description": "Plugin Creator website (Not in use)"
          },
          "description": {
            "type": "string",
            "description": "Plugin Description",
            "example": "Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance."
          },
          "docs": {
            "type": "string",
            "description": "Documentation of plugin (Not in use)"
          },
          "icon": {
            "type": "string",
            "description": "Plugin Icon (Not in use)"
          },
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "input": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringOrNull"
              },
              {
                "type": "integer"
              }
            ],
            "description": "Plugin Input"
          },
          "input_schema": {
            "type": "string",
            "description": "Plugin Input Schema\n"
          },
          "logo": {
            "type": "string",
            "description": "Plugin logo",
            "example": "plugins/s3.png"
          },
          "price": {
            "type": "string",
            "description": "Plugin Price (Not in use)"
          },
          "rating": {
            "type": "number",
            "description": "Plugin Rating (Not in use)"
          },
          "status": {
            "type": "string",
            "description": "Plugin Status",
            "example": "install"
          },
          "status_details": {
            "type": "string",
            "description": "Not in use"
          },
          "tags": {
            "type": "string",
            "description": "Plugin tags",
            "example": "Storage"
          },
          "title": {
            "type": "string",
            "description": "Plugin Title"
          },
          "version": {
            "type": "string",
            "description": "Plugin Version",
            "example": "0.0.1"
          }
        },
        "x-stoplight": {
          "id": "xxoy0oe5kab93"
        }
      },
      "PluginReq": {
        "description": "Model for Plugin Request",
        "examples": [
          {
            "active": 0,
            "input": "{\"bucket\":\"my-bucket\",\"region\":\"us-west-004\",\"access_key\":\"redacted\",\"access_secret\":\"redacted\"}"
          }
        ],
        "title": "Plugin Reqeust",
        "type": "object",
        "x-stoplight": {
          "id": "qcriv4xl88hyu"
        },
        "properties": {
          "active": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is Plugin Active?"
          },
          "input": {
            "description": "Plugin Input",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "PluginTestReq": {
        "description": "Model for Plugin Test Request",
        "examples": [
          {
            "title": "Plugin Foo",
            "input": "{\"bucket\":\"my-bucket\",\"region\":\"us-west-004\",\"access_key\":\"redacted\",\"access_secret\":\"redacted\"}",
            "category": "Email"
          }
        ],
        "title": "Plugin Test Request Model",
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 45,
            "type": "string",
            "description": "Plugin Title"
          },
          "input": {
            "oneOf": [
              {
                "type": "string",
                "description": "Plugin Input as JSON string"
              },
              {
                "description": "Plugin Input",
                "type": "object"
              }
            ]
          },
          "category": {
            "x-stoplight": {
              "id": "rg3i3ov9rs6d0"
            },
            "type": "string",
            "example": "Email"
          }
        },
        "required": [
          "title",
          "input",
          "category"
        ],
        "x-stoplight": {
          "id": "zrvjtpfx9wc54"
        }
      },
      "Base": {
        "description": "Model for Base",
        "examples": [
          {
            "sources": [
              {
                "alias": "string",
                "config": null,
                "enabled": true,
                "id": "string",
                "inflection_column": "camelize",
                "inflection_table": "camelize",
                "is_meta": true,
                "order": 1,
                "base_id": "string",
                "type": "mysql2",
                "updated_at": "2023-03-01 14:27:36"
              }
            ],
            "color": "#24716E",
            "created_at": "2023-03-01 14:27:36",
            "deleted": true,
            "description": "This is my base description",
            "id": "p_124hhlkbeasewh",
            "is_meta": true,
            "meta": {},
            "order": 0,
            "prefix": "nc_vm5q__",
            "status": "string",
            "title": "my-base"
          }
        ],
        "title": "Base Model",
        "type": "object",
        "properties": {
          "sources": {
            "description": "List of source models",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Source"
            }
          },
          "color": {
            "description": "Primary Theme Color",
            "example": "#24716E",
            "type": "string"
          },
          "deleted": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is the base deleted"
          },
          "description": {
            "description": "Base Description",
            "example": "This is my base description",
            "type": "string"
          },
          "id": {
            "description": "Unique Base ID",
            "example": "p_124hhlkbeasewh",
            "type": "string"
          },
          "is_meta": {
            "$ref": "#/components/schemas/Bool"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta Info such as theme colors"
          },
          "order": {
            "description": "The order in base list",
            "type": "number"
          },
          "prefix": {
            "description": "Base prefix. Used in XCDB only.",
            "example": "nc_vm5q__",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "database",
              "documentation",
              "dashboard"
            ]
          },
          "linked_db_projects": {
            "description": "List of linked Database Projects that this base has access to (only used in Dashboard bases so far)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Base"
            }
          },
          "status": {
            "type": "string"
          },
          "title": {
            "description": "Base Title",
            "example": "my-base",
            "type": "string"
          }
        },
        "x-stoplight": {
          "id": "t8uouhop01ndi"
        }
      },
      "ProjectList": {
        "description": "Model for Base List",
        "examples": [
          {
            "list": [
              {
                "sources": [
                  {
                    "alias": "string",
                    "config": null,
                    "created_at": "2023-03-01 14:27:36",
                    "enabled": true,
                    "id": "string",
                    "inflection_column": "camelize",
                    "inflection_table": "camelize",
                    "is_meta": true,
                    "order": 1,
                    "base_id": "string",
                    "type": "mysql2",
                    "updated_at": "2023-03-01 14:27:36"
                  }
                ],
                "color": "#24716E",
                "created_at": "2023-03-01 14:27:36",
                "deleted": true,
                "description": "This is my base description",
                "id": "p_124hhlkbeasewh",
                "is_meta": true,
                "meta": {},
                "order": 0,
                "prefix": "nc_vm5q__",
                "status": "string",
                "title": "my-base",
                "updated_at": "2023-03-01 14:27:36"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "Base List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "description": "List of Base Models",
            "minItems": 1,
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/components/schemas/Base"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "description": "Pagination Info"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ],
        "x-stoplight": {
          "id": "fr75wwwzt951h"
        }
      },
      "ProjectReq": {
        "description": "Model for Base Request",
        "examples": [
          {
            "sources": [
              {
                "alias": "My Source",
                "config": null,
                "inflection_column": "camelize",
                "inflection_table": "camelize",
                "is_meta": true,
                "type": "mysql"
              }
            ],
            "color": "#24716E",
            "description": "This is my base description",
            "title": "My Base"
          }
        ],
        "properties": {
          "sources": {
            "description": "Array of Bases",
            "items": {
              "$ref": "#/components/schemas/BaseReq"
            },
            "type": "array"
          },
          "color": {
            "description": "Primary Theme Color",
            "example": "#24716E",
            "maxLength": 50,
            "type": "string"
          },
          "description": {
            "description": "Base Description",
            "example": "This is my base description",
            "type": "string"
          },
          "title": {
            "description": "Base Title",
            "example": "My Base",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Base Status",
            "example": "locked"
          },
          "type": {
            "type": "string",
            "enum": [
              "database",
              "documentation",
              "dashboard"
            ]
          },
          "linked_db_project_ids": {
            "description": "List of Linked Database Base IDs (only used for Dashboard Projects so far)",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "title"
        ],
        "title": "Base Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "f5k929rrvfy92"
        }
      },
      "ProjectUpdateReq": {
        "description": "Model for Base Update Request",
        "x-stoplight": {
          "id": "0fq3a94qjgb5f"
        },
        "examples": [
          {
            "color": "#24716E",
            "meta": null,
            "title": "My Base"
          }
        ],
        "title": "Base Update Request Model",
        "type": "object",
        "properties": {
          "color": {
            "description": "Primary Theme Color",
            "example": "#24716E",
            "maxLength": 50,
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Base Meta",
            "x-stoplight": {
              "id": "m05w9sbwqgul3"
            }
          },
          "title": {
            "description": "Base Title",
            "example": "My Base",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Base Status",
            "example": "locked"
          },
          "linked_db_project_ids": {
            "description": "List of Linked Database Base IDs (only used for Dashboard Projects so far)",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProjectUserReq": {
        "description": "Model for Base User Request",
        "examples": [
          {
            "email": "user@example.com",
            "roles": "owner"
          }
        ],
        "title": "Base User Request Model",
        "type": "object",
        "properties": {
          "email": {
            "format": "email",
            "type": "string",
            "description": "Base User Email"
          },
          "roles": {
            "enum": [
              "no-access",
              "commenter",
              "editor",
              "guest",
              "owner",
              "viewer",
              "creator"
            ],
            "type": "string",
            "description": "Base User Role"
          }
        },
        "required": [
          "email",
          "roles"
        ],
        "x-stoplight": {
          "id": "3bvgqk9tn16ur"
        }
      },
      "ProjectUserMetaReq": {
        "description": "Model for Base User Meta Request",
        "examples": [
          {
            "starred": true,
            "order": 1,
            "hidden": true
          }
        ],
        "title": "Base User Meta Request Model",
        "type": "object",
        "properties": {
          "starred": {
            "$ref": "#/components/schemas/Bool",
            "description": "Star Base"
          },
          "order": {
            "type": "number",
            "description": "The order among the bases",
            "example": 1
          },
          "hidden": {
            "$ref": "#/components/schemas/Bool"
          }
        }
      },
      "Rollup": {
        "description": "Model for Rollup",
        "examples": [
          {
            "id": "rl_kc19pbdkij8wly",
            "fk_column_id": "cl_588b63mneri2yi",
            "fk_relation_column_id": "cl_c09q6eu6hsvn4s",
            "fk_rollup_column_id": "cl_m62i1vyl23n8co",
            "rollup_function": "count"
          }
        ],
        "title": "Rollup Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Column"
          },
          "fk_relation_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign to Relation Column"
          },
          "fk_rollup_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign to Rollup Column"
          },
          "rollup_function": {
            "type": "string",
            "description": "Rollup Function",
            "example": "count",
            "enum": [
              "count",
              "min",
              "max",
              "avg",
              "countDistinct",
              "sumDistinct",
              "avgDistinct"
            ]
          }
        },
        "x-stoplight": {
          "id": "imknmkksc8bqk"
        }
      },
      "RollupColumnReq": {
        "description": "Model for Rollup Column Request",
        "examples": [
          {
            "fk_relation_column_id": "cl_c09q6eu6hsvn4s",
            "fk_rollup_column_id": "cl_m62i1vyl23n8co",
            "title": "Rollup Column",
            "rollup_function": "avg",
            "uidt": "Rollup"
          }
        ],
        "title": "Rollup Column Request Model",
        "type": "object",
        "properties": {
          "fk_relation_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Relation Column"
          },
          "fk_rollup_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Rollup Column"
          },
          "title": {
            "maxLength": 255,
            "type": "string",
            "description": "Rollup Column Title"
          },
          "rollup_function": {
            "enum": [
              "avg",
              "avgDistinct",
              "count",
              "countDistinct",
              "max",
              "min",
              "sum",
              "sumDistinct"
            ],
            "type": "string",
            "description": "Rollup Function"
          },
          "uidt": {
            "enum": [
              "Rollup"
            ],
            "type": "string",
            "description": "UI DataType"
          }
        },
        "x-stoplight": {
          "id": "ayjjv1pfxmvlv"
        }
      },
      "SelectOption": {
        "description": "Model for SelectOption",
        "examples": [
          {
            "id": "sl_hvfeuagqtlzzbk",
            "title": "Option A",
            "fk_column_id": "cl_35zmvi2tezfipw",
            "color": "#cfdffe",
            "order": 1
          }
        ],
        "title": "SelectOption Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "title": {
            "type": "string",
            "description": "Option Title\n",
            "example": "Option A"
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Column"
          },
          "color": {
            "type": "string",
            "description": "Option Color",
            "example": "#cfdffe"
          },
          "order": {
            "type": "number",
            "description": "The order among the options",
            "example": 1
          }
        },
        "x-stoplight": {
          "id": "y9gglydcl3zjr"
        }
      },
      "SelectOptions": {
        "description": "Model for SelectOptions",
        "examples": [
          {
            "options": [
              {
                "id": "sl_hvfeuagqtlzzbk",
                "title": "Option A",
                "fk_column_id": "cl_35zmvi2tezfipw",
                "color": "#cfdffe",
                "order": 1
              }
            ]
          }
        ],
        "title": "SelectOptions Model",
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "description": "Array of select options",
            "items": {
              "$ref": "#/components/schemas/SelectOption"
            }
          }
        },
        "required": [
          "options"
        ],
        "x-stoplight": {
          "id": "3rx8jyy2ufbc3"
        }
      },
      "SharedBaseReq": {
        "description": "Model for Shared Base Request",
        "examples": [
          {
            "password": "password123",
            "roles": "editor"
          }
        ],
        "title": "Shared Base Request Model",
        "type": "object",
        "properties": {
          "password": {
            "minLength": 8,
            "type": "string",
            "description": "Password to protect the base",
            "example": "password123"
          },
          "roles": {
            "enum": [
              "commenter",
              "editor",
              "viewer"
            ],
            "type": "string",
            "description": "The role given the target user",
            "example": "editor"
          }
        },
        "x-stoplight": {
          "id": "4jvab8fa8ibxv"
        }
      },
      "SharedView": {
        "$ref": "#/components/schemas/View",
        "description": "Model for Shared View",
        "title": "SharedView",
        "examples": [
          {
            "source_id": "ds_g4ccx6e77h1dmi",
            "created_at": "2023-03-02 17:46:31",
            "fk_model_id": "md_mhs9z4r2ak98x0",
            "id": "vw_lg052cnc1c26kf",
            "is_default": 1,
            "lock_type": "collaborative",
            "meta": {},
            "order": 1,
            "password": null,
            "base_id": "p_xm3thidrblw4n7",
            "show": 1,
            "show_system_fields": null,
            "title": "Sheet-1",
            "type": 3,
            "updated_at": "2023-03-02 17:46:31",
            "uuid": null,
            "view": {
              "source_id": "ds_g4ccx6e77h1dmi",
              "created_at": "2023-03-02 17:46:31",
              "fk_view_id": "vw_lg052cnc1c26kf",
              "meta": null,
              "base_id": "p_xm3thidrblw4n7",
              "row_height": null,
              "updated_at": "2023-03-02 17:46:31",
              "uuid": null
            }
          }
        ],
        "x-stoplight": {
          "id": "gagdto3i3c0fb"
        }
      },
      "SharedViewList": {
        "description": "Model for Shared View List",
        "examples": [
          {
            "list": [
              {
                "source_id": "ds_g4ccx6e77h1dmi",
                "created_at": "2023-03-02 17:46:31",
                "fk_model_id": "md_mhs9z4r2ak98x0",
                "id": "vw_lg052cnc1c26kf",
                "is_default": 1,
                "lock_type": "collaborative",
                "meta": {},
                "order": 1,
                "password": null,
                "base_id": "p_xm3thidrblw4n7",
                "show": 1,
                "show_system_fields": null,
                "title": "Sheet-1",
                "type": 3,
                "updated_at": "2023-03-02 17:46:31",
                "uuid": null,
                "view": {
                  "source_id": "ds_g4ccx6e77h1dmi",
                  "created_at": "2023-03-02 17:46:31",
                  "fk_view_id": "vw_lg052cnc1c26kf",
                  "meta": null,
                  "base_id": "p_xm3thidrblw4n7",
                  "row_height": null,
                  "updated_at": "2023-03-02 17:46:31",
                  "uuid": null
                }
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "Shared View List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "minItems": 1,
            "type": "array",
            "uniqueItems": true,
            "description": "List of shared view objects",
            "items": {
              "$ref": "#/components/schemas/SharedView"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "description": "Paginated Info"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ],
        "x-stoplight": {
          "id": "5gnbbmgal3om3"
        }
      },
      "SharedViewReq": {
        "description": "Model for Shared View Request",
        "examples": [
          {
            "meta": {},
            "password": "123456789"
          }
        ],
        "title": "Shared View Request Model",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta data passing to Shared View such as if download is allowed or not."
          },
          "password": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Password to restrict access"
          }
        },
        "x-stoplight": {
          "id": "hbj6j87gyi7ap"
        }
      },
      "SignInReq": {
        "description": "Model for Signin Request",
        "examples": [
          {
            "email": "user@example.com",
            "password": "string"
          }
        ],
        "properties": {
          "email": {
            "description": "Email address of the user",
            "format": "email",
            "type": "string"
          },
          "password": {
            "description": "Password of the user",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "title": "Signin Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "efb2gvnypydy9"
        }
      },
      "SignUpReq": {
        "description": "Model for Signup Request",
        "examples": [
          {
            "email": "user@example.com",
            "password": "password123456789",
            "firstname": "Alice",
            "lastname": "Smith",
            "token": null,
            "ignore_subscribe": 0
          }
        ],
        "title": "Signup Request Model",
        "type": "object",
        "properties": {
          "email": {
            "description": "Email address of the user",
            "example": "user@example.com",
            "format": "email",
            "type": "string"
          },
          "password": {
            "description": "Password of the user",
            "example": "password123456789",
            "minLength": 8,
            "type": "string"
          },
          "firstname": {
            "$ref": "#/components/schemas/StringOrNull",
            "x-stoplight": {
              "id": "lblivgs8wcsm1"
            }
          },
          "lastname": {
            "$ref": "#/components/schemas/StringOrNull",
            "x-stoplight": {
              "id": "d4341r35tucq3"
            }
          },
          "token": {
            "$ref": "#/components/schemas/StringOrNull",
            "x-stoplight": {
              "id": "otw9jgnr9n7c4"
            },
            "description": "Sign Up Token. Used for invitation."
          },
          "ignore_subscribe": {
            "$ref": "#/components/schemas/Bool",
            "x-stoplight": {
              "id": "g7ge6mc6vdsds"
            },
            "description": "Ignore Subscription"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "x-stoplight": {
          "id": "6ia1chyii9w48"
        }
      },
      "Sort": {
        "description": "Model for Sort",
        "examples": [
          {
            "id": "so_xd4t51uv60ghzl",
            "fk_column_id": "cl_l11b769pe2j1ce",
            "fk_model_id": "md_ehn5izr99m7d45",
            "source_id": "ds_3l9qx8xqksenrl",
            "direction": "desc",
            "order": 1,
            "base_id": "p_9sx43moxhqtjm3"
          }
        ],
        "title": "Sort Model",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID"
          },
          "fk_column_id": {
            "$ref": "#/components/schemas/Id"
          },
          "fk_model_id": {
            "$ref": "#/components/schemas/Id"
          },
          "source_id": {
            "type": "string",
            "description": "Source ID",
            "example": "ds_3l9qx8xqksenrl",
            "readOnly": true
          },
          "direction": {
            "type": "string",
            "description": "Sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "example": "desc"
          },
          "order": {
            "type": "number",
            "example": 1
          },
          "base_id": {
            "type": "string",
            "description": "Base ID",
            "example": "p_9sx43moxhqtjm3",
            "readOnly": true
          }
        },
        "x-stoplight": {
          "id": "25fm97zsmwf6h"
        }
      },
      "SortList": {
        "description": "Model for Sort List",
        "examples": [
          {
            "list": [
              {
                "id": "so_xd4t51uv60ghzl",
                "fk_column_id": "cl_l11b769pe2j1ce",
                "fk_model_id": "md_ehn5izr99m7d45",
                "source_id": "ds_3l9qx8xqksenrl",
                "direction": "desc",
                "order": 1,
                "base_id": "p_9sx43moxhqtjm3"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "Sort List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "type": "array",
            "x-stoplight": {
              "id": "gjqqc8ciqg947"
            },
            "description": "List of Sort Objects",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "x-stoplight": {
                "id": "usnfa1kbovpmb"
              }
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "x-stoplight": {
              "id": "i75wcejfp5mnq"
            }
          }
        },
        "required": [
          "list",
          "pageInfo"
        ],
        "x-stoplight": {
          "id": "us9qfo1go142f"
        }
      },
      "SortReq": {
        "description": "Model for Sort Request",
        "examples": [
          {
            "direction": "asc",
            "fk_column_id": "cl_l11b769pe2j1ce"
          }
        ],
        "minProperties": 1,
        "title": "Sort Request Model",
        "type": "object",
        "properties": {
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Foreign Key to Column"
          },
          "direction": {
            "description": "Sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          }
        },
        "x-stoplight": {
          "id": "8v8qzwm3w4v11"
        }
      },
      "StringOrNull": {
        "description": "Model for StringOrNull",
        "examples": [
          "string"
        ],
        "oneOf": [
          {
            "maxLength": 255,
            "type": "string"
          },
          {
            "type": "null"
          }
        ],
        "title": "StringOrNull Model",
        "x-stoplight": {
          "id": "p1g7xrgdsn540"
        }
      },
      "StringOrNullOrBooleanOrNumber": {
        "description": "Model for StringOrNullOrBooleanOrNumber",
        "examples": [
          "string"
        ],
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "null"
          },
          {
            "type": "boolean"
          },
          {
            "type": "number"
          }
        ],
        "title": "StringOrNullOrBooleanOrNumber Model"
      },
      "Table": {
        "description": "Model for Table",
        "examples": [
          {
            "source_id": "ds_g4ccx6e77h1dmi",
            "columns": [
              {
                "ai": 0,
                "au": 0,
                "source_id": "ds_g4ccx6e77h1dmi",
                "cc": "",
                "cdf": "CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP",
                "clen": null,
                "column_name": "updated_at",
                "cop": "4",
                "created_at": "2023-03-02 17:04:06",
                "csn": null,
                "ct": "timestamp",
                "deleted": null,
                "dt": "timestamp",
                "dtx": "specificType",
                "dtxp": "0",
                "dtxs": null,
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "id": "cl_m4wkaqgqqjzoeh",
                "meta": null,
                "np": null,
                "ns": null,
                "order": 4,
                "pk": 0,
                "base_id": "p_xm3thidrblw4n7",
                "pv": null,
                "rqd": 0,
                "system": 0,
                "title": "UpdatedAt",
                "uidt": "DateTime",
                "un": 0,
                "unique": 0,
                "updated_at": "2023-03-02 17:04:06",
                "validate": null,
                "virtual": null
              },
              {
                "ai": 0,
                "au": 0,
                "source_id": "ds_g4ccx6e77h1dmi",
                "cc": "",
                "cdf": "CURRENT_TIMESTAMP",
                "clen": null,
                "column_name": "created_at",
                "cop": "3",
                "created_at": "2023-03-02 17:04:06",
                "csn": null,
                "ct": "timestamp",
                "deleted": null,
                "dt": "timestamp",
                "dtx": "specificType",
                "dtxp": "0",
                "dtxs": null,
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "id": "cl_jpl0qu4gj4rexq",
                "meta": null,
                "np": null,
                "ns": null,
                "order": 3,
                "pk": 0,
                "base_id": "p_xm3thidrblw4n7",
                "pv": null,
                "rqd": 0,
                "system": 0,
                "title": "CreatedAt",
                "uidt": "DateTime",
                "un": 0,
                "unique": 0,
                "updated_at": "2023-03-02 17:04:06",
                "validate": null,
                "virtual": null
              },
              {
                "ai": 0,
                "au": 0,
                "source_id": "ds_g4ccx6e77h1dmi",
                "cc": "",
                "cdf": null,
                "clen": "45",
                "column_name": "title",
                "cop": "2",
                "created_at": "2023-03-02 17:04:06",
                "csn": "utf8mb4",
                "ct": "varchar(45)",
                "deleted": null,
                "dt": "varchar",
                "dtx": "specificType",
                "dtxp": "45",
                "dtxs": null,
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "id": "cl_c5knoi4xs4sfpt",
                "meta": null,
                "np": null,
                "ns": null,
                "order": 2,
                "pk": 0,
                "base_id": "p_xm3thidrblw4n7",
                "pv": 1,
                "rqd": 0,
                "system": 0,
                "title": "Title",
                "uidt": "SingleLineText",
                "un": 0,
                "unique": 0,
                "updated_at": "2023-03-02 17:04:06",
                "validate": null,
                "virtual": null
              },
              {
                "ai": 1,
                "au": 0,
                "source_id": "ds_g4ccx6e77h1dmi",
                "cc": "",
                "cdf": null,
                "clen": null,
                "column_name": "id",
                "cop": "1",
                "created_at": "2023-03-02 17:04:06",
                "csn": null,
                "ct": "int unsigned",
                "deleted": null,
                "dt": "int",
                "dtx": "specificType",
                "dtxp": "",
                "dtxs": "0",
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "id": "cl_phvuuwjrzcdo0g",
                "meta": null,
                "np": "10",
                "ns": "0",
                "order": 1,
                "pk": 1,
                "base_id": "p_xm3thidrblw4n7",
                "pv": null,
                "rqd": 1,
                "system": 0,
                "title": "Id",
                "uidt": "ID",
                "un": 1,
                "unique": 0,
                "updated_at": "2023-03-02 17:04:06",
                "validate": null,
                "virtual": null
              }
            ],
            "columnsById": {
              "cl_c5knoi4xs4sfpt": {
                "ai": 0,
                "au": 0,
                "source_id": "ds_g4ccx6e77h1dmi",
                "cc": "",
                "cdf": null,
                "clen": "45",
                "column_name": "title",
                "cop": "2",
                "created_at": "2023-03-02 17:04:06",
                "csn": "utf8mb4",
                "ct": "varchar(45)",
                "deleted": null,
                "dt": "varchar",
                "dtx": "specificType",
                "dtxp": "45",
                "dtxs": null,
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "id": "cl_c5knoi4xs4sfpt",
                "meta": null,
                "np": null,
                "ns": null,
                "order": 2,
                "pk": 0,
                "base_id": "p_xm3thidrblw4n7",
                "pv": 1,
                "rqd": 0,
                "system": 0,
                "title": "Title",
                "uidt": "SingleLineText",
                "un": 0,
                "unique": 0,
                "updated_at": "2023-03-02 17:04:06",
                "validate": null,
                "virtual": null
              },
              "cl_jpl0qu4gj4rexq": {
                "ai": 0,
                "au": 0,
                "source_id": "ds_g4ccx6e77h1dmi",
                "cc": "",
                "cdf": "CURRENT_TIMESTAMP",
                "clen": null,
                "column_name": "created_at",
                "cop": "3",
                "created_at": "2023-03-02 17:04:06",
                "csn": null,
                "ct": "timestamp",
                "deleted": null,
                "dt": "timestamp",
                "dtx": "specificType",
                "dtxp": "0",
                "dtxs": null,
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "id": "cl_jpl0qu4gj4rexq",
                "meta": null,
                "np": null,
                "ns": null,
                "order": 3,
                "pk": 0,
                "base_id": "p_xm3thidrblw4n7",
                "pv": null,
                "rqd": 0,
                "system": 0,
                "title": "CreatedAt",
                "uidt": "DateTime",
                "un": 0,
                "unique": 0,
                "updated_at": "2023-03-02 17:04:06",
                "validate": null,
                "virtual": null
              },
              "cl_m4wkaqgqqjzoeh": {
                "ai": 0,
                "au": 0,
                "source_id": "ds_g4ccx6e77h1dmi",
                "cc": "",
                "cdf": "CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP",
                "clen": null,
                "column_name": "updated_at",
                "cop": "4",
                "created_at": "2023-03-02 17:04:06",
                "csn": null,
                "ct": "timestamp",
                "deleted": null,
                "dt": "timestamp",
                "dtx": "specificType",
                "dtxp": "0",
                "dtxs": null,
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "id": "cl_m4wkaqgqqjzoeh",
                "meta": null,
                "np": null,
                "ns": null,
                "order": 4,
                "pk": 0,
                "base_id": "p_xm3thidrblw4n7",
                "pv": null,
                "rqd": 0,
                "system": 0,
                "title": "UpdatedAt",
                "uidt": "DateTime",
                "un": 0,
                "unique": 0,
                "updated_at": "2023-03-02 17:04:06",
                "validate": null,
                "virtual": null
              },
              "cl_phvuuwjrzcdo0g": {
                "ai": 1,
                "au": 0,
                "source_id": "ds_g4ccx6e77h1dmi",
                "cc": "",
                "cdf": null,
                "clen": null,
                "column_name": "id",
                "cop": "1",
                "created_at": "2023-03-02 17:04:06",
                "csn": null,
                "ct": "int unsigned",
                "deleted": null,
                "dt": "int",
                "dtx": "specificType",
                "dtxp": "",
                "dtxs": "0",
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "id": "cl_phvuuwjrzcdo0g",
                "meta": null,
                "np": "10",
                "ns": "0",
                "order": 1,
                "pk": 1,
                "base_id": "p_xm3thidrblw4n7",
                "pv": null,
                "rqd": 1,
                "system": 0,
                "title": "Id",
                "uidt": "ID",
                "un": 1,
                "unique": 0,
                "updated_at": "2023-03-02 17:04:06",
                "validate": null,
                "virtual": null
              }
            },
            "created_at": "2023-03-02 17:04:06",
            "deleted": null,
            "enabled": 1,
            "id": "md_rsu68aqjsbyqtl",
            "meta": null,
            "mm": 0,
            "order": 1,
            "pinned": null,
            "base_id": "p_xm3thidrblw4n7",
            "schema": null,
            "table_name": "nc_vm5q___Table1",
            "tags": null,
            "title": "Table1",
            "type": "table",
            "updated_at": "2023-03-02 17:04:08",
            "views": [
              {
                "_ptn": "Table1",
                "_tn": "Table1",
                "source_id": "ds_g4ccx6e77h1dmi",
                "created_at": "2023-03-02 17:04:06",
                "disabled": {
                  "commenter": false,
                  "creator": false,
                  "editor": false,
                  "guest": false,
                  "owner": false,
                  "viewer": false
                },
                "fk_model_id": "md_rsu68aqjsbyqtl",
                "id": "vw_p2jcatxz4mvcfw",
                "is_default": 1,
                "lock_type": "collaborative",
                "meta": {},
                "order": 1,
                "password": null,
                "base_id": "p_xm3thidrblw4n7",
                "ptn": "nc_vm5q___Table1",
                "ptype": "table",
                "show": 1,
                "show_system_fields": null,
                "table_meta": null,
                "title": "Table1",
                "tn": "Table1",
                "type": 3,
                "updated_at": "2023-03-02 17:04:06",
                "uuid": null,
                "view": {
                  "source_id": "ds_g4ccx6e77h1dmi",
                  "created_at": "2023-03-02 17:04:06",
                  "fk_view_id": "vw_p2jcatxz4mvcfw",
                  "meta": null,
                  "base_id": "p_xm3thidrblw4n7",
                  "row_height": null,
                  "updated_at": "2023-03-02 17:04:06",
                  "uuid": null
                }
              }
            ]
          }
        ],
        "title": "Table Model",
        "type": "object",
        "properties": {
          "source_id": {
            "description": "Unique Source ID",
            "type": "string"
          },
          "columns": {
            "description": "The columns included in this table",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Column"
            }
          },
          "columnsById": {
            "description": "Column Models grouped by IDs",
            "type": "object"
          },
          "deleted": {
            "$ref": "#/components/schemas/Bool"
          },
          "enabled": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this table enabled?"
          },
          "id": {
            "description": "Unique Table ID",
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta Data"
          },
          "mm": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this table used for M2M"
          },
          "order": {
            "description": "The order of the list of tables",
            "type": "number"
          },
          "pinned": {
            "$ref": "#/components/schemas/Bool",
            "description": "Currently not in use"
          },
          "base_id": {
            "description": "Unique Base ID",
            "type": "string"
          },
          "table_name": {
            "description": "Table Name. Prefix will be added for XCDB bases.",
            "type": "string"
          },
          "tags": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Currently not in use"
          },
          "title": {
            "description": "Table Title",
            "type": "string"
          },
          "type": {
            "description": "Table Type",
            "type": "string"
          }
        },
        "required": [
          "table_name",
          "title"
        ],
        "x-stoplight": {
          "id": "dkfoyjcny5am9"
        }
      },
      "TableList": {
        "description": "Model for Table List",
        "examples": [
          {
            "list": [
              {
                "alias": "string",
                "source_id": "string",
                "column": [
                  {
                    "alias": "string",
                    "auto_increment": true,
                    "auto_update_timestamp": true,
                    "source_id": "string",
                    "character_maximum_length": "string",
                    "character_set_name": "string",
                    "colOptions": {
                      "deleted": "string",
                      "dr": "string",
                      "fk_child_column_id": "string",
                      "fk_column_id": "string",
                      "fk_index_name": "string",
                      "fk_mm_child_column_id": "string",
                      "fk_mm_model_id": "string",
                      "fk_mm_parent_column_id": "string",
                      "fk_parent_column_id": "string",
                      "id": "string",
                      "order": "string",
                      "type": "string",
                      "ur": "string",
                      "virtual": true
                    },
                    "column_comment": "string",
                    "column_default": "string",
                    "column_ordinal_position": "string",
                    "column_type": "string",
                    "data_type": "string",
                    "data_type_x": "string",
                    "data_type_x_precision": "string",
                    "data_type_x_scale": "string",
                    "deleted": true,
                    "fk_model_id": "string",
                    "id": "string",
                    "numeric_precision": "string",
                    "numeric_scale": "string",
                    "order": 0,
                    "primary_key": true,
                    "primary_value": true,
                    "rqd": "string",
                    "title": "string",
                    "ui_data_type": "string",
                    "un": "string",
                    "unique": true,
                    "visible": true
                  }
                ],
                "columnByIds": {},
                "deleted": true,
                "enabled": true,
                "id": "string",
                "order": 0,
                "parent_id": "string",
                "pinned": true,
                "base_id": "string",
                "show_as": "string",
                "tags": "string",
                "title": "string",
                "type": "string"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "Table List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "minItems": 1,
            "type": "array",
            "uniqueItems": true,
            "description": "List of table objects",
            "items": {
              "$ref": "#/components/schemas/Table"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "description": "Paginated Info"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ],
        "x-stoplight": {
          "id": "urwk2euatlkjl"
        }
      },
      "TableReq": {
        "description": "Model for Table Request",
        "examples": [
          {
            "columns": [
              {
                "ai": false,
                "altered": 1,
                "cdf": "CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP",
                "ck": false,
                "clen": 45,
                "column_name": "updated_at",
                "ct": "varchar(45)",
                "dt": "timestamp",
                "dtx": "specificType",
                "dtxp": "",
                "dtxs": "",
                "np": null,
                "nrqd": true,
                "ns": null,
                "pk": false,
                "rqd": false,
                "title": "UpdatedAt",
                "uicn": "",
                "uidt": "DateTime",
                "uip": "",
                "un": false
              },
              {
                "ai": false,
                "altered": 1,
                "cdf": "CURRENT_TIMESTAMP",
                "ck": false,
                "clen": 45,
                "column_name": "created_at",
                "ct": "varchar(45)",
                "dt": "timestamp",
                "dtx": "specificType",
                "dtxp": "",
                "dtxs": "",
                "np": null,
                "nrqd": true,
                "ns": null,
                "pk": false,
                "rqd": false,
                "title": "CreatedAt",
                "uicn": "",
                "uidt": "DateTime",
                "uip": "",
                "un": false
              },
              {
                "ai": false,
                "altered": 1,
                "cdf": null,
                "ck": false,
                "clen": 45,
                "column_name": "title",
                "ct": "varchar(45)",
                "dt": "varchar",
                "dtx": "specificType",
                "dtxp": "45",
                "dtxs": "",
                "np": null,
                "nrqd": true,
                "ns": null,
                "pk": false,
                "rqd": false,
                "title": "Title",
                "uicn": "",
                "uidt": "SingleLineText",
                "uip": "",
                "un": false
              },
              {
                "ai": true,
                "altered": 1,
                "cdf": null,
                "ck": false,
                "clen": null,
                "column_name": "id",
                "ct": "int(11)",
                "dt": "int",
                "dtx": "integer",
                "dtxp": "11",
                "dtxs": "",
                "np": 11,
                "nrqd": false,
                "ns": 0,
                "pk": true,
                "rqd": true,
                "title": "Id",
                "uicn": "",
                "uidt": "ID",
                "uip": "",
                "un": true
              }
            ],
            "table_name": "Sheet-1",
            "title": "Sheet-1"
          }
        ],
        "properties": {
          "columns": {
            "description": "The column models in this table",
            "items": {
              "$ref": "#/components/schemas/NormalColumnRequest"
            },
            "type": "array"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "the meta data for this table"
          },
          "order": {
            "description": "The order of table list",
            "example": 1,
            "type": "number"
          },
          "table_name": {
            "description": "Table name",
            "example": "my_table",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "description": "Table title",
            "example": "My Table",
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        },
        "required": [
          "columns",
          "table_name"
        ],
        "title": "Table Request Model",
        "type": "object",
        "x-stoplight": {
          "id": "sv3junrrevn31"
        }
      },
      "User": {
        "description": "Model for User",
        "examples": [
          {
            "id": "142",
            "user_name": "jaysmith",
            "display_name": "Jay Smith",
            "email": "jay.smith@gmail.com",
            "emailVerified": true,
            "roles": "org-level-creator,super",
            "bio": "foo",
            "location": "Istanbul",
            "created_at": "2019-08-24",
            "avatar": "https://dummyimage.com/300.png"
          }
        ],
        "title": "User Model",
        "type": "object",
        "x-internal": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the given user."
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "roles": {
            "type": "string"
          },
          "email_verified": {
            "type": "boolean",
            "description": "Set to true if the user's email has been verified."
          },
          "created_at": {
            "type": "string",
            "format": "date",
            "description": "The date that the user was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date",
            "description": "The date that the user was created."
          },
          "display_name": {
            "type": "string"
          },
          "user_name": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "token_version": {
            "description": "Access token version",
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "email_verified"
        ],
        "x-stoplight": {
          "id": "hcruzlenrwb2x"
        }
      },
      "UserInfo": {
        "description": "Model for User Info",
        "examples": [
          {
            "email": "user@example.com",
            "email_verified": true,
            "firstname": "string",
            "id": "string",
            "lastname": "string",
            "roles": null
          }
        ],
        "properties": {
          "email": {
            "description": "User Email",
            "format": "email",
            "type": "string"
          },
          "email_verified": {
            "description": "Set to true if the user's email has been verified.",
            "type": "boolean"
          },
          "firstname": {
            "description": "The firstname of the user",
            "type": "string"
          },
          "id": {
            "description": "User ID",
            "type": "string"
          },
          "lastname": {
            "description": "The lastname of the user",
            "type": "string"
          },
          "roles": {
            "description": "The roles of the user"
          },
          "base_roles": {
            "description": "The base roles of the user"
          },
          "workspace_roles": {
            "description": "The workspace roles of the user"
          }
        },
        "title": "User Info Model",
        "type": "object",
        "x-stoplight": {
          "id": "mzqg7tcf4hglo"
        }
      },
      "UserList": {
        "description": "Model for User List",
        "examples": [
          {
            "list": [
              {
                "email": "user@example.com",
                "email_verified": true,
                "firstname": "Alice",
                "id": "us_8kugj628ebjngs",
                "lastname": "Smith",
                "roles": "org-level-viewer"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "User List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "type": "array",
            "x-stoplight": {
              "id": "8o7v47q3e67ef"
            },
            "description": "List of user objects",
            "items": {
              "$ref": "#/components/schemas/User",
              "x-stoplight": {
                "id": "kwqzxwea9r5er"
              }
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "x-stoplight": {
              "id": "0d98n6sfxfvft"
            },
            "description": "Paginated Info"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ],
        "x-stoplight": {
          "id": "32mz06s4tgptq"
        }
      },
      "View": {
        "description": "Model for View",
        "examples": [
          {
            "source_id": "ds_g4ccx6e77h1dmi",
            "created_at": "2023-03-02 17:46:31",
            "fk_model_id": "md_mhs9z4r2ak98x0",
            "id": "vw_lg052cnc1c26kf",
            "is_default": 1,
            "lock_type": "collaborative",
            "meta": {},
            "order": 1,
            "password": null,
            "base_id": "p_xm3thidrblw4n7",
            "show": 1,
            "show_system_fields": null,
            "title": "Sheet-1",
            "type": 3,
            "updated_at": "2023-03-02 17:46:31",
            "uuid": null,
            "view": {
              "source_id": "ds_g4ccx6e77h1dmi",
              "created_at": "2023-03-02 17:46:31",
              "fk_view_id": "vw_lg052cnc1c26kf",
              "meta": null,
              "base_id": "p_xm3thidrblw4n7",
              "row_height": null,
              "updated_at": "2023-03-02 17:46:31",
              "uuid": null
            }
          }
        ],
        "title": "View Model",
        "type": "object",
        "properties": {
          "source_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique Source ID"
          },
          "fk_model_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique Model ID"
          },
          "id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique ID for View"
          },
          "lock_type": {
            "description": "Lock Type of the view",
            "enum": [
              "collaborative",
              "locked",
              "personal"
            ],
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta data for this view"
          },
          "order": {
            "description": "The rder of the list of views",
            "type": "number"
          },
          "password": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Password for protecting the view"
          },
          "base_id": {
            "$ref": "#/components/schemas/Id",
            "description": "Unique Base ID"
          },
          "show": {
            "$ref": "#/components/schemas/Bool",
            "description": "If this view is shown?"
          },
          "show_system_fields": {
            "$ref": "#/components/schemas/Bool",
            "description": "Should show system fields in this view?"
          },
          "is_default": {
            "$ref": "#/components/schemas/Bool",
            "description": "Is this view default view for the model?"
          },
          "title": {
            "description": "View Title",
            "type": "string"
          },
          "type": {
            "description": "View Type",
            "type": "number"
          },
          "uuid": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "UUID of the view"
          },
          "view": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Form"
              },
              {
                "$ref": "#/components/schemas/Gallery"
              },
              {
                "$ref": "#/components/schemas/Grid"
              },
              {
                "$ref": "#/components/schemas/Kanban"
              },
              {
                "$ref": "#/components/schemas/Map"
              }
            ],
            "description": "Associated View Model"
          }
        },
        "required": [
          "fk_model_id",
          "show",
          "title",
          "type"
        ],
        "x-stoplight": {
          "id": "nobjewdlhxrkq"
        }
      },
      "ViewList": {
        "description": "Model for View List",
        "examples": [
          {
            "list": [
              {
                "alias": "string",
                "column": [
                  {
                    "alias": "string",
                    "auto_increment": true,
                    "auto_update_timestamp": true,
                    "source_id": "string",
                    "character_maximum_length": "string",
                    "character_set_name": "string",
                    "colOptions": {
                      "deleted": "string",
                      "dr": "string",
                      "fk_child_column_id": "string",
                      "fk_column_id": "string",
                      "fk_index_name": "string",
                      "fk_mm_child_column_id": "string",
                      "fk_mm_model_id": "string",
                      "fk_mm_parent_column_id": "string",
                      "fk_parent_column_id": "string",
                      "id": "string",
                      "order": "string",
                      "type": "string",
                      "ur": "string",
                      "virtual": true
                    },
                    "column_comment": "string",
                    "column_default": "string",
                    "column_ordinal_position": "string",
                    "column_type": "string",
                    "data_type": "string",
                    "data_type_x": "string",
                    "data_type_x_precision": "string",
                    "data_type_x_scale": "string",
                    "deleted": true,
                    "fk_model_id": "string",
                    "id": "string",
                    "numeric_precision": "string",
                    "numeric_scale": "string",
                    "order": 0,
                    "primary_key": true,
                    "primary_value": true,
                    "rqd": "string",
                    "title": "string",
                    "ui_data_type": "string",
                    "un": "string",
                    "unique": true,
                    "visible": true
                  }
                ],
                "columnByIds": {},
                "deleted": true,
                "enabled": true,
                "fk_base_id": "string",
                "fk_project_id": "string",
                "id": "string",
                "order": 0,
                "parent_id": "string",
                "pinned": true,
                "show_as": "string",
                "tags": "string",
                "title": "string",
                "type": "string"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "View List Model",
        "type": "object",
        "x-examples": {
          "example-1": {
            "sources": {
              "list": [
                {
                  "alias": "string",
                  "database": "string",
                  "host": "string",
                  "id": "string",
                  "params": "string",
                  "password": "string",
                  "port": 0,
                  "base_id": "string",
                  "ssl": "string",
                  "type": "string",
                  "url": "string",
                  "username": "string"
                }
              ],
              "pageInfo": {
                "isFirstPage": true,
                "isLastPage": true,
                "pageSize": 0,
                "sort": "string",
                "totalRows": 0
              }
            }
          }
        },
        "properties": {
          "list": {
            "type": "array",
            "description": "List of view objects",
            "items": {
              "$ref": "#/components/schemas/View"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "description": "Paginated Info"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ],
        "x-stoplight": {
          "id": "a1f99jvpiuugl"
        }
      },
      "ViewCreateReq": {
        "type": "object",
        "x-stoplight": {
          "id": "zvdo4i7c70jmo"
        },
        "title": "ViewCreateReq",
        "description": "Model for View Create Request",
        "examples": [
          {
            "title": "My Grid View",
            "type": 3,
            "copy_from_id": null,
            "fk_grp_col_id": null,
            "fk_geo_data_col_id": null
          },
          {
            "title": "My Gallery View",
            "type": 2,
            "copy_from_id": null,
            "fk_grp_col_id": null,
            "fk_geo_data_col_id": null
          },
          {
            "title": "My Form View",
            "type": 1,
            "copy_from_id": null,
            "fk_grp_col_id": null,
            "fk_geo_data_col_id": null
          },
          {
            "title": "My Kanban View",
            "type": 4,
            "copy_from_id": null,
            "fk_grp_col_id": "cl_g0a89q9xdry3lu",
            "fk_geo_data_col_id": null
          },
          {
            "title": "My Map View",
            "type": 5,
            "copy_from_id": null,
            "fk_grp_col_id": null,
            "fk_geo_data_col_id": "cl_uu1meolj00tlrq"
          }
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "View Title",
            "example": "My View"
          },
          "type": {
            "type": "number",
            "description": "View Type"
          },
          "copy_from_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "ID of view to be copied from. Used in Copy View."
          },
          "fk_grp_col_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Foreign Key to Grouping Column. Used in creating Kanban View."
          },
          "fk_geo_data_col_id": {
            "$ref": "#/components/schemas/StringOrNull",
            "description": "Foreign Key to Geo Data Column. Used in creating Map View."
          }
        },
        "required": [
          "title"
        ]
      },
      "ViewUpdateReq": {
        "description": "Model for View Update Request",
        "x-stoplight": {
          "id": "7inf594lhs8mh"
        },
        "examples": [
          {
            "title": "Grid View 1",
            "uuid": "e2457bbf-e29c-4fec-866e-fe3b01dba57f",
            "password": "password123",
            "lock_type": "collaborative",
            "meta": "{\"allowCSVDownload\":true}",
            "order": 1,
            "show_system_fields": 0
          }
        ],
        "title": "View Update Request Model",
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "type": "string",
            "description": "View Title",
            "example": "Grid View 1"
          },
          "uuid": {
            "maxLength": 255,
            "type": "string",
            "x-stoplight": {
              "id": "vlhs7xs644u8l"
            },
            "description": "View UUID. Used in Shared View.",
            "example": "e2457bbf-e29c-4fec-866e-fe3b01dba57f"
          },
          "password": {
            "maxLength": 255,
            "type": "string",
            "x-stoplight": {
              "id": "vlhs7xs644u8l"
            },
            "description": "View Password. Used in Shared View.",
            "example": "password123"
          },
          "lock_type": {
            "enum": [
              "collaborative",
              "locked",
              "personal"
            ],
            "type": "string",
            "description": "Lock type of View.",
            "example": "collaborative"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Meta info used in View."
          },
          "order": {
            "type": "number",
            "description": "The order of the list of views.",
            "example": 1,
            "minimum": 0
          },
          "show_system_fields": {
            "$ref": "#/components/schemas/Bool",
            "description": "Should this view show system fields?"
          }
        }
      },
      "ViewColumnUpdateReq": {
        "description": "Model for View Column Update Request",
        "x-stoplight": {
          "id": "7xso36z6hvh43"
        },
        "examples": [
          {
            "show": 0,
            "order": 1
          }
        ],
        "title": "View Column Update Request Model",
        "type": "object",
        "properties": {
          "show": {
            "$ref": "#/components/schemas/Bool",
            "description": "View Title",
            "x-stoplight": {
              "id": "coxius73ejq5x"
            }
          },
          "order": {
            "type": "number",
            "description": "The order of the list of views.",
            "example": 1,
            "minimum": 0
          }
        }
      },
      "ViewColumnReq": {
        "description": "Model for View Column Request",
        "x-stoplight": {
          "id": "ofapz0gzl35z2"
        },
        "examples": [
          {
            "fk_column_id": "cl_5jestblzneb649",
            "show": 0,
            "order": 1
          }
        ],
        "title": "View Column Request Model",
        "type": "object",
        "properties": {
          "fk_column_id": {
            "$ref": "#/components/schemas/Id",
            "x-stoplight": {
              "id": "rxd07wvp9hf6s"
            },
            "description": "Foreign Key to Column"
          },
          "show": {
            "$ref": "#/components/schemas/Bool",
            "description": "View Title",
            "x-stoplight": {
              "id": "coxius73ejq5x"
            }
          },
          "order": {
            "type": "number",
            "description": "The order of the list of views.",
            "example": 1,
            "minimum": 0
          }
        }
      },
      "VisibilityRuleReq": {
        "description": "Model for Visibility Rule Request",
        "examples": [
          [
            {
              "disabled": {
                "commenter": true,
                "creator": true,
                "editor": true,
                "guest": true,
                "owner": true,
                "viewer": true
              }
            }
          ]
        ],
        "items": {
          "properties": {
            "id": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "disabled": {
              "properties": {
                "commenter": {
                  "$ref": "#/components/schemas/Bool"
                },
                "creator": {
                  "$ref": "#/components/schemas/Bool"
                },
                "editor": {
                  "$ref": "#/components/schemas/Bool"
                },
                "guest": {
                  "$ref": "#/components/schemas/Bool"
                },
                "owner": {
                  "$ref": "#/components/schemas/Bool"
                },
                "viewer": {
                  "$ref": "#/components/schemas/Bool"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "title": "Visibility Rule Request Model",
        "type": "array",
        "x-stoplight": {
          "id": "xu5zgt0fc3ms9"
        }
      },
      "Webhook": {
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "title": "Webhook",
        "type": "object"
      },
      "ProjectInviteEvent": {
        "type": "object",
        "properties": {
          "fk_user_id": {
            "type": "string",
            "description": "The ID of the user who receives the base invite"
          },
          "type": {
            "type": "string",
            "description": "The type of event, which should be set to 'PROJECT_INVITE'"
          },
          "body": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the base being invited to"
              },
              "title": {
                "type": "string",
                "description": "The title of the base being invited to"
              },
              "type": {
                "type": "string",
                "description": "The type of the base being invited to"
              },
              "invited_by": {
                "type": "string",
                "description": "The email address of the user who invited the recipient"
              }
            },
            "required": [
              "id",
              "title",
              "type",
              "invited_by"
            ]
          }
        },
        "required": [
          "fk_user_id",
          "type",
          "body"
        ]
      },
      "ProjectEvent": {
        "type": "object",
        "properties": {
          "fk_user_id": {
            "type": "string",
            "description": "The ID of the user"
          },
          "type": {
            "type": "string"
          },
          "body": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the base"
              },
              "title": {
                "type": "string",
                "description": "The title of the base"
              },
              "type": {
                "type": "string",
                "description": "The type of the base"
              }
            },
            "required": [
              "id",
              "title",
              "type"
            ]
          }
        },
        "required": [
          "fk_user_id",
          "type",
          "body"
        ]
      },
      "WelcomeEvent": {
        "type": "object",
        "properties": {
          "fk_user_id": {
            "type": "string",
            "description": "The ID of the user receiving the welcome message"
          },
          "type": {
            "type": "string",
            "description": "The type of event, which should be set to 'WELCOME'"
          },
          "body": {
            "type": "object",
            "description": "An empty object"
          }
        },
        "required": [
          "fk_user_id",
          "type",
          "body"
        ]
      },
      "SortEvent": {
        "type": "object",
        "properties": {
          "fk_user_id": {
            "type": "string",
            "description": "The ID of the user who created sort"
          },
          "type": {
            "type": "string"
          },
          "body": {
            "type": "object"
          }
        },
        "required": [
          "fk_user_id",
          "type",
          "body"
        ]
      },
      "FilterEvent": {
        "type": "object",
        "properties": {
          "fk_user_id": {
            "type": "string",
            "description": "The ID of the user who created filter"
          },
          "type": {
            "type": "string"
          },
          "body": {
            "type": "object"
          }
        },
        "required": [
          "fk_user_id",
          "type",
          "body"
        ]
      },
      "TableEvent": {
        "type": "object",
        "properties": {
          "fk_user_id": {
            "type": "string",
            "description": "The ID of the user who triggered the event"
          },
          "type": {
            "type": "string",
            "description": "The type of the event"
          },
          "body": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "The title of the table associated with the event"
              },
              "base_id": {
                "type": "string",
                "description": "The ID of the base that the table belongs to"
              },
              "source_id": {
                "type": "string",
                "description": "The ID of the source that the table belongs to"
              },
              "id": {
                "type": "string",
                "description": "The ID of the table associated with the event"
              }
            },
            "required": [
              "title",
              "base_id",
              "source_id",
              "id"
            ]
          }
        },
        "required": [
          "fk_user_id",
          "type",
          "body"
        ]
      },
      "ViewEvent": {
        "type": "object",
        "properties": {
          "fk_user_id": {
            "type": "string",
            "description": "The ID of the user who triggered the event"
          },
          "type": {
            "type": "string",
            "description": "The type of the event"
          },
          "body": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "The title of the view associated with the event"
              },
              "base_id": {
                "type": "string",
                "description": "The ID of the base that the view belongs to"
              },
              "source_id": {
                "type": "string",
                "description": "The ID of the source that the view belongs to"
              },
              "id": {
                "type": "string",
                "description": "The ID of the view associated with the event"
              },
              "fk_model_id": {
                "type": "string",
                "description": "The ID of the model that the view is based on"
              }
            },
            "required": [
              "title",
              "base_id",
              "source_id",
              "id",
              "fk_model_id"
            ]
          }
        },
        "required": [
          "fk_user_id",
          "type",
          "body"
        ]
      },
      "ColumnEvent": {
        "type": "object",
        "properties": {
          "fk_user_id": {
            "type": "string",
            "description": "The ID of the user who triggered the event"
          },
          "type": {
            "type": "string",
            "description": "The type of the event"
          },
          "body": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "The title of the column associated with the event"
              },
              "base_id": {
                "type": "string",
                "description": "The ID of the base that the column belongs to"
              },
              "source_id": {
                "type": "string",
                "description": "The ID of the source that the column belongs to"
              },
              "id": {
                "type": "string",
                "description": "The ID of the column associated with the event"
              },
              "fk_model_id": {
                "type": "string",
                "description": "The ID of the model that the column belongs to"
              }
            },
            "required": [
              "title",
              "base_id",
              "source_id",
              "id",
              "fk_model_id"
            ]
          }
        },
        "required": [
          "fk_user_id",
          "type",
          "body"
        ]
      },
      "Notification": {
        "allOf": [
          {
            "description": "",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/Id",
                "description": "Unique ID"
              },
              "is_read": {
                "type": "boolean",
                "description": "Whether the notification has been read by the user"
              },
              "is_deleted": {
                "type": "boolean",
                "description": "Whether the notification has been deleted by the user"
              },
              "type": {
                "type": "string",
                "description": "Type of notification"
              },
              "updated_at": {},
              "created_at": {}
            },
            "title": "Notification",
            "type": "object"
          },
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProjectInviteEvent"
              },
              {
                "$ref": "#/components/schemas/ProjectEvent"
              },
              {
                "$ref": "#/components/schemas/TableEvent"
              },
              {
                "$ref": "#/components/schemas/ViewEvent"
              },
              {
                "$ref": "#/components/schemas/ColumnEvent"
              },
              {
                "$ref": "#/components/schemas/WelcomeEvent"
              },
              {
                "$ref": "#/components/schemas/SortEvent"
              },
              {
                "$ref": "#/components/schemas/FilterEvent"
              }
            ]
          }
        ]
      },
      "NotificationList": {
        "description": "Model for Notification List",
        "examples": [
          {
            "list": [
              {
                "body": {
                },
                "type": "invite",
                "is_read": false,
                "is_deleted": false,
                "id": "1",
                "updated_at": "2020-05-20T12:00:00.000000Z",
                "created_at": "2020-05-20T12:00:00.000000Z",
                "fk_user_id": "us_b3xo2i44nx5y9l"
              }
            ],
            "pageInfo": {
              "isFirstPage": true,
              "isLastPage": true,
              "page": 1,
              "pageSize": 10,
              "totalRows": 1
            }
          }
        ],
        "title": "API Token List Model",
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "description": "List of notification objects",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "description": "Model for Paginated"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ]
      },
      "NotificationUpdate": {
        "type": "object",
        "properties": {
          "is_read": {
            "type": "boolean"
          }
        }
      }
    },
    "responses": {
      "ProjectList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProjectList"
            },
            "examples": {
              "example-1": {
                "value": {
                  "list": [
                    {
                      "sources": [
                        {
                          "alias": "string",
                          "config": null,
                          "created_at": "2023-03-01 14:27:36",
                          "enabled": true,
                          "id": "string",
                          "inflection_column": "camelize",
                          "inflection_table": "camelize",
                          "is_meta": true,
                          "order": 1,
                          "base_id": "string",
                          "type": "mysql2",
                          "updated_at": "2023-03-01 14:27:36"
                        }
                      ],
                      "color": "#24716E",
                      "created_at": "2023-03-01 14:27:36",
                      "deleted": true,
                      "description": "This is my base description",
                      "id": "p_124hhlkbeasewh",
                      "is_meta": true,
                      "meta": {},
                      "order": 0,
                      "prefix": "nc_vm5q__",
                      "status": "string",
                      "title": "my-base",
                      "updated_at": "2023-03-01 14:27:36"
                    }
                  ],
                  "pageInfo": {
                    "isFirstPage": true,
                    "isLastPage": true,
                    "page": 1,
                    "pageSize": 10,
                    "totalRows": 1
                  }
                }
              }
            }
          }
        }
      },
      "BaseList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BaseList"
            },
            "examples": {
              "example-1": {
                "value": {
                  "list": [
                    {
                      "id": "ds_krsappzu9f8vmo",
                      "base_id": "p_01clqvzik3izk6",
                      "alias": null,
                      "config": "<ENCRYPTED>",
                      "meta": null,
                      "is_meta": 1,
                      "type": "mysql2",
                      "inflection_column": "camelize",
                      "inflection_table": "camelize",
                      "created_at": "2023-03-01 16:31:49",
                      "updated_at": "2023-03-02 11:28:17",
                      "enabled": 1,
                      "order": 1
                    },
                    {
                      "id": "ds_btbdt19zde0gj9",
                      "base_id": "p_01clqvzik3izk6",
                      "alias": "sakila",
                      "config": "<ENCRYPTED>",
                      "meta": null,
                      "is_meta": null,
                      "type": "mysql2",
                      "inflection_column": "camelize",
                      "inflection_table": "camelize",
                      "created_at": "2023-03-02 11:28:17",
                      "updated_at": "2023-03-02 11:28:17",
                      "enabled": 1,
                      "order": 2
                    }
                  ],
                  "pageInfo": {
                    "totalRows": 2,
                    "page": 1,
                    "pageSize": 2,
                    "isFirstPage": true,
                    "isLastPage": true
                  }
                }
              }
            }
          }
        }
      },
      "TableList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TableList"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "list": [
                    {
                      "id": "md_5hua2iqloqirhd",
                      "source_id": "ds_jxuewivwbxeum2",
                      "base_id": "p_tbhl1hnycvhe5l",
                      "table_name": "nc_b84e___Sheet-1",
                      "title": "Sheet-1",
                      "type": "table",
                      "meta": null,
                      "schema": null,
                      "enabled": true,
                      "mm": false,
                      "tags": null,
                      "pinned": null,
                      "deleted": null,
                      "order": 1,
                      "created_at": "2023-03-11T09:11:45.907Z",
                      "updated_at": "2023-03-11T09:11:45.907Z"
                    }
                  ],
                  "pageInfo": {
                    "isFirstPage": true,
                    "isLastPage": true,
                    "page": 1,
                    "pageSize": 10,
                    "totalRows": 1
                  }
                }
              }
            }
          }
        }
      },
      "ColumnList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ColumnList"
            }
          }
        }
      },
      "FilterList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FilterList"
            }
          }
        }
      },
      "SortList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SortList"
            },
            "examples": {}
          }
        }
      },
      "ViewList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ViewList"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "list": [
                    {
                      "alias": "string",
                      "column": [
                        {
                          "alias": "string",
                          "auto_increment": true,
                          "auto_update_timestamp": true,
                          "source_id": "string",
                          "character_maximum_length": "string",
                          "character_set_name": "string",
                          "colOptions": {
                            "deleted": "string",
                            "dr": "string",
                            "fk_child_column_id": "string",
                            "fk_column_id": "string",
                            "fk_index_name": "string",
                            "fk_mm_child_column_id": "string",
                            "fk_mm_model_id": "string",
                            "fk_mm_parent_column_id": "string",
                            "fk_parent_column_id": "string",
                            "id": "string",
                            "order": "string",
                            "type": "string",
                            "ur": "string",
                            "virtual": true
                          },
                          "column_comment": "string",
                          "column_default": "string",
                          "column_ordinal_position": "string",
                          "column_type": "string",
                          "data_type": "string",
                          "data_type_x": "string",
                          "data_type_x_precision": "string",
                          "data_type_x_scale": "string",
                          "deleted": true,
                          "fk_model_id": "string",
                          "id": "string",
                          "numeric_precision": "string",
                          "numeric_scale": "string",
                          "order": 0,
                          "primary_key": true,
                          "primary_value": true,
                          "rqd": "string",
                          "title": "string",
                          "ui_data_type": "string",
                          "un": "string",
                          "unique": true,
                          "visible": true
                        }
                      ],
                      "columnByIds": {},
                      "deleted": true,
                      "enabled": true,
                      "fk_base_id": "string",
                      "fk_project_id": "string",
                      "id": "string",
                      "order": 0,
                      "parent_id": "string",
                      "pinned": true,
                      "show_as": "string",
                      "tags": "string",
                      "title": "string",
                      "type": "string"
                    }
                  ],
                  "pageInfo": {
                    "isFirstPage": true,
                    "isLastPage": true,
                    "page": 1,
                    "pageSize": 10,
                    "totalRows": 1
                  }
                }
              }
            }
          }
        }
      },
      "SharedViewList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SharedViewList"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "list": [
                    {
                      "source_id": "ds_g4ccx6e77h1dmi",
                      "created_at": "2023-03-02 17:46:31",
                      "fk_model_id": "md_mhs9z4r2ak98x0",
                      "id": "vw_lg052cnc1c26kf",
                      "is_default": 1,
                      "lock_type": "collaborative",
                      "meta": {},
                      "order": 1,
                      "password": null,
                      "base_id": "p_xm3thidrblw4n7",
                      "show": 1,
                      "show_system_fields": null,
                      "title": "Sheet-1",
                      "type": 3,
                      "updated_at": "2023-03-02 17:46:31",
                      "uuid": null,
                      "view": {
                        "source_id": "ds_g4ccx6e77h1dmi",
                        "created_at": "2023-03-02 17:46:31",
                        "fk_view_id": "vw_lg052cnc1c26kf",
                        "meta": null,
                        "base_id": "p_xm3thidrblw4n7",
                        "row_height": null,
                        "updated_at": "2023-03-02 17:46:31",
                        "uuid": null
                      }
                    }
                  ],
                  "pageInfo": {
                    "isFirstPage": true,
                    "isLastPage": true,
                    "page": 1,
                    "pageSize": 10,
                    "totalRows": 1
                  }
                }
              }
            }
          }
        }
      },
      "HookList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HookList"
            }
          }
        }
      },
      "UserList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserList"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "list": [
                    {
                      "email": "user@example.com",
                      "email_verified": true,
                      "firstname": "Alice",
                      "id": "us_8kugj628ebjngs",
                      "lastname": "Smith",
                      "roles": "org-level-viewer"
                    }
                  ],
                  "pageInfo": {
                    "isFirstPage": true,
                    "isLastPage": true,
                    "page": 1,
                    "pageSize": 10,
                    "totalRows": 1
                  }
                }
              }
            }
          }
        }
      },
      "APITokenList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiTokenList"
            },
            "examples": {}
          }
        },
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "x-stoplight": {
              "id": "uukp6v55zfp7i"
            },
            "items": {
              "$ref": "#/components/schemas/ApiToken",
              "x-stoplight": {
                "id": "9zqpoqfkdxy0y"
              }
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/Paginated",
            "x-stoplight": {
              "id": "6unr17jyisial"
            }
          }
        }
      },
      "BadRequest": {
        "description": "BadReqeust",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "p9mk4oi0hbihm"
                  },
                  "example": "BadRequest [Error]: <ERROR MESSAGE>"
                }
              },
              "required": [
                "msg"
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "msg": "BadRequest [Error]: <ERROR MESSAGE>"
                }
              }
            }
          }
        },
        "headers": {}
      }
    },
    "securitySchemes": {
      "xc-auth": {
        "name": "Auth Token ",
        "type": "apiKey",
        "in": "header",
        "description": "Auth Token is a JWT Token generated based on the logged-in user. By default, the token is only valid for 10 hours. However, you can change the value by defining it using environment variable `NC_JWT_EXPIRES_IN`."
      },
      "xc-shared-base-id": {
        "name": "Shared Base ID",
        "type": "apiKey",
        "in": "header",
        "description": "Shared base uuid"
      },
      "xc-shared-erd-id": {
        "name": "Shared ERD ID",
        "type": "apiKey",
        "in": "header",
        "description": "Shared ERD uuid"
      }
    },
    "parameters": {
      "xc-auth": {
        "name": "xc-auth",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Auth Token is a JWT Token generated based on the logged-in user. By default, the token is only valid for 10 hours. However, you can change the value by defining it using environment variable NC_JWT_EXPIRES_IN."
      }
    }
  }
}
